<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1094.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1077" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1077" > </text>
<g id="frames">
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (407,660,259 samples, 0.31%)</title><rect x="981.8" y="277" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="984.80" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (47,237,949 samples, 0.04%)</title><rect x="231.9" y="261" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="234.94" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (432,995,992 samples, 0.33%)</title><rect x="986.2" y="197" width="3.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="989.15" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (51,639,191 samples, 0.04%)</title><rect x="992.8" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="995.83" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (664,226,740 samples, 0.51%)</title><rect x="450.4" y="341" width="5.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="453.36" y="351.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (23,410,572 samples, 0.02%)</title><rect x="321.8" y="309" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="324.76" y="319.5" ></text>
</g>
<g >
<title>[[stack]] (435,008,490 samples, 0.33%)</title><rect x="21.4" y="1013" width="3.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="24.36" y="1023.5" ></text>
</g>
<g >
<title>CNF::is_pure (94,802,573 samples, 0.07%)</title><rect x="29.8" y="533" width="0.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="32.85" y="543.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (42,718,636 samples, 0.03%)</title><rect x="219.0" y="421" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="222.00" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (23,821,996 samples, 0.02%)</title><rect x="62.4" y="405" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="65.40" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (47,674,912 samples, 0.04%)</title><rect x="714.8" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="717.84" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (467,928,370 samples, 0.36%)</title><rect x="220.5" y="389" width="4.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="223.49" y="399.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (89,537,151 samples, 0.07%)</title><rect x="441.6" y="325" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="444.55" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (217,272,353 samples, 0.17%)</title><rect x="336.9" y="277" width="1.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="339.89" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (4,412,582,477 samples, 3.37%)</title><rect x="1144.7" y="277" width="39.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1147.69" y="287.5" >CNF..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (217,181,865 samples, 0.17%)</title><rect x="596.2" y="277" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="599.19" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (117,447,436 samples, 0.09%)</title><rect x="94.8" y="405" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="97.83" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,535,558 samples, 0.10%)</title><rect x="333.1" y="341" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="336.07" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (566,469,130 samples, 0.43%)</title><rect x="1053.0" y="261" width="5.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1056.03" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (75,468,277 samples, 0.06%)</title><rect x="916.0" y="213" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="918.96" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (23,460,872 samples, 0.02%)</title><rect x="1189.0" y="437" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1192.02" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (51,607,527 samples, 0.04%)</title><rect x="594.2" y="229" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="597.20" y="239.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="37" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1109.54" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (23,713,505 samples, 0.02%)</title><rect x="807.7" y="245" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="810.68" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (19,008,653 samples, 0.01%)</title><rect x="1188.2" y="373" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (14,280,057 samples, 0.01%)</title><rect x="1185.3" y="309" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1188.34" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,290,125 samples, 0.01%)</title><rect x="149.2" y="341" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="152.17" y="351.5" ></text>
</g>
<g >
<title>_int_free (14,279,022 samples, 0.01%)</title><rect x="594.5" y="197" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="597.50" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,016,872 samples, 0.06%)</title><rect x="572.2" y="341" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="575.23" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,095,153 samples, 0.04%)</title><rect x="93.2" y="405" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="96.21" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,815,470 samples, 0.02%)</title><rect x="89.2" y="405" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="92.20" y="415.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="101" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1184.33" y="111.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,541,679 samples, 0.02%)</title><rect x="60.4" y="421" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="63.36" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (61,362,275 samples, 0.05%)</title><rect x="595.0" y="357" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="597.97" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (65,865,680 samples, 0.05%)</title><rect x="914.2" y="293" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="917.19" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="165" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1059.73" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (127,683,098 samples, 0.10%)</title><rect x="232.6" y="277" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="235.58" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (33,175,021 samples, 0.03%)</title><rect x="439.8" y="389" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="442.85" y="399.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (9,544,607,014 samples, 7.28%)</title><rect x="233.8" y="421" width="85.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="236.77" y="431.5" >CNF::find_..</text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (80,256,363 samples, 0.06%)</title><rect x="916.0" y="245" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="918.96" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (27,997,198 samples, 0.02%)</title><rect x="1057.6" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.58" y="207.5" ></text>
</g>
<g >
<title>main (128,928,083,311 samples, 98.34%)</title><rect x="29.6" y="965" width="1160.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="32.59" y="975.5" >main</text>
</g>
<g >
<title>CNF::propagate_var_single_value (179,073,934 samples, 0.14%)</title><rect x="808.1" y="357" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="811.11" y="367.5" ></text>
</g>
<g >
<title>CNF::CNF (70,615,470 samples, 0.05%)</title><rect x="1106.0" y="277" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1109.04" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (33,149,839 samples, 0.03%)</title><rect x="45.5" y="389" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="48.45" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (217,377,688 samples, 0.17%)</title><rect x="456.3" y="341" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="459.33" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="149" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1187.67" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (103,974,524 samples, 0.08%)</title><rect x="714.3" y="277" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="717.33" y="287.5" ></text>
</g>
<g >
<title>CNF::is_pure (9,842,569,920 samples, 7.51%)</title><rect x="718.5" y="341" width="88.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="721.54" y="351.5" >CNF::is_pure</text>
</g>
<g >
<title>CNF::find_pure_literals (10,624,928,847 samples, 8.10%)</title><rect x="598.1" y="373" width="95.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="601.15" y="383.5" >CNF::find_p..</text>
</g>
<g >
<title>operator new (42,179,607 samples, 0.03%)</title><rect x="915.5" y="213" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="918.54" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (141,348,479 samples, 0.11%)</title><rect x="581.7" y="293" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="584.67" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="293" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1187.67" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (129,079,916 samples, 0.10%)</title><rect x="573.0" y="277" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="576.03" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (52,221,708 samples, 0.04%)</title><rect x="37.2" y="437" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="40.21" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (37,519,897 samples, 0.03%)</title><rect x="695.9" y="245" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="698.89" y="255.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,918,528,976 samples, 98.33%)</title><rect x="29.6" y="581" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.64" y="591.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (718,354,156 samples, 0.55%)</title><rect x="443.3" y="341" width="6.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="446.29" y="351.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (14,112,234 samples, 0.01%)</title><rect x="1098.5" y="293" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1101.46" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (732,659,572 samples, 0.56%)</title><rect x="1099.4" y="277" width="6.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1102.40" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="165" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1180.31" y="175.5" ></text>
</g>
<g >
<title>CNF::solve_helper (14,021,797,980 samples, 10.70%)</title><rect x="1058.5" y="309" width="126.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1061.46" y="319.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_malloc (108,183,963 samples, 0.08%)</title><rect x="150.6" y="309" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="153.57" y="319.5" ></text>
</g>
<g >
<title>CNF::~CNF (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="421" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.40" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (719,788,069 samples, 0.55%)</title><rect x="705.0" y="293" width="6.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="708.00" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (19,056,567 samples, 0.01%)</title><rect x="1106.4" y="53" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1109.37" y="63.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (23,799,057 samples, 0.02%)</title><rect x="17.6" y="981" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="20.57" y="991.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (193,151,952 samples, 0.15%)</title><rect x="711.5" y="293" width="1.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="714.48" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,073,652 samples, 0.01%)</title><rect x="1185.2" y="309" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1188.17" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (61,428,716 samples, 0.05%)</title><rect x="230.6" y="325" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="233.62" y="335.5" ></text>
</g>
<g >
<title>operator new (155,764,780 samples, 0.12%)</title><rect x="596.3" y="181" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.28" y="191.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (61,565,856 samples, 0.05%)</title><rect x="439.8" y="405" width="0.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="442.81" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,291,015 samples, 0.01%)</title><rect x="1175.9" y="245" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1178.86" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (230,032,315 samples, 0.18%)</title><rect x="694.5" y="373" width="2.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="697.55" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (732,644,314 samples, 0.56%)</title><rect x="443.2" y="373" width="6.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="446.16" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,220,566 samples, 0.01%)</title><rect x="45.3" y="453" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="48.28" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="261" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="600.72" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (85,075,966 samples, 0.06%)</title><rect x="826.8" y="117" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="829.76" y="127.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (6,018,213,938 samples, 4.59%)</title><rect x="993.9" y="309" width="54.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="996.94" y="319.5" >CNF::..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (70,364,336 samples, 0.05%)</title><rect x="1058.6" y="245" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1061.59" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (70,854,212 samples, 0.05%)</title><rect x="808.9" y="341" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="811.91" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (206,903,202 samples, 0.16%)</title><rect x="1139.7" y="197" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1142.69" y="207.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="693" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="703.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (178,202,436 samples, 0.14%)</title><rect x="591.2" y="261" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="594.21" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (18,215,544 samples, 0.01%)</title><rect x="38.0" y="357" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="40.98" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (89,149,546 samples, 0.07%)</title><rect x="459.3" y="293" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="462.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,254,888 samples, 0.01%)</title><rect x="809.6" y="325" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="812.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,280,286 samples, 0.01%)</title><rect x="218.8" y="405" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="221.75" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (19,083,890 samples, 0.01%)</title><rect x="17.8" y="821" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="20.78" y="831.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,766,585 samples, 0.02%)</title><rect x="89.5" y="405" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="92.54" y="415.5" ></text>
</g>
<g >
<title>operator new (99,070,798 samples, 0.08%)</title><rect x="461.5" y="277" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="464.49" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (33,243,382 samples, 0.03%)</title><rect x="231.4" y="389" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="234.43" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (127,208,540 samples, 0.10%)</title><rect x="1047.0" y="261" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1049.96" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,716,270 samples, 0.02%)</title><rect x="592.6" y="213" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="595.60" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (103,582,866 samples, 0.08%)</title><rect x="990.2" y="181" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="993.18" y="191.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (70,875,683 samples, 0.05%)</title><rect x="993.3" y="261" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="996.30" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="229" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1109.04" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (169,675,579 samples, 0.13%)</title><rect x="805.6" y="325" width="1.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="808.55" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (151,093,938 samples, 0.12%)</title><rect x="337.4" y="181" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="340.45" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,562,236 samples, 0.03%)</title><rect x="1165.5" y="101" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1168.45" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (19,050,022 samples, 0.01%)</title><rect x="319.8" y="405" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="322.85" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (33,240,497 samples, 0.03%)</title><rect x="63.3" y="357" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="66.26" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (108,763,483 samples, 0.08%)</title><rect x="826.6" y="133" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="829.59" y="143.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="245" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="341.85" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (140,813,531 samples, 0.11%)</title><rect x="822.5" y="213" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="825.53" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (28,445,331 samples, 0.02%)</title><rect x="1187.8" y="261" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.85" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,313,046 samples, 0.02%)</title><rect x="442.4" y="325" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="445.40" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (103,189,067 samples, 0.08%)</title><rect x="95.0" y="245" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="97.95" y="255.5" ></text>
</g>
<g >
<title>CNF::CNF (207,621,789 samples, 0.16%)</title><rect x="231.9" y="421" width="1.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="234.90" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="389" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.27" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (57,210,523 samples, 0.04%)</title><rect x="327.0" y="325" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="329.99" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (103,189,067 samples, 0.08%)</title><rect x="95.0" y="341" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="97.95" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="373" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.40" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (108,284,139 samples, 0.08%)</title><rect x="1104.5" y="229" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1107.54" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (65,865,680 samples, 0.05%)</title><rect x="914.2" y="309" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="917.19" y="319.5" ></text>
</g>
<g >
<title>operator new (14,206,441 samples, 0.01%)</title><rect x="694.2" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="697.16" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,119,743 samples, 0.01%)</title><rect x="1058.3" y="277" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1061.25" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (37,452,399 samples, 0.03%)</title><rect x="715.9" y="341" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="718.95" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,210,454 samples, 0.01%)</title><rect x="1189.1" y="405" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.10" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (23,571,968 samples, 0.02%)</title><rect x="322.0" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="324.97" y="367.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,721,841 samples, 0.02%)</title><rect x="1144.8" y="213" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1147.78" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,355,401 samples, 0.02%)</title><rect x="148.9" y="309" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="151.92" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (103,582,866 samples, 0.08%)</title><rect x="990.2" y="165" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="993.18" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (42,348,808 samples, 0.03%)</title><rect x="1144.0" y="165" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1146.97" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="245" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.25" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (274,276,252 samples, 0.21%)</title><rect x="336.7" y="373" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="339.72" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (32,614,505 samples, 0.02%)</title><rect x="1106.3" y="69" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1109.25" y="79.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (184,356,121 samples, 0.14%)</title><rect x="1141.7" y="165" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1144.72" y="175.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,281,010 samples, 0.03%)</title><rect x="900.4" y="229" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.38" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (66,801,443 samples, 0.05%)</title><rect x="815.7" y="261" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="818.69" y="271.5" ></text>
</g>
<g >
<title>operator new (28,473,485 samples, 0.02%)</title><rect x="63.3" y="277" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="66.30" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (70,875,683 samples, 0.05%)</title><rect x="993.3" y="245" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="996.30" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (13,968,013 samples, 0.01%)</title><rect x="150.1" y="293" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="153.06" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (355,147,394 samples, 0.27%)</title><rect x="1053.5" y="245" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1056.53" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (18,498,301 samples, 0.01%)</title><rect x="45.8" y="261" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="48.84" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,548,051 samples, 0.03%)</title><rect x="980.7" y="261" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="983.70" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="293" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1191.40" y="303.5" ></text>
</g>
<g >
<title>_int_free (26,338,420 samples, 0.02%)</title><rect x="1188.5" y="229" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1191.53" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,646,368 samples, 0.01%)</title><rect x="981.1" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="984.09" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,221,708 samples, 0.04%)</title><rect x="37.2" y="453" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="40.21" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (136,958,428 samples, 0.10%)</title><rect x="716.9" y="325" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="719.92" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (113,516,251 samples, 0.09%)</title><rect x="140.0" y="421" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="142.98" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (46,747,273 samples, 0.04%)</title><rect x="595.7" y="309" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="598.69" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (68,295,045 samples, 0.05%)</title><rect x="25.5" y="997" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="28.54" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (38,044,976 samples, 0.03%)</title><rect x="980.7" y="213" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="983.70" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (47,418,057 samples, 0.04%)</title><rect x="985.0" y="229" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="988.04" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (113,516,251 samples, 0.09%)</title><rect x="140.0" y="405" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="142.98" y="415.5" ></text>
</g>
<g >
<title>operator new (23,713,505 samples, 0.02%)</title><rect x="807.7" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="810.68" y="223.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (56,165,246 samples, 0.04%)</title><rect x="44.8" y="469" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="47.78" y="479.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,477,988 samples, 0.03%)</title><rect x="1176.9" y="149" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1179.93" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,093,514 samples, 0.05%)</title><rect x="36.5" y="437" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.53" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.02" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (99,070,798 samples, 0.08%)</title><rect x="461.5" y="357" width="0.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="464.49" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (47,167,439 samples, 0.04%)</title><rect x="1183.0" y="213" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1186.04" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (71,235,210 samples, 0.05%)</title><rect x="321.1" y="325" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.08" y="335.5" ></text>
</g>
<g >
<title>_int_free (32,694,705 samples, 0.02%)</title><rect x="27.0" y="997" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="30.04" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (192,310,206 samples, 0.15%)</title><rect x="591.1" y="309" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="594.12" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,318,169 samples, 0.03%)</title><rect x="1181.0" y="165" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1183.99" y="175.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (99,254,175 samples, 0.08%)</title><rect x="807.2" y="357" width="0.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="810.22" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,815,470 samples, 0.02%)</title><rect x="89.2" y="437" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="92.20" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (14,206,441 samples, 0.01%)</title><rect x="694.2" y="277" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="697.16" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (117,948,947 samples, 0.09%)</title><rect x="440.4" y="389" width="1.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="443.36" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (33,265,058 samples, 0.03%)</title><rect x="1099.0" y="277" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1102.02" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="149" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1061.59" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="213" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="466.44" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="181" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="600.72" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,399,581 samples, 0.04%)</title><rect x="980.2" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="983.15" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (179,100,354 samples, 0.14%)</title><rect x="711.6" y="261" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="714.60" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (23,876,980 samples, 0.02%)</title><rect x="27.3" y="997" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="30.34" y="1007.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,300,605,819 samples, 0.99%)</title><rect x="220.2" y="437" width="11.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="223.20" y="447.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (103,582,866 samples, 0.08%)</title><rect x="990.2" y="197" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="993.18" y="207.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (37,911,532 samples, 0.03%)</title><rect x="597.7" y="133" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="600.72" y="143.5" ></text>
</g>
<g >
<title>_int_malloc (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="133" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1109.04" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (142,468,817 samples, 0.11%)</title><rect x="151.6" y="309" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="154.59" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,095,818 samples, 0.01%)</title><rect x="1187.0" y="325" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.04" y="335.5" ></text>
</g>
<g >
<title>operator new (118,180,491 samples, 0.09%)</title><rect x="232.7" y="229" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="235.66" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (86,986,769 samples, 0.07%)</title><rect x="1048.2" y="309" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1051.23" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (108,930,514 samples, 0.08%)</title><rect x="1164.4" y="181" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1167.39" y="191.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (859,016,581 samples, 0.66%)</title><rect x="575.2" y="341" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="578.21" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (132,980,389 samples, 0.10%)</title><rect x="151.7" y="229" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="154.68" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="821" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="831.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="629" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="639.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,019,927 samples, 0.01%)</title><rect x="1183.9" y="149" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1186.85" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (70,364,336 samples, 0.05%)</title><rect x="1058.6" y="261" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1061.59" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="165" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="600.72" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (85,072,278 samples, 0.06%)</title><rect x="1176.1" y="213" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1179.08" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (440,444,466 samples, 0.34%)</title><rect x="225.3" y="373" width="3.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="228.26" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (108,930,514 samples, 0.08%)</title><rect x="1164.4" y="165" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1167.39" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (46,868,675 samples, 0.04%)</title><rect x="1052.6" y="213" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1055.60" y="223.5" ></text>
</g>
<g >
<title>CNF::solve_helper (94,712,186,244 samples, 72.24%)</title><rect x="336.0" y="421" width="852.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="338.95" y="431.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="837" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="847.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_malloc (18,215,544 samples, 0.01%)</title><rect x="38.0" y="293" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="40.98" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (42,386,745 samples, 0.03%)</title><rect x="824.8" y="245" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="827.77" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (241,357,706 samples, 0.18%)</title><rect x="91.7" y="437" width="2.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="94.72" y="447.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,012,006 samples, 0.01%)</title><rect x="32.7" y="501" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="35.70" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (56,679,949 samples, 0.04%)</title><rect x="149.7" y="389" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="152.68" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (23,821,996 samples, 0.02%)</title><rect x="62.4" y="389" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="65.40" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,664,002 samples, 0.02%)</title><rect x="696.4" y="261" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="699.36" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (542,736,394 samples, 0.41%)</title><rect x="901.6" y="261" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="904.61" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,254,831 samples, 0.01%)</title><rect x="17.7" y="933" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="20.66" y="943.5" ></text>
</g>
<g >
<title>tcache_get (14,173,391 samples, 0.01%)</title><rect x="807.8" y="181" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="810.77" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,878,768 samples, 0.01%)</title><rect x="1103.7" y="149" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1106.74" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="197" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1061.46" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (79,816,268 samples, 0.06%)</title><rect x="61.6" y="389" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="64.64" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (553,235,509 samples, 0.42%)</title><rect x="322.5" y="389" width="5.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="325.52" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (84,971,069 samples, 0.06%)</title><rect x="694.6" y="341" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="697.63" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (108,183,963 samples, 0.08%)</title><rect x="150.6" y="389" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="153.57" y="399.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (122,822,147 samples, 0.09%)</title><rect x="826.6" y="261" width="1.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="829.59" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (19,062,331 samples, 0.01%)</title><rect x="1189.3" y="293" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.32" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,303,124 samples, 0.01%)</title><rect x="150.4" y="405" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="153.40" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (70,875,683 samples, 0.05%)</title><rect x="993.3" y="277" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="996.30" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,165,308 samples, 0.06%)</title><rect x="808.2" y="293" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="811.24" y="303.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (14,219,764 samples, 0.01%)</title><rect x="339.1" y="165" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="342.06" y="175.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (142,836,971 samples, 0.11%)</title><rect x="1181.7" y="213" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1184.67" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="277" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="341.85" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (14,028,398 samples, 0.01%)</title><rect x="44.0" y="469" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="47.01" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (37,681,616 samples, 0.03%)</title><rect x="327.8" y="357" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="330.75" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,889,797 samples, 0.02%)</title><rect x="91.5" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="94.50" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="789" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="799.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,520,861,976 samples, 1.16%)</title><rect x="322.2" y="405" width="13.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="325.23" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (117,975,827 samples, 0.09%)</title><rect x="44.4" y="501" width="1.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="47.39" y="511.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (14,304,484 samples, 0.01%)</title><rect x="900.8" y="229" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="903.76" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,285,583 samples, 0.01%)</title><rect x="1189.3" y="277" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.32" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (51,870,421 samples, 0.04%)</title><rect x="1165.4" y="197" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1168.37" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (13,548,089 samples, 0.01%)</title><rect x="1058.0" y="165" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1061.00" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="197" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="600.72" y="207.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (79,909,687 samples, 0.06%)</title><rect x="980.7" y="309" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="983.66" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (99,070,798 samples, 0.08%)</title><rect x="461.5" y="229" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="464.49" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,281,010 samples, 0.03%)</title><rect x="900.4" y="245" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.38" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (228,332,236 samples, 0.17%)</title><rect x="713.2" y="309" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="716.22" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (47,555,584 samples, 0.04%)</title><rect x="63.3" y="389" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="66.26" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (207,621,789 samples, 0.16%)</title><rect x="231.9" y="405" width="1.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="234.90" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (56,694,042 samples, 0.04%)</title><rect x="993.3" y="149" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="996.34" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (226,469,832 samples, 0.17%)</title><rect x="596.1" y="341" width="2.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="599.11" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (206,903,202 samples, 0.16%)</title><rect x="1139.7" y="245" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1142.69" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (179,475,423 samples, 0.14%)</title><rect x="318.1" y="373" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="321.06" y="383.5" ></text>
</g>
<g >
<title>CNF::is_pure (5,966,426,689 samples, 4.55%)</title><rect x="994.4" y="293" width="53.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="997.40" y="303.5" >CNF::..</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (28,406,220 samples, 0.02%)</title><rect x="694.1" y="357" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="697.12" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (79,788,449 samples, 0.06%)</title><rect x="572.2" y="373" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="575.19" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (51,639,191 samples, 0.04%)</title><rect x="992.8" y="245" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="995.83" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="197" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.02" y="207.5" ></text>
</g>
<g >
<title>CNF::CNF (235,311,511 samples, 0.18%)</title><rect x="461.5" y="389" width="2.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="464.45" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (383,810,736 samples, 0.29%)</title><rect x="1163.0" y="245" width="3.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1166.03" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="213" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1146.42" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="165" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1109.54" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (150,908,429 samples, 0.12%)</title><rect x="229.3" y="325" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="232.26" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,818,482,562 samples, 1.39%)</title><rect x="809.7" y="341" width="16.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="812.72" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="261" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.56" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (131,316,717 samples, 0.10%)</title><rect x="991.2" y="261" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="994.15" y="271.5" ></text>
</g>
<g >
<title>operator new (70,694,519 samples, 0.05%)</title><rect x="916.0" y="133" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.01" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="53" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1109.54" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (112,924,577 samples, 0.09%)</title><rect x="462.4" y="213" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="465.43" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (56,694,042 samples, 0.04%)</title><rect x="993.3" y="133" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="996.34" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,321,724 samples, 0.01%)</title><rect x="1188.3" y="357" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.28" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,664,002 samples, 0.02%)</title><rect x="696.4" y="277" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="699.36" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (33,240,497 samples, 0.03%)</title><rect x="63.3" y="309" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="66.26" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,204,281,376 samples, 1.68%)</title><rect x="696.6" y="373" width="19.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="699.62" y="383.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (311,715,707 samples, 0.24%)</title><rect x="1141.5" y="229" width="2.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1144.55" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (19,103,020 samples, 0.01%)</title><rect x="1165.8" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1168.84" y="159.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (194,229,303 samples, 0.15%)</title><rect x="1164.3" y="229" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1167.35" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,220,566 samples, 0.01%)</title><rect x="45.3" y="469" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="48.28" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,366,150 samples, 0.09%)</title><rect x="333.2" y="261" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="336.16" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (18,992,315 samples, 0.01%)</title><rect x="986.0" y="261" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="988.98" y="271.5" ></text>
</g>
<g >
<title>operator new (56,694,042 samples, 0.04%)</title><rect x="993.3" y="117" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="996.34" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (18,825,810 samples, 0.01%)</title><rect x="322.0" y="309" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="325.01" y="319.5" ></text>
</g>
<g >
<title>CNF::is_pure (651,821,664 samples, 0.50%)</title><rect x="38.3" y="485" width="5.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="41.27" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (47,237,949 samples, 0.04%)</title><rect x="231.9" y="277" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="234.94" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="229" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1059.73" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (274,276,252 samples, 0.21%)</title><rect x="336.7" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.72" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (61,516,979 samples, 0.05%)</title><rect x="26.2" y="997" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="29.15" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (42,386,745 samples, 0.03%)</title><rect x="824.8" y="261" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="827.77" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,165,308 samples, 0.06%)</title><rect x="808.2" y="325" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="811.24" y="335.5" ></text>
</g>
<g >
<title>CNF::~CNF (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="309" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1187.67" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (84,971,069 samples, 0.06%)</title><rect x="694.6" y="309" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="697.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (19,083,067 samples, 0.01%)</title><rect x="571.6" y="341" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="574.64" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="373" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1190.81" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (66,104,177 samples, 0.05%)</title><rect x="1104.9" y="197" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1107.92" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (33,096,961 samples, 0.03%)</title><rect x="1186.9" y="373" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1189.91" y="383.5" ></text>
</g>
<g >
<title>CNF::is_pure (346,772,538 samples, 0.26%)</title><rect x="1177.8" y="213" width="3.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1180.82" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,724,530 samples, 0.01%)</title><rect x="320.9" y="341" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="323.87" y="351.5" ></text>
</g>
<g >
<title>CNF::solve_helper (127,146,620,027 samples, 96.98%)</title><rect x="45.5" y="501" width="1144.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.45" y="511.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::solve_helper (115,410,451,971 samples, 88.03%)</title><rect x="150.5" y="453" width="1038.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.53" y="463.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::propagate_var_single_value (552,931,214 samples, 0.42%)</title><rect x="328.1" y="341" width="5.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="331.09" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (33,338,971 samples, 0.03%)</title><rect x="714.9" y="197" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="717.93" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,730,072 samples, 0.01%)</title><rect x="713.0" y="197" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="715.96" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (13,937,605 samples, 0.01%)</title><rect x="1053.4" y="245" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1056.41" y="255.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (103,189,067 samples, 0.08%)</title><rect x="95.0" y="373" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="97.95" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="149" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1109.04" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (207,136,009 samples, 0.16%)</title><rect x="691.8" y="341" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="694.83" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (226,469,832 samples, 0.17%)</title><rect x="596.1" y="309" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.11" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,120,484 samples, 0.01%)</title><rect x="322.1" y="277" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="325.06" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="309" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1189.02" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,259,780 samples, 0.01%)</title><rect x="825.0" y="197" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="828.03" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (14,335,143 samples, 0.01%)</title><rect x="696.2" y="293" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="699.23" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="69" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1184.33" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="341" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1189.02" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (19,035,011 samples, 0.01%)</title><rect x="1105.3" y="117" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1108.35" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (108,183,963 samples, 0.08%)</title><rect x="150.6" y="405" width="0.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="153.57" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (57,238,103 samples, 0.04%)</title><rect x="62.7" y="325" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="65.74" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (37,935,101 samples, 0.03%)</title><rect x="824.8" y="229" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="827.81" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,060,093,458 samples, 1.57%)</title><rect x="442.8" y="389" width="18.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="445.82" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (56,725,176 samples, 0.04%)</title><rect x="142.2" y="389" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="145.19" y="399.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (23,766,585 samples, 0.02%)</title><rect x="89.5" y="389" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="92.54" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (467,928,370 samples, 0.36%)</title><rect x="220.5" y="405" width="4.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="223.49" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="245" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1189.02" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (228,332,236 samples, 0.17%)</title><rect x="713.2" y="293" width="2.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="716.22" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,887,644 samples, 0.06%)</title><rect x="219.4" y="405" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="222.39" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (42,656,670 samples, 0.03%)</title><rect x="816.8" y="293" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="819.76" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (156,006,447 samples, 0.12%)</title><rect x="978.5" y="293" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="981.54" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (13,976,440 samples, 0.01%)</title><rect x="981.3" y="245" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="984.25" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (18,964,528 samples, 0.01%)</title><rect x="142.0" y="405" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="145.02" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (47,571,477 samples, 0.04%)</title><rect x="60.3" y="469" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="63.31" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (463,246,213 samples, 0.35%)</title><rect x="220.5" y="357" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="223.53" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="197" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1106.99" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (47,039,296 samples, 0.04%)</title><rect x="716.5" y="293" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="719.49" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (61,249,480 samples, 0.05%)</title><rect x="914.8" y="309" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="917.78" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,091,799 samples, 0.02%)</title><rect x="1048.6" y="229" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1051.63" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,341,070,071 samples, 1.79%)</title><rect x="574.6" y="389" width="21.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="577.58" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (51,615,074 samples, 0.04%)</title><rect x="1106.2" y="181" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1109.21" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (23,713,505 samples, 0.02%)</title><rect x="807.7" y="277" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="810.68" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,519,897 samples, 0.03%)</title><rect x="695.9" y="325" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="698.89" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (99,196,284 samples, 0.08%)</title><rect x="714.4" y="245" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="717.38" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (51,564,913 samples, 0.04%)</title><rect x="1138.5" y="229" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1141.54" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,869,244 samples, 0.01%)</title><rect x="1176.7" y="149" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.67" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (28,479,331 samples, 0.02%)</title><rect x="231.2" y="341" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="234.17" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="85" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1184.33" y="95.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (478,568,168 samples, 0.37%)</title><rect x="89.9" y="453" width="4.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="92.92" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (37,519,897 samples, 0.03%)</title><rect x="695.9" y="229" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="698.89" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (585,749,037 samples, 0.45%)</title><rect x="817.1" y="245" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="820.14" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13,743,326 samples, 0.01%)</title><rect x="1105.6" y="261" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1108.57" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (112,260,326 samples, 0.09%)</title><rect x="458.3" y="309" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="461.29" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (14,206,441 samples, 0.01%)</title><rect x="694.2" y="309" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="697.16" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (89,560,045 samples, 0.07%)</title><rect x="717.1" y="133" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="720.13" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (47,387,443 samples, 0.04%)</title><rect x="93.3" y="325" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="96.25" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (46,747,273 samples, 0.04%)</title><rect x="595.7" y="341" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="598.69" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (18,825,810 samples, 0.01%)</title><rect x="322.0" y="341" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="325.01" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="389" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1190.81" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (47,039,296 samples, 0.04%)</title><rect x="716.5" y="309" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="719.49" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (57,238,103 samples, 0.04%)</title><rect x="62.7" y="373" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="65.74" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="213" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1106.99" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (61,466,467 samples, 0.05%)</title><rect x="993.3" y="181" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="996.30" y="191.5" ></text>
</g>
<g >
<title>[unknown] (479,230,593 samples, 0.37%)</title><rect x="25.3" y="1013" width="4.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.28" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (14,252,220 samples, 0.01%)</title><rect x="30.8" y="517" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="33.79" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="277" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1187.67" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (117,948,947 samples, 0.09%)</title><rect x="440.4" y="373" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="443.36" y="383.5" ></text>
</g>
<g >
<title>operator new (103,858,388 samples, 0.08%)</title><rect x="717.0" y="165" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="720.00" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,664,002 samples, 0.02%)</title><rect x="696.4" y="293" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="699.36" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,613,532,006 samples, 1.23%)</title><rect x="901.0" y="341" width="14.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="904.02" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (412,529,122 samples, 0.31%)</title><rect x="1049.3" y="245" width="3.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1052.31" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (19,073,652 samples, 0.01%)</title><rect x="1185.2" y="293" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1188.17" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (27,997,198 samples, 0.02%)</title><rect x="1057.6" y="213" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.58" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18,379,222 samples, 0.01%)</title><rect x="992.4" y="293" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="995.37" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (193,568,149 samples, 0.15%)</title><rect x="456.4" y="245" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.42" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (127,683,098 samples, 0.10%)</title><rect x="232.6" y="245" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="235.58" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (37,250,792 samples, 0.03%)</title><rect x="1144.7" y="245" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1147.69" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (201,557,046 samples, 0.15%)</title><rect x="592.9" y="325" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="595.85" y="335.5" ></text>
</g>
<g >
<title>CNF::solve_helper (39,990,346,445 samples, 30.50%)</title><rect x="826.1" y="357" width="359.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="829.09" y="367.5" >CNF::solve_helper</text>
</g>
<g >
<title>_int_free (14,131,491 samples, 0.01%)</title><rect x="1187.9" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.89" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,713,505 samples, 0.02%)</title><rect x="807.7" y="197" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="810.68" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (19,083,890 samples, 0.01%)</title><rect x="17.8" y="933" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="20.78" y="943.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (733,620,835 samples, 0.56%)</title><rect x="697.4" y="325" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="700.42" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (46,747,273 samples, 0.04%)</title><rect x="595.7" y="293" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="598.69" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,005,780 samples, 0.01%)</title><rect x="335.7" y="373" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="338.75" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (18,215,544 samples, 0.01%)</title><rect x="38.0" y="325" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="40.98" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (193,131,287 samples, 0.15%)</title><rect x="1102.2" y="165" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1105.17" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (478,568,168 samples, 0.37%)</title><rect x="89.9" y="469" width="4.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="92.92" y="479.5" ></text>
</g>
<g >
<title>CNF::CNF (61,151,784 samples, 0.05%)</title><rect x="45.5" y="485" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="48.45" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (75,723,404 samples, 0.06%)</title><rect x="10.1" y="917" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="13.09" y="927.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (147,178,363 samples, 0.11%)</title><rect x="151.6" y="357" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="154.59" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (23,382,527 samples, 0.02%)</title><rect x="225.0" y="373" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="228.05" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,307,148 samples, 0.01%)</title><rect x="979.9" y="293" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="982.94" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (18,960,699 samples, 0.01%)</title><rect x="18.3" y="997" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="21.33" y="1007.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,313,046 samples, 0.02%)</title><rect x="442.4" y="309" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="445.40" y="319.5" ></text>
</g>
<g >
<title>operator new (47,039,296 samples, 0.04%)</title><rect x="716.5" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="719.49" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,629,201 samples, 0.02%)</title><rect x="1162.8" y="261" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1165.81" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="677" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="687.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (118,366,150 samples, 0.09%)</title><rect x="333.2" y="293" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="336.16" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (19,035,011 samples, 0.01%)</title><rect x="1105.3" y="149" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1108.35" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,521,934 samples, 0.10%)</title><rect x="1163.2" y="197" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1166.15" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="357" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1192.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (52,293,743 samples, 0.04%)</title><rect x="460.8" y="373" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="463.81" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (71,235,210 samples, 0.05%)</title><rect x="321.1" y="309" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.08" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (141,626,010 samples, 0.11%)</title><rect x="232.5" y="341" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="235.50" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (79,816,268 samples, 0.06%)</title><rect x="61.6" y="357" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="64.64" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14,138,807 samples, 0.01%)</title><rect x="808.0" y="341" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="810.98" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,646,368 samples, 0.01%)</title><rect x="981.1" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="984.09" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (80,510,140 samples, 0.06%)</title><rect x="336.0" y="357" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="339.00" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,766,585 samples, 0.02%)</title><rect x="89.5" y="373" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="92.54" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (166,913,852 samples, 0.13%)</title><rect x="572.9" y="373" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="575.91" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13,743,326 samples, 0.01%)</title><rect x="1105.6" y="245" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1108.57" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,181,235 samples, 0.03%)</title><rect x="149.3" y="341" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="152.30" y="351.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="149" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1146.42" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (18,851,167 samples, 0.01%)</title><rect x="807.5" y="309" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="810.47" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,344,818 samples, 0.05%)</title><rect x="37.2" y="469" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="40.17" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (108,930,514 samples, 0.08%)</title><rect x="1164.4" y="149" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1167.39" y="159.5" ></text>
</g>
<g >
<title>CNF::is_pure (1,947,465,406 samples, 1.49%)</title><rect x="1145.2" y="245" width="17.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1148.16" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (51,604,057 samples, 0.04%)</title><rect x="913.7" y="229" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="916.73" y="239.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (19,012,006 samples, 0.01%)</title><rect x="32.7" y="517" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="35.70" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (80,510,140 samples, 0.06%)</title><rect x="336.0" y="309" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="339.00" y="319.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,561,121,173 samples, 1.19%)</title><rect x="46.0" y="485" width="14.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="49.00" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (94,290,067 samples, 0.07%)</title><rect x="441.6" y="357" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="444.55" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (23,799,057 samples, 0.02%)</title><rect x="17.6" y="965" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="20.57" y="975.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,182,591 samples, 0.05%)</title><rect x="899.7" y="309" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="902.75" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (32,914,268 samples, 0.03%)</title><rect x="993.6" y="85" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="996.56" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (42,179,607 samples, 0.03%)</title><rect x="915.5" y="229" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="918.54" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,818,482,562 samples, 1.39%)</title><rect x="809.7" y="357" width="16.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="812.72" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (127,448,079 samples, 0.10%)</title><rect x="321.0" y="405" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="324.04" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (18,927,060 samples, 0.01%)</title><rect x="93.9" y="421" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="96.89" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="213" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.02" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,313,046 samples, 0.02%)</title><rect x="442.4" y="341" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="445.40" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (65,327,405 samples, 0.05%)</title><rect x="17.0" y="965" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="19.98" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (136,958,428 samples, 0.10%)</title><rect x="716.9" y="309" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="719.92" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (640,703,560 samples, 0.49%)</title><rect x="450.4" y="293" width="5.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="453.36" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="325" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1190.81" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,022,090 samples, 0.01%)</title><rect x="1188.9" y="261" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,201,391 samples, 0.01%)</title><rect x="1181.5" y="133" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1184.54" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,781,707 samples, 0.02%)</title><rect x="1099.0" y="245" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1102.02" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (33,240,497 samples, 0.03%)</title><rect x="63.3" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="66.26" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="117" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1184.33" y="127.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (351,551,710 samples, 0.27%)</title><rect x="1177.8" y="229" width="3.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1180.78" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (52,273,751 samples, 0.04%)</title><rect x="19.1" y="997" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="22.06" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (56,644,272 samples, 0.04%)</title><rect x="334.7" y="293" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="337.68" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18,712,495 samples, 0.01%)</title><rect x="711.3" y="277" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="714.31" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (99,011,757 samples, 0.08%)</title><rect x="823.9" y="245" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="826.88" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (155,764,780 samples, 0.12%)</title><rect x="596.3" y="165" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="599.28" y="175.5" ></text>
</g>
<g >
<title>operator new (108,763,483 samples, 0.08%)</title><rect x="826.6" y="149" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="829.59" y="159.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (19,086,431 samples, 0.01%)</title><rect x="1183.3" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.25" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (66,246,888 samples, 0.05%)</title><rect x="94.2" y="293" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="97.23" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (14,309,115 samples, 0.01%)</title><rect x="32.9" y="501" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="35.87" y="511.5" ></text>
</g>
<g >
<title>CNF::is_pure (18,893,515 samples, 0.01%)</title><rect x="29.6" y="549" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="32.64" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23,523,180 samples, 0.02%)</title><rect x="456.1" y="293" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="459.12" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (42,872,829 samples, 0.03%)</title><rect x="146.0" y="389" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="148.98" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (387,691,069 samples, 0.30%)</title><rect x="21.7" y="997" width="3.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="24.70" y="1007.5" ></text>
</g>
<g >
<title>CNF::CNF (37,250,792 samples, 0.03%)</title><rect x="1144.7" y="261" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1147.69" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (123,017,747 samples, 0.09%)</title><rect x="333.2" y="309" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="336.16" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,646,368 samples, 0.01%)</title><rect x="981.1" y="213" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="984.09" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (151,964,238 samples, 0.12%)</title><rect x="151.5" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="154.55" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,541,679 samples, 0.02%)</title><rect x="60.4" y="373" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="63.36" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (737,420,098 samples, 0.56%)</title><rect x="1099.4" y="293" width="6.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1102.40" y="303.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (128,928,083,311 samples, 98.34%)</title><rect x="29.6" y="997" width="1160.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.59" y="1007.5" >__libc_start_main_impl</text>
</g>
<g >
<title>__GI___libc_free (33,112,989 samples, 0.03%)</title><rect x="459.8" y="229" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="462.76" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (80,836,492 samples, 0.06%)</title><rect x="60.1" y="485" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="63.10" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,280,057 samples, 0.01%)</title><rect x="1185.3" y="293" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1188.34" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,268,106 samples, 0.01%)</title><rect x="458.2" y="277" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="461.16" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,165,308 samples, 0.06%)</title><rect x="808.2" y="309" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="811.24" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (70,875,683 samples, 0.05%)</title><rect x="993.3" y="229" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="996.30" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (202,653,257 samples, 0.15%)</title><rect x="1102.2" y="213" width="1.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1105.17" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (142,160,916 samples, 0.11%)</title><rect x="91.9" y="405" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="94.93" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,010,161 samples, 0.03%)</title><rect x="149.9" y="325" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="152.89" y="335.5" ></text>
</g>
<g >
<title>_int_free (14,292,305 samples, 0.01%)</title><rect x="1185.6" y="149" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1188.60" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="229" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1190.25" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,541,679 samples, 0.02%)</title><rect x="60.4" y="389" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="63.36" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (23,642,406 samples, 0.02%)</title><rect x="1144.5" y="229" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1147.48" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (42,179,607 samples, 0.03%)</title><rect x="915.5" y="261" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="918.54" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (55,943,766 samples, 0.04%)</title><rect x="991.8" y="197" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="994.83" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (84,955,597 samples, 0.06%)</title><rect x="915.9" y="293" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="918.92" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (37,452,399 samples, 0.03%)</title><rect x="715.9" y="325" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="718.95" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (762,634,813 samples, 0.58%)</title><rect x="985.5" y="277" width="6.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="988.47" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (311,715,707 samples, 0.24%)</title><rect x="1141.5" y="245" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1144.55" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (70,594,492 samples, 0.05%)</title><rect x="715.3" y="341" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="718.31" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (51,639,191 samples, 0.04%)</title><rect x="992.8" y="277" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="995.83" y="287.5" ></text>
</g>
<g >
<title>_int_free (23,804,840 samples, 0.02%)</title><rect x="1187.3" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.29" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="181" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1189.02" y="191.5" ></text>
</g>
<g >
<title>CNF::solve_helper (85,603,023 samples, 0.07%)</title><rect x="1183.5" y="213" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1186.47" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,063,733 samples, 0.01%)</title><rect x="60.1" y="437" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="63.14" y="447.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (89,668,924 samples, 0.07%)</title><rect x="89.1" y="469" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="92.12" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (412,529,122 samples, 0.31%)</title><rect x="1049.3" y="229" width="3.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1052.31" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="917" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="927.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (155,679,715 samples, 0.12%)</title><rect x="229.2" y="357" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="232.22" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (13,968,013 samples, 0.01%)</title><rect x="150.1" y="277" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="153.06" y="287.5" ></text>
</g>
<g >
<title>a.out (131,104,890,506 samples, 100.00%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >a.out</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (126,716,793 samples, 0.10%)</title><rect x="462.4" y="293" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="465.43" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (193,131,287 samples, 0.15%)</title><rect x="1102.2" y="197" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1105.17" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (108,183,963 samples, 0.08%)</title><rect x="150.6" y="373" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="153.57" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (51,935,675 samples, 0.04%)</title><rect x="989.6" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="992.58" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (13,797,589 samples, 0.01%)</title><rect x="1144.8" y="85" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1147.82" y="95.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (236,616,059 samples, 0.18%)</title><rect x="1099.7" y="229" width="2.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1102.70" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (193,131,287 samples, 0.15%)</title><rect x="1102.2" y="181" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1105.17" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (354,786,392 samples, 0.27%)</title><rect x="336.0" y="389" width="3.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="339.00" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (99,070,798 samples, 0.08%)</title><rect x="461.5" y="341" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="464.49" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (108,930,514 samples, 0.08%)</title><rect x="1164.4" y="197" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1167.39" y="207.5" ></text>
</g>
<g >
<title>malloc_consolidate (51,495,378 samples, 0.04%)</title><rect x="826.1" y="181" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="829.09" y="191.5" ></text>
</g>
<g >
<title>CNF::solve_helper (21,336,903,931 samples, 16.27%)</title><rect x="992.8" y="325" width="192.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="995.83" y="335.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_free (14,261,422 samples, 0.01%)</title><rect x="21.5" y="997" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="24.54" y="1007.5" ></text>
</g>
<g >
<title>_int_malloc (99,070,798 samples, 0.08%)</title><rect x="461.5" y="245" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="464.49" y="255.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (51,615,074 samples, 0.04%)</title><rect x="1106.2" y="197" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1109.21" y="207.5" ></text>
</g>
<g >
<title>_int_free (18,106,195 samples, 0.01%)</title><rect x="992.1" y="133" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="995.13" y="143.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (47,167,439 samples, 0.04%)</title><rect x="1183.0" y="197" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1186.04" y="207.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,149,325,617 samples, 0.88%)</title><rect x="449.8" y="373" width="10.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="452.76" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (65,327,405 samples, 0.05%)</title><rect x="17.0" y="885" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="19.98" y="895.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (37,307,571 samples, 0.03%)</title><rect x="44.8" y="421" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="47.78" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (732,644,314 samples, 0.56%)</title><rect x="443.2" y="357" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="446.16" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23,832,565 samples, 0.02%)</title><rect x="1162.5" y="213" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1165.47" y="223.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,591,945 samples, 0.04%)</title><rect x="89.4" y="437" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="92.41" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (206,903,202 samples, 0.16%)</title><rect x="1139.7" y="213" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1142.69" y="223.5" ></text>
</g>
<g >
<title>operator new (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.46" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (66,356,459 samples, 0.05%)</title><rect x="219.4" y="373" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="222.43" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,012,006 samples, 0.01%)</title><rect x="32.7" y="469" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="35.70" y="479.5" ></text>
</g>
<g >
<title>operator new (33,149,839 samples, 0.03%)</title><rect x="45.5" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="48.45" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="245" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1109.04" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (37,178,936 samples, 0.03%)</title><rect x="17.0" y="853" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="19.98" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (56,679,949 samples, 0.04%)</title><rect x="149.7" y="373" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="152.68" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (19,083,890 samples, 0.01%)</title><rect x="17.8" y="853" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="20.78" y="863.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,012,006 samples, 0.01%)</title><rect x="32.7" y="421" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="35.70" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,477,988 samples, 0.03%)</title><rect x="1176.9" y="181" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1179.93" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,541,679 samples, 0.02%)</title><rect x="60.4" y="405" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="63.36" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (859,016,581 samples, 0.66%)</title><rect x="575.2" y="357" width="7.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="578.21" y="367.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="261" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="466.44" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,307,491 samples, 0.01%)</title><rect x="62.6" y="437" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="65.61" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (89,537,151 samples, 0.07%)</title><rect x="441.6" y="293" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="444.55" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,949,170 samples, 0.03%)</title><rect x="219.0" y="389" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="222.05" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (84,337,771 samples, 0.06%)</title><rect x="1058.5" y="277" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1061.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="261" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.02" y="271.5" ></text>
</g>
<g >
<title>operator new (32,614,505 samples, 0.02%)</title><rect x="1106.3" y="85" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.25" y="95.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (854,484,505 samples, 0.65%)</title><rect x="327.5" y="373" width="7.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="330.50" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="133" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1180.31" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (104,793,687 samples, 0.08%)</title><rect x="62.7" y="453" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="65.74" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,320,845 samples, 0.01%)</title><rect x="1183.3" y="149" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1186.25" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (47,237,949 samples, 0.04%)</title><rect x="231.9" y="341" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="234.94" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (23,828,216 samples, 0.02%)</title><rect x="581.5" y="293" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="584.46" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (44,692,014 samples, 0.03%)</title><rect x="1048.2" y="261" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1051.23" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (37,948,986 samples, 0.03%)</title><rect x="228.8" y="293" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="231.79" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,028,398 samples, 0.01%)</title><rect x="44.0" y="453" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="47.01" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (103,189,067 samples, 0.08%)</title><rect x="95.0" y="293" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="97.95" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (18,953,967 samples, 0.01%)</title><rect x="44.2" y="485" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="47.22" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="357" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="66.56" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="181" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1059.73" y="191.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (85,291,948 samples, 0.07%)</title><rect x="693.8" y="373" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="696.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="309" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.81" y="319.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (18,946,506 samples, 0.01%)</title><rect x="1139.0" y="277" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1142.01" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,091,799 samples, 0.02%)</title><rect x="1048.6" y="197" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1051.63" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (442,544,097 samples, 0.34%)</title><rect x="986.2" y="245" width="3.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="989.15" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,290,125 samples, 0.01%)</title><rect x="149.2" y="357" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="152.17" y="367.5" ></text>
</g>
<g >
<title>_int_free (18,996,266 samples, 0.01%)</title><rect x="459.9" y="213" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="462.89" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (236,616,059 samples, 0.18%)</title><rect x="1099.7" y="213" width="2.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1102.70" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="341" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.25" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (51,615,074 samples, 0.04%)</title><rect x="1106.2" y="229" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1109.21" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,294,755 samples, 0.03%)</title><rect x="1048.6" y="277" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1051.63" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (38,051,438 samples, 0.03%)</title><rect x="44.4" y="469" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="47.44" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,201,391 samples, 0.01%)</title><rect x="1181.5" y="117" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1184.54" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (19,008,653 samples, 0.01%)</title><rect x="1188.2" y="389" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.23" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,864,525 samples, 0.02%)</title><rect x="230.4" y="261" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="233.36" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,259,780 samples, 0.01%)</title><rect x="825.0" y="181" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="828.03" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,280,057 samples, 0.01%)</title><rect x="1185.3" y="277" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1188.34" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (37,999,145 samples, 0.03%)</title><rect x="696.2" y="325" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="699.23" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,311,897 samples, 0.03%)</title><rect x="449.4" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="452.38" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18,927,060 samples, 0.01%)</title><rect x="93.9" y="437" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="96.89" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (27,988,987 samples, 0.02%)</title><rect x="825.8" y="325" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="828.79" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (80,510,140 samples, 0.06%)</title><rect x="336.0" y="325" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="339.00" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (42,206,074 samples, 0.03%)</title><rect x="33.0" y="501" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="36.00" y="511.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="821" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="20.32" y="831.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (28,001,945 samples, 0.02%)</title><rect x="45.8" y="405" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="48.75" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (47,237,949 samples, 0.04%)</title><rect x="231.9" y="357" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="234.94" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,092,608 samples, 0.01%)</title><rect x="45.2" y="389" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="48.16" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (108,930,514 samples, 0.08%)</title><rect x="1164.4" y="133" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1167.39" y="143.5" ></text>
</g>
<g >
<title>_int_free (61,644,457 samples, 0.05%)</title><rect x="18.5" y="997" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="21.50" y="1007.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (130,782,043 samples, 0.10%)</title><rect x="695.4" y="341" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="698.40" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,072,278 samples, 0.06%)</title><rect x="1176.1" y="197" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1179.08" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (14,206,441 samples, 0.01%)</title><rect x="694.2" y="245" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="697.16" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="149" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="600.72" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="357" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.81" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate (28,383,637 samples, 0.02%)</title><rect x="45.5" y="325" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="48.50" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="325" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="66.56" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,012,006 samples, 0.01%)</title><rect x="32.7" y="533" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="35.70" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,088,988 samples, 0.01%)</title><rect x="1058.1" y="277" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1061.12" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (32,614,505 samples, 0.02%)</title><rect x="1106.3" y="133" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1109.25" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (18,229,709 samples, 0.01%)</title><rect x="1144.8" y="117" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1147.78" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (18,379,222 samples, 0.01%)</title><rect x="992.4" y="277" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="995.37" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,519,897 samples, 0.03%)</title><rect x="695.9" y="309" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="698.89" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (42,179,607 samples, 0.03%)</title><rect x="915.5" y="245" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="918.54" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="69" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1109.54" y="79.5" ></text>
</g>
<g >
<title>_int_malloc (75,225,127 samples, 0.06%)</title><rect x="95.2" y="229" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="98.16" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (51,495,378 samples, 0.04%)</title><rect x="826.1" y="197" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="829.09" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (37,307,571 samples, 0.03%)</title><rect x="44.8" y="405" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="47.78" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,092,608 samples, 0.01%)</title><rect x="45.2" y="405" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="48.16" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (184,356,121 samples, 0.14%)</title><rect x="1141.7" y="149" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1144.72" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (178,997,275 samples, 0.14%)</title><rect x="826.1" y="325" width="1.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="829.09" y="335.5" ></text>
</g>
<g >
<title>CNF::is_pure (1,000,341,334 samples, 0.76%)</title><rect x="1166.7" y="229" width="9.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1169.73" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (51,639,191 samples, 0.04%)</title><rect x="992.8" y="165" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="995.83" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="165" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1146.42" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (150,353,591 samples, 0.11%)</title><rect x="822.5" y="245" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="825.53" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (52,118,728 samples, 0.04%)</title><rect x="821.9" y="213" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="824.94" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (141,626,010 samples, 0.11%)</title><rect x="232.5" y="325" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="235.50" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="133" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1106.99" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (207,879,126 samples, 0.16%)</title><rect x="437.8" y="357" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="440.77" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="309" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1191.40" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,303,124 samples, 0.01%)</title><rect x="150.4" y="421" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="153.40" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (23,799,057 samples, 0.02%)</title><rect x="17.6" y="949" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="20.57" y="959.5" ></text>
</g>
<g >
<title>_int_malloc (13,550,196 samples, 0.01%)</title><rect x="38.0" y="277" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="41.02" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (66,246,888 samples, 0.05%)</title><rect x="94.2" y="389" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="97.23" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (28,380,877 samples, 0.02%)</title><rect x="334.9" y="261" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="337.94" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (37,519,897 samples, 0.03%)</title><rect x="695.9" y="277" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="698.89" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (14,280,057 samples, 0.01%)</title><rect x="1185.3" y="325" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1188.34" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (19,103,020 samples, 0.01%)</title><rect x="1165.8" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1168.84" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,283,727 samples, 0.01%)</title><rect x="1177.5" y="213" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1180.52" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="405" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.27" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (23,713,505 samples, 0.02%)</title><rect x="807.7" y="261" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="810.68" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (32,535,598 samples, 0.02%)</title><rect x="1057.8" y="213" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1060.83" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="133" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1184.33" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="293" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="341.85" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="245" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1187.67" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="309" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1190.25" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk (14,241,368 samples, 0.01%)</title><rect x="596.0" y="197" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="598.98" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="165" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1184.33" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (23,265,670 samples, 0.02%)</title><rect x="992.5" y="277" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="995.54" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (775,729,370 samples, 0.59%)</title><rect x="10.0" y="997" width="7.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="213" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="600.72" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (99,075,527 samples, 0.08%)</title><rect x="717.0" y="149" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="720.05" y="159.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (836,461,802 samples, 0.64%)</title><rect x="143.0" y="453" width="7.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="146.00" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (47,555,584 samples, 0.04%)</title><rect x="63.3" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="66.26" y="415.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (140,813,531 samples, 0.11%)</title><rect x="822.5" y="229" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="825.53" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (22,940,609 samples, 0.02%)</title><rect x="37.9" y="373" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="40.94" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="341" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.81" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (46,802,447 samples, 0.04%)</title><rect x="334.3" y="325" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="337.26" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (103,600,100 samples, 0.08%)</title><rect x="593.7" y="277" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="596.74" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (51,604,057 samples, 0.04%)</title><rect x="913.7" y="245" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="916.73" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (84,955,597 samples, 0.06%)</title><rect x="915.9" y="277" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="918.92" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="341" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1189.44" y="351.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (255,254,559 samples, 0.19%)</title><rect x="336.9" y="325" width="2.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="339.89" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="293" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1190.81" y="303.5" ></text>
</g>
<g >
<title>CNF::is_pure (9,478,582,294 samples, 7.23%)</title><rect x="234.4" y="405" width="85.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="237.36" y="415.5" >CNF::is_pure</text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,206,074 samples, 0.03%)</title><rect x="33.0" y="485" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="36.00" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (212,521,606 samples, 0.16%)</title><rect x="336.9" y="261" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="339.94" y="271.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (4,359,671,818 samples, 3.33%)</title><rect x="1059.2" y="293" width="39.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1062.22" y="303.5" >CNF..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (56,938,486 samples, 0.04%)</title><rect x="1097.9" y="261" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1100.95" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="261" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1190.25" y="271.5" ></text>
</g>
<g >
<title>_int_free (18,951,979 samples, 0.01%)</title><rect x="1186.1" y="165" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.10" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (23,598,821 samples, 0.02%)</title><rect x="93.7" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="96.68" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,049,811,752 samples, 0.80%)</title><rect x="1049.0" y="309" width="9.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1052.01" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (155,679,715 samples, 0.12%)</title><rect x="229.2" y="373" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="232.22" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,502,376,270 samples, 98.01%)</title><rect x="33.4" y="533" width="1156.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="36.38" y="543.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (66,356,459 samples, 0.05%)</title><rect x="219.4" y="325" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="222.43" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,541,679 samples, 0.02%)</title><rect x="60.4" y="437" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="63.36" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (42,348,808 samples, 0.03%)</title><rect x="1144.0" y="181" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1146.97" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (51,615,074 samples, 0.04%)</title><rect x="1106.2" y="213" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1109.21" y="223.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (3,592,496,576 samples, 2.74%)</title><rect x="1106.7" y="277" width="32.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1109.67" y="287.5" >CN..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (207,136,009 samples, 0.16%)</title><rect x="691.8" y="325" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="694.83" y="335.5" ></text>
</g>
<g >
<title>[[heap]] (1,256,439,698 samples, 0.96%)</title><rect x="10.0" y="1013" width="11.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (70,694,519 samples, 0.05%)</title><rect x="916.0" y="149" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="919.01" y="159.5" ></text>
</g>
<g >
<title>CNF::is_pure (7,859,369,793 samples, 5.99%)</title><rect x="828.5" y="325" width="70.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="831.55" y="335.5" >CNF::is..</text>
</g>
<g >
<title>CNF::~CNF (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="357" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1189.02" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (201,409,872 samples, 0.15%)</title><rect x="458.3" y="325" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="461.29" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (188,280,622 samples, 0.14%)</title><rect x="897.6" y="309" width="1.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="900.59" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (38,044,976 samples, 0.03%)</title><rect x="980.7" y="229" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="983.70" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (13,968,013 samples, 0.01%)</title><rect x="150.1" y="309" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="153.06" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,030,702 samples, 0.01%)</title><rect x="1162.7" y="245" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1165.69" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (150,908,429 samples, 0.12%)</title><rect x="229.3" y="341" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="232.26" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (56,694,042 samples, 0.04%)</title><rect x="993.3" y="165" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="996.34" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (46,972,223 samples, 0.04%)</title><rect x="59.6" y="453" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="62.63" y="463.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="597" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="607.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="357" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1191.85" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="293" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.85" y="303.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (13,792,216 samples, 0.01%)</title><rect x="463.4" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="466.44" y="159.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,437,645 samples, 0.02%)</title><rect x="1139.2" y="277" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1142.18" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (141,666,458 samples, 0.11%)</title><rect x="441.4" y="373" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="444.42" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (566,469,130 samples, 0.43%)</title><rect x="1053.0" y="277" width="5.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1056.03" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (442,544,097 samples, 0.34%)</title><rect x="986.2" y="261" width="3.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="989.15" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (117,447,436 samples, 0.09%)</title><rect x="94.8" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (108,710,188 samples, 0.08%)</title><rect x="913.2" y="277" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="916.21" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,012,006 samples, 0.01%)</title><rect x="32.7" y="485" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="35.70" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,646,368 samples, 0.01%)</title><rect x="981.1" y="277" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="984.09" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (42,179,607 samples, 0.03%)</title><rect x="915.5" y="181" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="918.54" y="191.5" ></text>
</g>
<g >
<title>CNF::is_pure (7,230,052,308 samples, 5.51%)</title><rect x="153.5" y="421" width="65.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="156.51" y="431.5" >CNF::is..</text>
</g>
<g >
<title>malloc_consolidate (28,062,733 samples, 0.02%)</title><rect x="915.7" y="165" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="918.67" y="175.5" ></text>
</g>
<g >
<title>CNF::solve_helper (80,702,387,817 samples, 61.56%)</title><rect x="461.5" y="405" width="726.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="464.45" y="415.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::solve_helper (125,216,419,923 samples, 95.51%)</title><rect x="62.7" y="485" width="1127.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.74" y="495.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (141,732,076 samples, 0.11%)</title><rect x="911.9" y="245" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="914.94" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51,495,378 samples, 0.04%)</title><rect x="826.1" y="213" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="829.09" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (56,644,272 samples, 0.04%)</title><rect x="334.7" y="309" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="337.68" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (89,908,047 samples, 0.07%)</title><rect x="230.6" y="357" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="233.62" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (207,751,703 samples, 0.16%)</title><rect x="337.0" y="229" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="339.98" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (37,570,321 samples, 0.03%)</title><rect x="1143.6" y="165" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1146.63" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (207,751,703 samples, 0.16%)</title><rect x="337.0" y="245" width="1.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="339.98" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,309,115 samples, 0.01%)</title><rect x="32.9" y="485" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.87" y="495.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (75,288,495 samples, 0.06%)</title><rect x="900.3" y="325" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="903.30" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (198,261,560 samples, 0.15%)</title><rect x="337.1" y="197" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="340.06" y="207.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,953,967 samples, 0.01%)</title><rect x="44.2" y="469" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="47.22" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="197" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="466.44" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (89,149,546 samples, 0.07%)</title><rect x="459.3" y="277" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="462.30" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (80,510,140 samples, 0.06%)</title><rect x="336.0" y="261" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="339.00" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="85" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1180.31" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (127,501,897 samples, 0.10%)</title><rect x="826.6" y="309" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="829.55" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (66,344,818 samples, 0.05%)</title><rect x="37.2" y="485" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="40.17" y="495.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,886,095 samples, 0.01%)</title><rect x="1162.9" y="229" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1165.86" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (61,237,452 samples, 0.05%)</title><rect x="335.2" y="389" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="338.19" y="399.5" ></text>
</g>
<g >
<title>CNF::is_pure (11,883,659,948 samples, 9.06%)</title><rect x="464.6" y="373" width="107.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="467.59" y="383.5" >CNF::is_pure</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (51,607,527 samples, 0.04%)</title><rect x="594.2" y="245" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="597.20" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (103,960,929 samples, 0.08%)</title><rect x="142.0" y="421" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="144.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (51,898,671 samples, 0.04%)</title><rect x="914.9" y="293" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="917.87" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (207,836,255 samples, 0.16%)</title><rect x="456.4" y="309" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="459.42" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (103,582,866 samples, 0.08%)</title><rect x="990.2" y="229" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="993.18" y="239.5" ></text>
</g>
<g >
<title>_int_free (23,442,358 samples, 0.02%)</title><rect x="1186.4" y="181" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.44" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (141,398,502 samples, 0.11%)</title><rect x="823.9" y="277" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="826.88" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="181" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1188.55" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,001,945 samples, 0.02%)</title><rect x="45.8" y="453" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="48.75" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="325" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.25" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="293" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="66.56" y="303.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (37,461,050 samples, 0.03%)</title><rect x="218.6" y="437" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="221.58" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (226,469,832 samples, 0.17%)</title><rect x="596.1" y="325" width="2.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="599.11" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (739,061,518 samples, 0.56%)</title><rect x="584.5" y="309" width="6.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="587.47" y="319.5" ></text>
</g>
<g >
<title>CNF::is_pure (6,976,089,323 samples, 5.32%)</title><rect x="917.2" y="309" width="62.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="920.15" y="319.5" >CNF::i..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="245" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1059.73" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="133" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.42" y="143.5" ></text>
</g>
<g >
<title>CNF::solve_helper (52,213,414,506 samples, 39.83%)</title><rect x="716.5" y="373" width="469.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="719.45" y="383.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="133" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1061.59" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (18,922,466 samples, 0.01%)</title><rect x="29.2" y="997" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="32.21" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (151,964,238 samples, 0.12%)</title><rect x="151.5" y="405" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="154.55" y="415.5" ></text>
</g>
<g >
<title>CNF::CNF (127,135,204 samples, 0.10%)</title><rect x="915.5" y="325" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="918.54" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,302,661,179 samples, 0.99%)</title><rect x="582.9" y="341" width="11.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="585.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (33,264,070 samples, 0.03%)</title><rect x="571.6" y="357" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="574.64" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,571,477 samples, 0.04%)</title><rect x="60.3" y="453" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="63.31" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="277" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.44" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,781,707 samples, 0.02%)</title><rect x="1099.0" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1102.02" y="207.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,914,734 samples, 0.01%)</title><rect x="1139.2" y="245" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1142.22" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (19,089,267 samples, 0.01%)</title><rect x="29.0" y="997" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="32.04" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (19,062,331 samples, 0.01%)</title><rect x="1189.3" y="309" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.32" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (432,995,992 samples, 0.33%)</title><rect x="986.2" y="229" width="3.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="989.15" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (409,866,463 samples, 0.31%)</title><rect x="1101.8" y="245" width="3.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1104.83" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (142,160,916 samples, 0.11%)</title><rect x="91.9" y="341" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="94.93" y="351.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (66,356,459 samples, 0.05%)</title><rect x="219.4" y="357" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="222.43" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,046,794 samples, 0.01%)</title><rect x="21.4" y="997" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.36" y="1007.5" ></text>
</g>
<g >
<title>CNF::is_pure (38,067,101 samples, 0.03%)</title><rect x="1183.5" y="181" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1186.47" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (37,359,608 samples, 0.03%)</title><rect x="1106.2" y="149" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1109.21" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,267,874 samples, 0.03%)</title><rect x="333.9" y="245" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="336.92" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (37,359,608 samples, 0.03%)</title><rect x="1106.2" y="165" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1109.21" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_free (22,885,272 samples, 0.02%)</title><rect x="992.1" y="149" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="995.09" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (169,714,145 samples, 0.13%)</title><rect x="711.6" y="213" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="714.60" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="277" width="0.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="66.56" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (51,495,378 samples, 0.04%)</title><rect x="826.1" y="245" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="829.09" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (202,653,257 samples, 0.15%)</title><rect x="1102.2" y="229" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1105.17" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (103,189,067 samples, 0.08%)</title><rect x="95.0" y="357" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="97.95" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,072,278 samples, 0.06%)</title><rect x="1176.1" y="181" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1179.08" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (184,378,243 samples, 0.14%)</title><rect x="1176.0" y="229" width="1.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1179.04" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="309" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1191.85" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,552,146 samples, 0.02%)</title><rect x="1056.4" y="165" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1059.39" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (201,557,046 samples, 0.15%)</title><rect x="592.9" y="309" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="595.85" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (89,149,546 samples, 0.07%)</title><rect x="459.3" y="309" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="462.30" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,074,428,050 samples, 1.58%)</title><rect x="442.8" y="405" width="18.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="445.78" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,005,780 samples, 0.01%)</title><rect x="335.7" y="389" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="338.75" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,511,400 samples, 0.03%)</title><rect x="224.3" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="227.32" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (32,771,179 samples, 0.02%)</title><rect x="913.9" y="197" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="916.90" y="207.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (5,017,704,105 samples, 3.83%)</title><rect x="95.9" y="453" width="45.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="98.88" y="463.5" >CNF:..</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="325" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1189.44" y="335.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="229" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="466.44" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (32,614,505 samples, 0.02%)</title><rect x="1106.3" y="117" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1109.25" y="127.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,495,286 samples, 0.06%)</title><rect x="36.5" y="469" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="39.49" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (45,798,445 samples, 0.03%)</title><rect x="695.4" y="261" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="698.44" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (28,657,293 samples, 0.02%)</title><rect x="1165.8" y="197" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1168.84" y="207.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="645" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="655.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,023,736 samples, 0.01%)</title><rect x="142.8" y="373" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="145.79" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (94,688,284 samples, 0.07%)</title><rect x="710.5" y="229" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="713.46" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,562,236 samples, 0.03%)</title><rect x="1165.5" y="133" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1168.45" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (127,683,098 samples, 0.10%)</title><rect x="232.6" y="261" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="235.58" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (37,138,162 samples, 0.03%)</title><rect x="992.0" y="165" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="995.00" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (19,008,653 samples, 0.01%)</title><rect x="1188.2" y="405" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1191.23" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (840,182,385 samples, 0.64%)</title><rect x="575.4" y="309" width="7.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="578.38" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,309,347 samples, 0.07%)</title><rect x="60.9" y="421" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="63.87" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (27,873,416 samples, 0.02%)</title><rect x="321.7" y="373" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="324.72" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (122,649,146 samples, 0.09%)</title><rect x="596.5" y="149" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="599.49" y="159.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (44,692,014 samples, 0.03%)</title><rect x="1048.2" y="293" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1051.23" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (27,794,637 samples, 0.02%)</title><rect x="1057.9" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1060.87" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (75,808,396 samples, 0.06%)</title><rect x="1181.0" y="229" width="0.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1183.99" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (432,995,992 samples, 0.33%)</title><rect x="986.2" y="213" width="3.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="989.15" y="223.5" ></text>
</g>
<g >
<title>CNF::solve_helper (29,990,578,431 samples, 22.88%)</title><rect x="915.5" y="341" width="270.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="918.54" y="351.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (65,327,405 samples, 0.05%)</title><rect x="17.0" y="949" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="19.98" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (32,771,179 samples, 0.02%)</title><rect x="913.9" y="181" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="916.90" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,356,459 samples, 0.05%)</title><rect x="219.4" y="389" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="222.43" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (108,625,928 samples, 0.08%)</title><rect x="320.1" y="389" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="323.06" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (127,135,204 samples, 0.10%)</title><rect x="915.5" y="309" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="918.54" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (47,237,949 samples, 0.04%)</title><rect x="231.9" y="373" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="234.94" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (137,296,463 samples, 0.10%)</title><rect x="1163.1" y="229" width="1.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1166.11" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="405" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.85" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="341" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1191.85" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (552,931,214 samples, 0.42%)</title><rect x="328.1" y="357" width="5.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="331.09" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (103,600,100 samples, 0.08%)</title><rect x="593.7" y="293" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="596.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (23,415,094 samples, 0.02%)</title><rect x="899.5" y="309" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="902.45" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,120,484 samples, 0.01%)</title><rect x="322.1" y="293" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="325.06" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="805" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="20.32" y="815.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (84,971,069 samples, 0.06%)</title><rect x="694.6" y="357" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="697.63" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,240,001 samples, 0.01%)</title><rect x="1165.2" y="117" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1168.24" y="127.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,511,168 samples, 0.02%)</title><rect x="1183.0" y="165" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1186.04" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (108,183,963 samples, 0.08%)</title><rect x="150.6" y="293" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="153.57" y="303.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (27,672,652 samples, 0.02%)</title><rect x="37.9" y="421" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="40.94" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,181,003 samples, 0.01%)</title><rect x="571.8" y="341" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="574.81" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (108,625,928 samples, 0.08%)</title><rect x="320.1" y="357" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="323.06" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (85,152,951 samples, 0.06%)</title><rect x="232.9" y="197" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="235.88" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (70,610,331 samples, 0.05%)</title><rect x="991.2" y="229" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="994.15" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="389" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.40" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (42,179,607 samples, 0.03%)</title><rect x="915.5" y="293" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="918.54" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (245,275,825 samples, 0.19%)</title><rect x="320.0" y="421" width="2.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="323.02" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (56,552,657 samples, 0.04%)</title><rect x="332.5" y="277" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="335.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (14,013,298 samples, 0.01%)</title><rect x="716.3" y="341" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="719.29" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,721,841 samples, 0.02%)</title><rect x="1144.8" y="197" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.78" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (18,857,675 samples, 0.01%)</title><rect x="45.1" y="421" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="48.11" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (155,105,910 samples, 0.12%)</title><rect x="980.1" y="325" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="983.11" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (37,999,145 samples, 0.03%)</title><rect x="696.2" y="309" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="699.23" y="319.5" ></text>
</g>
<g >
<title>all (131,104,990,219 samples, 100%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (112,924,577 samples, 0.09%)</title><rect x="462.4" y="245" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="465.43" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (37,716,313 samples, 0.03%)</title><rect x="88.7" y="437" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="91.69" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (27,672,652 samples, 0.02%)</title><rect x="37.9" y="405" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="40.94" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (18,914,734 samples, 0.01%)</title><rect x="1139.2" y="261" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1142.22" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (23,739,344 samples, 0.02%)</title><rect x="1184.0" y="197" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1187.02" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (32,535,598 samples, 0.02%)</title><rect x="1057.8" y="197" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1060.83" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (28,479,331 samples, 0.02%)</title><rect x="231.2" y="325" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="234.17" y="335.5" ></text>
</g>
<g >
<title>CNF::~CNF (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="453" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.27" y="463.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (854,484,505 samples, 0.65%)</title><rect x="327.5" y="389" width="7.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="330.50" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,258,515,336 samples, 0.96%)</title><rect x="981.5" y="325" width="11.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="984.51" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (51,495,378 samples, 0.04%)</title><rect x="826.1" y="293" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="829.09" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (246,048,823 samples, 0.19%)</title><rect x="1099.6" y="261" width="2.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1102.61" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (542,736,394 samples, 0.41%)</title><rect x="901.6" y="293" width="4.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="904.61" y="303.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (9,895,796,625 samples, 7.55%)</title><rect x="718.2" y="357" width="89.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="721.15" y="367.5" >CNF::find_..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,646,368 samples, 0.01%)</title><rect x="981.1" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="984.09" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (188,333,540 samples, 0.14%)</title><rect x="716.5" y="341" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="719.45" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,808,172 samples, 0.01%)</title><rect x="695.2" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="698.23" y="303.5" ></text>
</g>
<g >
<title>CNF::is_pure (11,076,168,270 samples, 8.45%)</title><rect x="340.1" y="389" width="99.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="343.07" y="399.5" >CNF::is_pure</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="197" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1146.42" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (156,006,447 samples, 0.12%)</title><rect x="978.5" y="277" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="981.54" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,592,662 samples, 0.02%)</title><rect x="1187.2" y="213" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1190.25" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (60,532,796 samples, 0.05%)</title><rect x="1057.6" y="245" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1060.58" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (85,309,347 samples, 0.07%)</title><rect x="60.9" y="453" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="63.87" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="341" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1191.40" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,304,484 samples, 0.01%)</title><rect x="900.8" y="197" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.76" y="207.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (75,591,385 samples, 0.06%)</title><rect x="1176.8" y="213" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1179.84" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,399,581 samples, 0.04%)</title><rect x="980.2" y="277" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="983.15" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,088,988 samples, 0.01%)</title><rect x="1058.1" y="261" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1061.12" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (33,264,070 samples, 0.03%)</title><rect x="571.6" y="373" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="574.64" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="277" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1189.02" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,072,278 samples, 0.06%)</title><rect x="1176.1" y="165" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1179.08" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (46,747,273 samples, 0.04%)</title><rect x="595.7" y="277" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="598.69" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (103,858,388 samples, 0.08%)</title><rect x="717.0" y="197" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="720.00" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (56,694,042 samples, 0.04%)</title><rect x="993.3" y="101" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="996.34" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (532,779,234 samples, 0.41%)</title><rect x="907.1" y="277" width="4.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="910.06" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (151,222,001 samples, 0.12%)</title><rect x="911.9" y="261" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="914.85" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (739,061,518 samples, 0.56%)</title><rect x="584.5" y="325" width="6.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="587.47" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (75,723,404 samples, 0.06%)</title><rect x="10.1" y="869" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.09" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (47,555,584 samples, 0.04%)</title><rect x="63.3" y="373" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="66.26" y="383.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (553,235,509 samples, 0.42%)</title><rect x="322.5" y="373" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="325.52" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (137,295,369 samples, 0.10%)</title><rect x="911.9" y="213" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="914.94" y="223.5" ></text>
</g>
<g >
<title>CNF::~CNF (37,784,744 samples, 0.03%)</title><rect x="1186.4" y="373" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1189.40" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (193,568,149 samples, 0.15%)</title><rect x="456.4" y="277" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="459.42" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="373" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1192.27" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (122,514,874 samples, 0.09%)</title><rect x="992.8" y="293" width="1.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="995.83" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (103,189,067 samples, 0.08%)</title><rect x="95.0" y="309" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="97.95" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (523,233,929 samples, 0.40%)</title><rect x="907.1" y="229" width="4.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="910.06" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="197" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.55" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (19,005,189 samples, 0.01%)</title><rect x="694.4" y="357" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="697.37" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (27,721,841 samples, 0.02%)</title><rect x="1144.8" y="229" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1147.78" y="239.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (70,364,336 samples, 0.05%)</title><rect x="1058.6" y="213" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1061.59" y="223.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (7,027,974,864 samples, 5.36%)</title><rect x="916.7" y="325" width="63.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="919.68" y="335.5" >CNF::f..</text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (292,847,330 samples, 0.22%)</title><rect x="143.2" y="421" width="2.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="146.22" y="431.5" ></text>
</g>
<g >
<title>CNF::~CNF (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="437" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.85" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="181" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1109.04" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,182,591 samples, 0.05%)</title><rect x="899.7" y="293" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="902.75" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (61,151,784 samples, 0.05%)</title><rect x="45.5" y="469" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="48.45" y="479.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (141,666,458 samples, 0.11%)</title><rect x="441.4" y="389" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="444.42" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (97,956,946 samples, 0.07%)</title><rect x="592.9" y="277" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="595.85" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="181" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="341.85" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (103,858,388 samples, 0.08%)</title><rect x="717.0" y="213" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="720.00" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (137,295,369 samples, 0.10%)</title><rect x="911.9" y="197" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="914.94" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (142,468,817 samples, 0.11%)</title><rect x="151.6" y="325" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="154.59" y="335.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (38,044,976 samples, 0.03%)</title><rect x="980.7" y="245" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="983.70" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (56,706,214 samples, 0.04%)</title><rect x="807.5" y="325" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="810.47" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,041,589 samples, 0.01%)</title><rect x="899.3" y="309" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="902.28" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="181" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1146.42" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,253,824,106 samples, 0.96%)</title><rect x="981.5" y="309" width="11.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="984.51" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,265,058 samples, 0.03%)</title><rect x="1099.0" y="261" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1102.02" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="261" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1187.67" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,230,129 samples, 0.01%)</title><rect x="93.8" y="373" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="96.76" y="383.5" ></text>
</g>
<g >
<title>operator new (202,965,240 samples, 0.15%)</title><rect x="337.0" y="213" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.02" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (57,238,103 samples, 0.04%)</title><rect x="62.7" y="389" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="65.74" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="229" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1106.99" y="239.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (482,091,535 samples, 0.37%)</title><rect x="145.9" y="421" width="4.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="148.85" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (99,070,798 samples, 0.08%)</title><rect x="461.5" y="293" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="464.49" y="303.5" ></text>
</g>
<g >
<title>CNF::is_pure (10,512,775,411 samples, 8.02%)</title><rect x="599.2" y="357" width="94.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="602.16" y="367.5" >CNF::is_pure</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,920,057 samples, 0.01%)</title><rect x="1181.3" y="149" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1184.33" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (28,054,218 samples, 0.02%)</title><rect x="1105.7" y="245" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1108.70" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (33,240,497 samples, 0.03%)</title><rect x="63.3" y="325" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="66.26" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (61,466,467 samples, 0.05%)</title><rect x="993.3" y="197" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="996.30" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,633,687 samples, 0.02%)</title><rect x="694.2" y="325" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="697.16" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (37,570,321 samples, 0.03%)</title><rect x="1143.6" y="181" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1146.63" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,304,484 samples, 0.01%)</title><rect x="900.8" y="245" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="903.76" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (190,020,753 samples, 0.14%)</title><rect x="90.0" y="421" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="93.01" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (23,216,050 samples, 0.02%)</title><rect x="45.8" y="309" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="48.80" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="181" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1061.59" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (33,149,839 samples, 0.03%)</title><rect x="45.5" y="421" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="48.45" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,538,569 samples, 0.04%)</title><rect x="141.5" y="389" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="144.47" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (108,763,483 samples, 0.08%)</title><rect x="826.6" y="197" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="829.59" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (47,237,949 samples, 0.04%)</title><rect x="231.9" y="293" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="234.94" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (598,933,283 samples, 0.46%)</title><rect x="817.1" y="277" width="5.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="820.14" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (75,723,404 samples, 0.06%)</title><rect x="10.1" y="949" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.09" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (27,988,987 samples, 0.02%)</title><rect x="825.8" y="309" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="828.79" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (70,694,519 samples, 0.05%)</title><rect x="916.0" y="181" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="919.01" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (99,070,798 samples, 0.08%)</title><rect x="461.5" y="261" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="464.49" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (57,238,103 samples, 0.04%)</title><rect x="62.7" y="437" width="0.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="65.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (13,976,440 samples, 0.01%)</title><rect x="981.3" y="277" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="984.25" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (544,135,634 samples, 0.42%)</title><rect x="322.6" y="341" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="325.61" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (75,495,286 samples, 0.06%)</title><rect x="36.5" y="485" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="39.49" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,061,213 samples, 0.02%)</title><rect x="18.1" y="997" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="21.08" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (19,062,331 samples, 0.01%)</title><rect x="1189.3" y="325" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.32" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (56,706,214 samples, 0.04%)</title><rect x="807.5" y="341" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="810.47" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (19,035,011 samples, 0.01%)</title><rect x="1105.3" y="133" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1108.35" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,942,402 samples, 0.01%)</title><rect x="33.1" y="405" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="36.12" y="415.5" ></text>
</g>
<g >
<title>CNF::solve_helper (121,703,721,292 samples, 92.83%)</title><rect x="94.2" y="469" width="1095.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.23" y="479.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (417,219,316 samples, 0.32%)</title><rect x="1049.3" y="277" width="3.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1052.27" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (57,106,131 samples, 0.04%)</title><rect x="913.2" y="229" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="916.21" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (179,100,354 samples, 0.14%)</title><rect x="711.6" y="277" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="714.60" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (18,215,544 samples, 0.01%)</title><rect x="38.0" y="341" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="40.98" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (701,075,574 samples, 0.53%)</title><rect x="705.0" y="261" width="6.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="708.00" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,559,360 samples, 0.02%)</title><rect x="1164.1" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.13" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,307,148 samples, 0.01%)</title><rect x="979.9" y="309" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="982.94" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (150,353,591 samples, 0.11%)</title><rect x="822.5" y="277" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="825.53" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (193,568,149 samples, 0.15%)</title><rect x="456.4" y="261" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.42" y="271.5" ></text>
</g>
<g >
<title>CNF::is_pure (3,540,375,447 samples, 2.70%)</title><rect x="1107.1" y="261" width="31.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1110.14" y="271.5" >CN..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (75,723,404 samples, 0.06%)</title><rect x="10.1" y="901" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.09" y="911.5" ></text>
</g>
<g >
<title>CNF::CNF (65,327,405 samples, 0.05%)</title><rect x="17.0" y="981" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="19.98" y="991.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (584,603,086 samples, 0.45%)</title><rect x="1139.4" y="277" width="5.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1142.43" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (14,206,441 samples, 0.01%)</title><rect x="694.2" y="261" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="697.16" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (28,445,331 samples, 0.02%)</title><rect x="1187.8" y="277" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1190.85" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (185,242,987 samples, 0.14%)</title><rect x="90.1" y="405" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="93.05" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,326,175 samples, 0.01%)</title><rect x="1166.1" y="229" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1169.09" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (18,934,695 samples, 0.01%)</title><rect x="1166.2" y="213" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1169.22" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,562,236 samples, 0.03%)</title><rect x="1165.5" y="149" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1168.45" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="293" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.25" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (75,356,621 samples, 0.06%)</title><rect x="462.7" y="165" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="465.72" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,867,463 samples, 0.01%)</title><rect x="1143.2" y="133" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1146.21" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,397,940 samples, 0.02%)</title><rect x="1141.3" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1144.29" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (112,260,326 samples, 0.09%)</title><rect x="458.3" y="293" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="461.29" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,016,872 samples, 0.06%)</title><rect x="572.2" y="325" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="575.23" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (27,873,416 samples, 0.02%)</title><rect x="321.7" y="357" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="324.72" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (42,553,806 samples, 0.03%)</title><rect x="459.7" y="261" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="462.72" y="271.5" ></text>
</g>
<g >
<title>operator new (108,183,963 samples, 0.08%)</title><rect x="150.6" y="325" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="153.57" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (33,243,382 samples, 0.03%)</title><rect x="231.4" y="405" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="234.43" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (79,816,268 samples, 0.06%)</title><rect x="61.6" y="373" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="64.64" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,095,153 samples, 0.04%)</title><rect x="93.2" y="389" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="96.21" y="399.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (18,893,515 samples, 0.01%)</title><rect x="29.6" y="565" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="32.64" y="575.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,181,235 samples, 0.03%)</title><rect x="149.3" y="293" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="152.30" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (23,669,788 samples, 0.02%)</title><rect x="149.7" y="341" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="152.68" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (37,178,936 samples, 0.03%)</title><rect x="17.0" y="805" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="19.98" y="815.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (65,327,405 samples, 0.05%)</title><rect x="17.0" y="933" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="19.98" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (28,380,877 samples, 0.02%)</title><rect x="334.9" y="277" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="337.94" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (190,020,753 samples, 0.14%)</title><rect x="90.0" y="437" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="93.01" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (60,532,796 samples, 0.05%)</title><rect x="1057.6" y="229" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1060.58" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (46,747,273 samples, 0.04%)</title><rect x="595.7" y="229" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="598.69" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,477,988 samples, 0.03%)</title><rect x="1176.9" y="133" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1179.93" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (75,723,404 samples, 0.06%)</title><rect x="10.1" y="885" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.09" y="895.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (729,629,216 samples, 0.56%)</title><rect x="584.5" y="293" width="6.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="587.47" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,070,451 samples, 0.01%)</title><rect x="808.8" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="811.79" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,880,771 samples, 0.01%)</title><rect x="1101.7" y="197" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.66" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (57,238,103 samples, 0.04%)</title><rect x="62.7" y="405" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="65.74" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (278,000,658 samples, 0.21%)</title><rect x="595.6" y="357" width="2.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="598.65" y="367.5" ></text>
</g>
<g >
<title>CNF::CNF (188,333,540 samples, 0.14%)</title><rect x="716.5" y="357" width="1.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="719.45" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (50,568,719 samples, 0.04%)</title><rect x="695.4" y="309" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="698.44" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (75,468,277 samples, 0.06%)</title><rect x="916.0" y="197" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="918.96" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1109.04" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="389" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.85" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (393,562,332 samples, 0.30%)</title><rect x="981.9" y="245" width="3.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="984.93" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (108,433,681 samples, 0.08%)</title><rect x="462.5" y="181" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="465.47" y="191.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (37,899,291 samples, 0.03%)</title><rect x="26.7" y="997" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="29.70" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (129,079,916 samples, 0.10%)</title><rect x="573.0" y="293" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="576.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (60,706,386 samples, 0.05%)</title><rect x="991.8" y="229" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="994.79" y="239.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (61,056,622 samples, 0.05%)</title><rect x="571.6" y="389" width="0.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="574.55" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,307,491 samples, 0.01%)</title><rect x="62.6" y="453" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="65.61" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (66,356,459 samples, 0.05%)</title><rect x="219.4" y="341" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="222.43" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (23,832,565 samples, 0.02%)</title><rect x="1162.5" y="229" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1165.47" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28,419,604 samples, 0.02%)</title><rect x="1144.4" y="245" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1147.44" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="213" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1187.67" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,313,046 samples, 0.02%)</title><rect x="442.4" y="261" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="445.40" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (165,248,618 samples, 0.13%)</title><rect x="596.2" y="245" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="599.19" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (103,446,719 samples, 0.08%)</title><rect x="334.3" y="357" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="337.26" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (61,428,716 samples, 0.05%)</title><rect x="230.6" y="341" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="233.62" y="351.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (23,781,707 samples, 0.02%)</title><rect x="1099.0" y="213" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1102.02" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (523,233,929 samples, 0.40%)</title><rect x="907.1" y="245" width="4.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="910.06" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (14,211,923 samples, 0.01%)</title><rect x="1186.7" y="373" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1189.74" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (79,816,268 samples, 0.06%)</title><rect x="61.6" y="405" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="64.64" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (47,039,296 samples, 0.04%)</title><rect x="716.5" y="213" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="719.49" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (840,182,385 samples, 0.64%)</title><rect x="575.4" y="325" width="7.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="578.38" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,091,799 samples, 0.02%)</title><rect x="1048.6" y="245" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1051.63" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (13,548,089 samples, 0.01%)</title><rect x="1058.0" y="149" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1061.00" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="229" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1188.55" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="165" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.67" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="101" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1109.54" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51,639,191 samples, 0.04%)</title><rect x="992.8" y="181" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="995.83" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (66,156,776 samples, 0.05%)</title><rect x="916.0" y="117" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="919.05" y="127.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (113,136,353 samples, 0.09%)</title><rect x="990.1" y="245" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="993.14" y="255.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="709" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="719.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,268,106 samples, 0.01%)</title><rect x="458.2" y="261" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="461.16" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (37,178,936 samples, 0.03%)</title><rect x="17.0" y="821" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="19.98" y="831.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (84,971,069 samples, 0.06%)</title><rect x="694.6" y="325" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="697.63" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (130,782,043 samples, 0.10%)</title><rect x="695.4" y="357" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="698.40" y="367.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (14,262,531 samples, 0.01%)</title><rect x="1175.7" y="245" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1178.74" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="229" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="341.85" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (701,075,574 samples, 0.53%)</title><rect x="705.0" y="277" width="6.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="708.00" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="805" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="815.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (166,913,852 samples, 0.13%)</title><rect x="572.9" y="357" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="575.91" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (51,495,378 samples, 0.04%)</title><rect x="826.1" y="261" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="829.09" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="277" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.40" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (23,669,788 samples, 0.02%)</title><rect x="149.7" y="357" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="152.68" y="367.5" ></text>
</g>
<g >
<title>CNF::CNF (84,337,771 samples, 0.06%)</title><rect x="1058.5" y="293" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1061.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,304,484 samples, 0.01%)</title><rect x="900.8" y="261" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="903.76" y="271.5" ></text>
</g>
<g >
<title>CNF::is_pure (4,960,797,812 samples, 3.78%)</title><rect x="96.4" y="437" width="44.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="99.40" y="447.5" >CNF:..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (718,354,156 samples, 0.55%)</title><rect x="443.3" y="325" width="6.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="446.29" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (127,448,079 samples, 0.10%)</title><rect x="321.0" y="389" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="324.04" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (51,564,913 samples, 0.04%)</title><rect x="1138.5" y="245" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1141.54" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (70,594,492 samples, 0.05%)</title><rect x="715.3" y="325" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="718.31" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (355,147,394 samples, 0.27%)</title><rect x="1053.5" y="229" width="3.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1056.53" y="239.5" ></text>
</g>
<g >
<title>CNF::is_pure (4,278,876,638 samples, 3.26%)</title><rect x="1059.9" y="277" width="38.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1062.95" y="287.5" >CNF..</text>
</g>
<g >
<title>__GI___libc_malloc (66,246,888 samples, 0.05%)</title><rect x="94.2" y="325" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="97.23" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (51,639,191 samples, 0.04%)</title><rect x="992.8" y="229" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="995.83" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="213" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="341.85" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (51,957,583 samples, 0.04%)</title><rect x="142.2" y="357" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="145.19" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (14,311,398 samples, 0.01%)</title><rect x="231.7" y="405" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="234.73" y="415.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="885" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="895.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="229" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1061.46" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (46,747,273 samples, 0.04%)</title><rect x="595.7" y="325" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="598.69" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (66,246,888 samples, 0.05%)</title><rect x="94.2" y="357" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="97.23" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (47,555,274 samples, 0.04%)</title><rect x="911.3" y="197" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="914.34" y="207.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (75,887,644 samples, 0.06%)</title><rect x="219.4" y="421" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="222.39" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,600,204,968 samples, 1.22%)</title><rect x="901.0" y="325" width="14.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="904.02" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (23,713,505 samples, 0.02%)</title><rect x="807.7" y="293" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="810.68" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (14,320,845 samples, 0.01%)</title><rect x="1183.3" y="117" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1186.25" y="127.5" ></text>
</g>
<g >
<title>_int_free (19,090,270 samples, 0.01%)</title><rect x="715.1" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="718.06" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,435,264 samples, 0.03%)</title><rect x="809.0" y="277" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="812.00" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,045,051,399 samples, 0.80%)</title><rect x="1049.0" y="293" width="9.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1052.01" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (97,956,946 samples, 0.07%)</title><rect x="592.9" y="293" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="595.85" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (140,813,531 samples, 0.11%)</title><rect x="822.5" y="197" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="825.53" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,181,235 samples, 0.03%)</title><rect x="149.3" y="309" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="152.30" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,410,572 samples, 0.02%)</title><rect x="321.8" y="325" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="324.76" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="245" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="600.72" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (37,784,744 samples, 0.03%)</title><rect x="1186.4" y="357" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1189.40" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (340,955,971 samples, 0.26%)</title><rect x="1053.5" y="181" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1056.53" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (66,246,888 samples, 0.05%)</title><rect x="94.2" y="309" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="97.23" y="319.5" ></text>
</g>
<g >
<title>operator new (126,576,655 samples, 0.10%)</title><rect x="27.9" y="997" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.90" y="1007.5" ></text>
</g>
<g >
<title>CNF::dpll (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="949" width="1160.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="32.59" y="959.5" >CNF::dpll</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,307,571 samples, 0.03%)</title><rect x="44.8" y="437" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="47.78" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (79,919,129 samples, 0.06%)</title><rect x="1143.6" y="197" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1146.63" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (51,615,074 samples, 0.04%)</title><rect x="1106.2" y="245" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1109.21" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (178,202,436 samples, 0.14%)</title><rect x="591.2" y="229" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="594.21" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,309,115 samples, 0.01%)</title><rect x="32.9" y="453" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="35.87" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (150,353,591 samples, 0.11%)</title><rect x="822.5" y="293" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="825.53" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (108,625,928 samples, 0.08%)</title><rect x="320.1" y="373" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="323.06" y="383.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (32,775,381 samples, 0.02%)</title><rect x="899.4" y="341" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="902.41" y="351.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (38,067,101 samples, 0.03%)</title><rect x="1183.5" y="197" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1186.47" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,083,890 samples, 0.01%)</title><rect x="17.8" y="949" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="20.78" y="959.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,395,983 samples, 0.02%)</title><rect x="1185.5" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1188.47" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23,467,367 samples, 0.02%)</title><rect x="150.2" y="405" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="153.19" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (61,381,716 samples, 0.05%)</title><rect x="1105.0" y="165" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1107.97" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="277" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1190.25" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (75,731,137 samples, 0.06%)</title><rect x="336.0" y="245" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="339.04" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,723,404 samples, 0.06%)</title><rect x="10.1" y="965" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.09" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="149" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1059.73" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (61,237,452 samples, 0.05%)</title><rect x="335.2" y="373" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="338.19" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="213" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1188.55" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (37,138,162 samples, 0.03%)</title><rect x="992.0" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="995.00" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (108,183,963 samples, 0.08%)</title><rect x="150.6" y="341" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="153.57" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (142,160,916 samples, 0.11%)</title><rect x="91.9" y="389" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="94.93" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (184,220,626 samples, 0.14%)</title><rect x="141.3" y="453" width="1.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="144.34" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (201,409,872 samples, 0.15%)</title><rect x="458.3" y="341" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="461.29" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="437" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1192.27" y="447.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,009,876,648 samples, 0.77%)</title><rect x="1166.6" y="245" width="9.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1169.65" y="255.5" ></text>
</g>
<g >
<title>operator new (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.04" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (207,836,255 samples, 0.16%)</title><rect x="456.4" y="293" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="459.42" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,469,997 samples, 0.04%)</title><rect x="1098.6" y="229" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1101.59" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (23,216,050 samples, 0.02%)</title><rect x="45.8" y="325" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="48.80" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,093,514 samples, 0.05%)</title><rect x="36.5" y="453" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.53" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (132,193,736 samples, 0.10%)</title><rect x="717.0" y="261" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="719.96" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (65,327,405 samples, 0.05%)</title><rect x="17.0" y="901" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="19.98" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (27,672,652 samples, 0.02%)</title><rect x="37.9" y="469" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="40.94" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (23,821,996 samples, 0.02%)</title><rect x="62.4" y="421" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="65.40" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (57,238,103 samples, 0.04%)</title><rect x="62.7" y="341" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="65.74" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="261" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1189.44" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (14,023,736 samples, 0.01%)</title><rect x="142.8" y="405" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="145.79" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (80,510,140 samples, 0.06%)</title><rect x="336.0" y="373" width="0.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="339.00" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (78,309,973 samples, 0.06%)</title><rect x="460.1" y="357" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="463.10" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="149" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1180.31" y="159.5" ></text>
</g>
<g >
<title>_int_malloc (33,149,839 samples, 0.03%)</title><rect x="45.5" y="341" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="48.45" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (714,575,922 samples, 0.55%)</title><rect x="697.6" y="293" width="6.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="700.59" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (61,182,591 samples, 0.05%)</title><rect x="899.7" y="325" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="902.75" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="325" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1191.40" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="277" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="466.44" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (47,039,296 samples, 0.04%)</title><rect x="716.5" y="197" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="719.49" y="207.5" ></text>
</g>
<g >
<title>unlink_chunk (23,450,193 samples, 0.02%)</title><rect x="151.3" y="261" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="154.34" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="245" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1061.46" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (182,989,092 samples, 0.14%)</title><rect x="591.2" y="293" width="1.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="594.21" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,181,235 samples, 0.03%)</title><rect x="149.3" y="373" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="152.30" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (137,295,369 samples, 0.10%)</title><rect x="911.9" y="181" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="914.94" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,796,578 samples, 0.02%)</title><rect x="1183.8" y="181" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1186.81" y="191.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="725" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="735.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (151,222,001 samples, 0.12%)</title><rect x="911.9" y="277" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="914.85" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="117" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1061.59" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (52,293,743 samples, 0.04%)</title><rect x="460.8" y="357" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="463.81" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,304,484 samples, 0.01%)</title><rect x="900.8" y="277" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="903.76" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,725,176 samples, 0.04%)</title><rect x="142.2" y="405" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="145.19" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (33,149,839 samples, 0.03%)</title><rect x="45.5" y="405" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="48.45" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,230,129 samples, 0.01%)</title><rect x="93.8" y="357" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="96.76" y="367.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (7,967,503,247 samples, 6.08%)</title><rect x="827.7" y="341" width="71.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="830.70" y="351.5" >CNF::fin..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,030,702 samples, 0.01%)</title><rect x="1162.7" y="229" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1165.69" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="245" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.40" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,181,235 samples, 0.03%)</title><rect x="149.3" y="389" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="152.30" y="399.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (52,221,708 samples, 0.04%)</title><rect x="37.2" y="421" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="40.21" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="181" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1180.31" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (677,469,081 samples, 0.52%)</title><rect x="810.2" y="293" width="6.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="813.19" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (217,272,353 samples, 0.17%)</title><rect x="336.9" y="293" width="1.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="339.89" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (70,875,683 samples, 0.05%)</title><rect x="993.3" y="213" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="996.30" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,279,835 samples, 0.03%)</title><rect x="44.5" y="421" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="47.48" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (189,116,442 samples, 0.14%)</title><rect x="1141.7" y="213" width="1.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1144.72" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (57,238,103 samples, 0.04%)</title><rect x="62.7" y="421" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="65.74" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (46,929,644 samples, 0.04%)</title><rect x="457.7" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="460.74" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (37,307,571 samples, 0.03%)</title><rect x="44.8" y="389" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="47.78" y="399.5" ></text>
</g>
<g >
<title>CNF::CNF (104,793,687 samples, 0.08%)</title><rect x="62.7" y="469" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="65.74" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="85" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1109.54" y="95.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="357" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1190.25" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (65,327,405 samples, 0.05%)</title><rect x="17.0" y="917" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.98" y="927.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (532,779,234 samples, 0.41%)</title><rect x="907.1" y="261" width="4.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="910.06" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,041,589 samples, 0.01%)</title><rect x="899.3" y="325" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="902.28" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (37,178,936 samples, 0.03%)</title><rect x="17.0" y="869" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="19.98" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (108,763,483 samples, 0.08%)</title><rect x="826.6" y="165" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="829.59" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,410,572 samples, 0.02%)</title><rect x="321.8" y="341" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="324.76" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (28,001,945 samples, 0.02%)</title><rect x="45.8" y="389" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="48.75" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="757" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.32" y="767.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,288,495 samples, 0.06%)</title><rect x="900.3" y="309" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="903.30" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (18,229,709 samples, 0.01%)</title><rect x="1144.8" y="149" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1147.78" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (169,927,847 samples, 0.13%)</title><rect x="596.2" y="261" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="599.19" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (169,675,579 samples, 0.13%)</title><rect x="805.6" y="309" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="808.55" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (37,307,571 samples, 0.03%)</title><rect x="44.8" y="373" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="47.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (183,694,324 samples, 0.14%)</title><rect x="94.2" y="437" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="97.23" y="447.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (407,660,259 samples, 0.31%)</title><rect x="981.8" y="293" width="3.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="984.80" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,216,050 samples, 0.02%)</title><rect x="45.8" y="277" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="48.80" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (8,726,641,547 samples, 6.66%)</title><rect x="1106.0" y="293" width="78.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1109.04" y="303.5" >CNF::solv..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (47,039,296 samples, 0.04%)</title><rect x="716.5" y="277" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="719.49" y="287.5" ></text>
</g>
<g >
<title>CNF::CNF (183,694,324 samples, 0.14%)</title><rect x="94.2" y="453" width="1.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="97.23" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (57,106,131 samples, 0.04%)</title><rect x="913.2" y="245" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="916.21" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (33,098,738 samples, 0.03%)</title><rect x="594.7" y="357" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="597.67" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (33,098,738 samples, 0.03%)</title><rect x="594.7" y="341" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="597.67" y="351.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="869" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="879.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::propagate_var_single_value (71,235,210 samples, 0.05%)</title><rect x="321.1" y="357" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="324.08" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,435,264 samples, 0.03%)</title><rect x="809.0" y="261" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="812.00" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,309,115 samples, 0.01%)</title><rect x="32.9" y="469" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="35.87" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,201,391 samples, 0.01%)</title><rect x="1181.5" y="101" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1184.54" y="111.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (89,537,151 samples, 0.07%)</title><rect x="441.6" y="309" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="444.55" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,281,010 samples, 0.03%)</title><rect x="900.4" y="261" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="903.38" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,073,652 samples, 0.01%)</title><rect x="1185.2" y="325" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1188.17" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,281,010 samples, 0.03%)</title><rect x="900.4" y="293" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="903.38" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (79,919,129 samples, 0.06%)</title><rect x="1143.6" y="213" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1146.63" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (340,955,971 samples, 0.26%)</title><rect x="1053.5" y="213" width="3.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1056.53" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (212,809,781 samples, 0.16%)</title><rect x="60.8" y="469" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="63.83" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (23,751,138 samples, 0.02%)</title><rect x="440.1" y="389" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="443.15" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (155,932,706 samples, 0.12%)</title><rect x="232.4" y="373" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="235.37" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (70,610,331 samples, 0.05%)</title><rect x="991.2" y="213" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="994.15" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (155,932,706 samples, 0.12%)</title><rect x="232.4" y="389" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="235.37" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (131,496,841 samples, 0.10%)</title><rect x="462.4" y="341" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="465.39" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (283,364,314 samples, 0.22%)</title><rect x="143.3" y="373" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="146.30" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (160,536,854 samples, 0.12%)</title><rect x="596.2" y="197" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="599.24" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (13,976,440 samples, 0.01%)</title><rect x="981.3" y="213" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="984.25" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (311,843,801 samples, 0.24%)</title><rect x="146.4" y="357" width="2.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="149.37" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (729,629,216 samples, 0.56%)</title><rect x="584.5" y="261" width="6.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="587.47" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="741" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="751.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::propagate_var_single_value (113,199,347 samples, 0.09%)</title><rect x="44.4" y="485" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="47.39" y="495.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,718,636 samples, 0.03%)</title><rect x="219.0" y="405" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="222.00" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (103,446,719 samples, 0.08%)</title><rect x="334.3" y="341" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="337.26" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="213" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.44" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (151,398,027 samples, 0.12%)</title><rect x="36.5" y="501" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="39.49" y="511.5" ></text>
</g>
<g >
<title>__libc_start_call_main (128,928,083,311 samples, 98.34%)</title><rect x="29.6" y="981" width="1160.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="32.59" y="991.5" >__libc_start_call_main</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (47,674,912 samples, 0.04%)</title><rect x="714.8" y="213" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="717.84" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (189,116,442 samples, 0.14%)</title><rect x="1141.7" y="197" width="1.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1144.72" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (103,974,524 samples, 0.08%)</title><rect x="714.3" y="261" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="717.33" y="271.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (71,235,210 samples, 0.05%)</title><rect x="321.1" y="341" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="324.08" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="837" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="20.32" y="847.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,001,945 samples, 0.02%)</title><rect x="45.8" y="437" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="48.75" y="447.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (108,413,386 samples, 0.08%)</title><rect x="61.6" y="453" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="64.64" y="463.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (184,356,121 samples, 0.14%)</title><rect x="1141.7" y="181" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1144.72" y="191.5" ></text>
</g>
<g >
<title>operator new (18,215,544 samples, 0.01%)</title><rect x="38.0" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="40.98" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (122,822,147 samples, 0.09%)</title><rect x="826.6" y="245" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="829.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (70,615,470 samples, 0.05%)</title><rect x="1106.0" y="261" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1109.04" y="271.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (47,469,997 samples, 0.04%)</title><rect x="1098.6" y="277" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1101.59" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (463,246,213 samples, 0.35%)</title><rect x="220.5" y="373" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="223.53" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="773" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="20.32" y="783.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,279,835 samples, 0.03%)</title><rect x="44.5" y="437" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="47.48" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (45,798,445 samples, 0.03%)</title><rect x="695.4" y="277" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="698.44" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="373" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.85" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (18,857,675 samples, 0.01%)</title><rect x="45.1" y="437" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="48.11" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (37,780,104 samples, 0.03%)</title><rect x="1058.7" y="69" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1061.71" y="79.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (686,906,341 samples, 0.52%)</title><rect x="810.1" y="325" width="6.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="813.11" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (70,854,212 samples, 0.05%)</title><rect x="808.9" y="325" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="811.91" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (117,948,947 samples, 0.09%)</title><rect x="440.4" y="341" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="443.36" y="351.5" ></text>
</g>
<g >
<title>CNF::is_pure (321,389,882 samples, 0.25%)</title><rect x="33.5" y="501" width="2.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="36.47" y="511.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="117" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1109.54" y="127.5" ></text>
</g>
<g >
<title>CNF::solve_helper (65,730,527,241 samples, 50.14%)</title><rect x="595.6" y="389" width="591.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="598.65" y="399.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="325" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1189.02" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (207,879,126 samples, 0.16%)</title><rect x="437.8" y="373" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="440.77" y="383.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (7,296,251,485 samples, 5.57%)</title><rect x="152.9" y="437" width="65.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="155.91" y="447.5" >CNF::fi..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (70,452,319 samples, 0.05%)</title><rect x="703.4" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="706.39" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (160,536,854 samples, 0.12%)</title><rect x="596.2" y="213" width="1.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="599.24" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (75,723,404 samples, 0.06%)</title><rect x="10.1" y="933" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.09" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (52,221,708 samples, 0.04%)</title><rect x="37.2" y="389" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="40.21" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (13,797,589 samples, 0.01%)</title><rect x="1144.8" y="101" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1147.82" y="111.5" ></text>
</g>
<g >
<title>CNF::solve_helper (285,118,051 samples, 0.22%)</title><rect x="1181.7" y="229" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1184.67" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (169,714,145 samples, 0.13%)</title><rect x="711.6" y="229" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="714.60" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (108,763,483 samples, 0.08%)</title><rect x="826.6" y="229" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="829.59" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,525,351,790 samples, 1.16%)</title><rect x="322.2" y="421" width="13.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="325.23" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (217,172,459 samples, 0.17%)</title><rect x="216.6" y="389" width="2.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="219.63" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,781,707 samples, 0.02%)</title><rect x="1099.0" y="229" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1102.02" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (189,136,940 samples, 0.14%)</title><rect x="1176.0" y="245" width="1.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1178.99" y="255.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (11,997,660,606 samples, 9.15%)</title><rect x="463.6" y="389" width="108.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="466.57" y="399.5" >CNF::find_pur..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="466.44" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (235,311,511 samples, 0.18%)</title><rect x="461.5" y="373" width="2.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="464.45" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (42,179,962 samples, 0.03%)</title><rect x="1104.5" y="197" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1107.54" y="207.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (198,403,728 samples, 0.15%)</title><rect x="30.9" y="533" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="33.92" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (23,460,872 samples, 0.02%)</title><rect x="1189.0" y="421" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.02" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (37,855,054 samples, 0.03%)</title><rect x="704.7" y="309" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="707.66" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (137,695,748 samples, 0.11%)</title><rect x="151.6" y="261" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="154.63" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="325" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1191.85" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13,858,127 samples, 0.01%)</title><rect x="439.6" y="373" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="442.64" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (726,819,976 samples, 0.55%)</title><rect x="1177.7" y="245" width="6.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1180.70" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,942,402 samples, 0.01%)</title><rect x="33.1" y="469" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="36.12" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="229" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.44" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="245" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="466.44" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="149" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1061.46" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (61,362,275 samples, 0.05%)</title><rect x="595.0" y="341" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="597.97" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,781,756 samples, 0.01%)</title><rect x="823.6" y="181" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="826.63" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,010,161 samples, 0.03%)</title><rect x="149.9" y="341" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="152.89" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (60,706,386 samples, 0.05%)</title><rect x="991.8" y="213" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="994.79" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,469,997 samples, 0.04%)</title><rect x="1098.6" y="245" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1101.59" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (131,496,841 samples, 0.10%)</title><rect x="462.4" y="357" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="465.39" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (56,644,272 samples, 0.04%)</title><rect x="334.7" y="325" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="337.68" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,119,743 samples, 0.01%)</title><rect x="1058.3" y="261" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1061.25" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,646,368 samples, 0.01%)</title><rect x="981.1" y="245" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="984.09" y="255.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,001,057,516 samples, 97.63%)</title><rect x="37.9" y="517" width="1152.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.85" y="527.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (51,604,057 samples, 0.04%)</title><rect x="913.7" y="213" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="916.73" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (80,510,140 samples, 0.06%)</title><rect x="336.0" y="341" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="339.00" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (108,637,016 samples, 0.08%)</title><rect x="717.0" y="229" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="719.96" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (79,909,687 samples, 0.06%)</title><rect x="980.7" y="293" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="983.66" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="341" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="66.56" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,304,219 samples, 0.01%)</title><rect x="899.5" y="293" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="902.53" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (52,221,708 samples, 0.04%)</title><rect x="37.2" y="405" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="40.21" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,490,227 samples, 0.03%)</title><rect x="1181.3" y="181" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1184.29" y="191.5" ></text>
</g>
<g >
<title>_int_free (18,858,750 samples, 0.01%)</title><rect x="914.0" y="149" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="917.02" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (42,553,806 samples, 0.03%)</title><rect x="459.7" y="245" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="462.72" y="255.5" ></text>
</g>
<g >
<title>CNF::CNF (37,155,606 samples, 0.03%)</title><rect x="37.9" y="501" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="40.85" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (431,012,028 samples, 0.33%)</title><rect x="225.3" y="309" width="3.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="228.26" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (543,736,171 samples, 0.41%)</title><rect x="328.1" y="325" width="4.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="331.09" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (431,012,028 samples, 0.33%)</title><rect x="225.3" y="325" width="3.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="228.26" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,249,286,348 samples, 0.95%)</title><rect x="704.0" y="341" width="11.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="707.03" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (108,284,139 samples, 0.08%)</title><rect x="1104.5" y="213" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1107.54" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,911,532 samples, 0.03%)</title><rect x="597.7" y="229" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="600.72" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (482,091,535 samples, 0.37%)</title><rect x="145.9" y="405" width="4.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="148.85" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (44,692,014 samples, 0.03%)</title><rect x="1048.2" y="245" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1051.23" y="255.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="165" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1106.99" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (23,562,033 samples, 0.02%)</title><rect x="450.1" y="341" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="453.14" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (89,586,211 samples, 0.07%)</title><rect x="583.7" y="325" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="586.67" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="421" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1191.85" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,292,305 samples, 0.01%)</title><rect x="1185.6" y="165" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1188.60" y="175.5" ></text>
</g>
<g >
<title>CNF::CNF (122,514,874 samples, 0.09%)</title><rect x="992.8" y="309" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="995.83" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (23,728,993 samples, 0.02%)</title><rect x="63.3" y="245" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="66.34" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,473,485 samples, 0.02%)</title><rect x="63.3" y="261" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="66.30" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (85,259,846 samples, 0.07%)</title><rect x="590.3" y="245" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="593.27" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (23,466,202 samples, 0.02%)</title><rect x="1185.0" y="325" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1187.96" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (46,802,447 samples, 0.04%)</title><rect x="334.3" y="309" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="337.26" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,548,051 samples, 0.03%)</title><rect x="980.7" y="277" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="983.70" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (393,029,655 samples, 0.30%)</title><rect x="1163.0" y="261" width="3.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1166.03" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,399,581 samples, 0.04%)</title><rect x="980.2" y="293" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="983.15" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23,523,180 samples, 0.02%)</title><rect x="456.1" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="459.12" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,313,046 samples, 0.02%)</title><rect x="442.4" y="293" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="445.40" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,511,168 samples, 0.02%)</title><rect x="1183.0" y="149" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1186.04" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (103,858,388 samples, 0.08%)</title><rect x="717.0" y="181" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="720.00" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="213" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1109.04" y="223.5" ></text>
</g>
<g >
<title>malloc_consolidate (38,128,854 samples, 0.03%)</title><rect x="27.6" y="997" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="30.55" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,535,558 samples, 0.10%)</title><rect x="333.1" y="357" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="336.07" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (523,233,929 samples, 0.40%)</title><rect x="907.1" y="213" width="4.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="910.06" y="223.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (132,193,736 samples, 0.10%)</title><rect x="717.0" y="277" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="719.96" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (89,908,047 samples, 0.07%)</title><rect x="230.6" y="373" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="233.62" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="773" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="783.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (137,695,748 samples, 0.11%)</title><rect x="151.6" y="277" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="154.63" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (747,424,770 samples, 0.57%)</title><rect x="224.7" y="389" width="6.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="227.70" y="399.5" ></text>
</g>
<g >
<title>CNF::CNF (14,252,220 samples, 0.01%)</title><rect x="30.8" y="533" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="33.79" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (99,070,798 samples, 0.08%)</title><rect x="461.5" y="309" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="464.49" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (854,627,610 samples, 0.65%)</title><rect x="906.5" y="309" width="7.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="909.50" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="405" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1191.40" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (47,039,296 samples, 0.04%)</title><rect x="716.5" y="229" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="719.49" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (78,309,973 samples, 0.06%)</title><rect x="460.1" y="373" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="463.10" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (112,924,577 samples, 0.09%)</title><rect x="462.4" y="277" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="465.43" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="181" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1187.67" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="869" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="20.32" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14,283,727 samples, 0.01%)</title><rect x="1177.5" y="197" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1180.52" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (28,001,945 samples, 0.02%)</title><rect x="45.8" y="341" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="48.75" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,023,736 samples, 0.01%)</title><rect x="142.8" y="341" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="145.79" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (206,903,202 samples, 0.16%)</title><rect x="1139.7" y="229" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1142.69" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,181,235 samples, 0.03%)</title><rect x="149.3" y="325" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="152.30" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (13,976,440 samples, 0.01%)</title><rect x="981.3" y="229" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="984.25" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="757" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="767.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (18,967,484 samples, 0.01%)</title><rect x="440.0" y="357" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="442.98" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (19,012,006 samples, 0.01%)</title><rect x="32.7" y="453" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="35.70" y="463.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (431,012,028 samples, 0.33%)</title><rect x="225.3" y="341" width="3.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="228.26" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,300,605,819 samples, 0.99%)</title><rect x="220.2" y="421" width="11.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="223.20" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,538,569 samples, 0.04%)</title><rect x="141.5" y="405" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="144.47" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (188,280,622 samples, 0.14%)</title><rect x="897.6" y="293" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="900.59" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,435,264 samples, 0.03%)</title><rect x="809.0" y="245" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="812.00" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,091,799 samples, 0.02%)</title><rect x="1048.6" y="213" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1051.63" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (47,136,044 samples, 0.04%)</title><rect x="906.1" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="909.08" y="255.5" ></text>
</g>
<g >
<title>CNF::CNF (354,786,392 samples, 0.27%)</title><rect x="336.0" y="405" width="3.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="339.00" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (42,179,607 samples, 0.03%)</title><rect x="915.5" y="277" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="918.54" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,469,997 samples, 0.04%)</title><rect x="1098.6" y="261" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1101.59" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (28,406,220 samples, 0.02%)</title><rect x="694.1" y="341" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="697.12" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (23,598,821 samples, 0.02%)</title><rect x="93.7" y="405" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="96.68" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (75,808,396 samples, 0.06%)</title><rect x="1181.0" y="213" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1183.99" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1109.54" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,149,839 samples, 0.03%)</title><rect x="45.5" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="48.45" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (47,237,949 samples, 0.04%)</title><rect x="231.9" y="325" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="234.94" y="335.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (33,192,967 samples, 0.03%)</title><rect x="141.0" y="453" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="144.04" y="463.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (47,387,443 samples, 0.04%)</title><rect x="93.3" y="357" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="96.25" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate (19,000,396 samples, 0.01%)</title><rect x="1106.0" y="117" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1109.04" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (37,178,936 samples, 0.03%)</title><rect x="17.0" y="837" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.98" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (208,085,665 samples, 0.16%)</title><rect x="569.6" y="357" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="572.64" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (217,377,688 samples, 0.17%)</title><rect x="456.3" y="325" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="459.33" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,010,161 samples, 0.03%)</title><rect x="149.9" y="357" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="152.89" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (23,571,968 samples, 0.02%)</title><rect x="322.0" y="373" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="324.97" y="383.5" ></text>
</g>
<g >
<title>CNF::is_pure (18,982,752 samples, 0.01%)</title><rect x="1184.0" y="165" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1187.02" y="175.5" ></text>
</g>
<g >
<title>CNF::is_pure (1,546,900,852 samples, 1.18%)</title><rect x="46.1" y="469" width="14.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="49.13" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (61,480,526 samples, 0.05%)</title><rect x="916.1" y="101" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="919.09" y="111.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (56,515,189 samples, 0.04%)</title><rect x="32.9" y="533" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="35.87" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,667,570 samples, 0.02%)</title><rect x="1187.8" y="229" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1190.85" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (311,843,801 samples, 0.24%)</title><rect x="146.4" y="325" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="149.37" y="335.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (38,086,465 samples, 0.03%)</title><rect x="319.7" y="421" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="322.68" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (182,989,092 samples, 0.14%)</title><rect x="591.2" y="277" width="1.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="594.21" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (28,395,983 samples, 0.02%)</title><rect x="1185.5" y="325" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1188.47" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (129,079,916 samples, 0.10%)</title><rect x="573.0" y="325" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="576.03" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (70,364,336 samples, 0.05%)</title><rect x="1058.6" y="229" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.59" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (18,978,529 samples, 0.01%)</title><rect x="335.0" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="337.98" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (14,206,441 samples, 0.01%)</title><rect x="694.2" y="293" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="697.16" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,410,572 samples, 0.02%)</title><rect x="321.8" y="277" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.76" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (66,076,596 samples, 0.05%)</title><rect x="825.2" y="309" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="828.20" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (14,315,050 samples, 0.01%)</title><rect x="574.3" y="341" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="577.28" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="293" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1189.44" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="309" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.44" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (311,843,801 samples, 0.24%)</title><rect x="146.4" y="341" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="149.37" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (37,155,606 samples, 0.03%)</title><rect x="37.9" y="485" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="40.85" y="495.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,591,385 samples, 0.06%)</title><rect x="1176.8" y="197" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1179.84" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (544,135,634 samples, 0.42%)</title><rect x="322.6" y="357" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="325.61" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (733,620,835 samples, 0.56%)</title><rect x="697.4" y="341" width="6.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="700.42" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (99,011,757 samples, 0.08%)</title><rect x="823.9" y="261" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="826.88" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (246,048,823 samples, 0.19%)</title><rect x="1099.6" y="245" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1102.61" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,302,661,179 samples, 0.99%)</title><rect x="582.9" y="357" width="11.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="585.94" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (14,335,143 samples, 0.01%)</title><rect x="696.2" y="277" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="699.23" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (75,723,404 samples, 0.06%)</title><rect x="10.1" y="981" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="13.09" y="991.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="789" width="0.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="20.32" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (37,855,047 samples, 0.03%)</title><rect x="807.6" y="309" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="810.64" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (127,208,540 samples, 0.10%)</title><rect x="1047.0" y="277" width="1.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1049.96" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (44,692,014 samples, 0.03%)</title><rect x="1048.2" y="277" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1051.23" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (113,217,364 samples, 0.09%)</title><rect x="717.0" y="245" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="719.96" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,091,799 samples, 0.02%)</title><rect x="1048.6" y="261" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1051.63" y="271.5" ></text>
</g>
<g >
<title>CNF::CNF (178,997,275 samples, 0.14%)</title><rect x="826.1" y="341" width="1.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="829.09" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="341" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1192.27" y="351.5" ></text>
</g>
<g >
<title>operator new (23,216,050 samples, 0.02%)</title><rect x="45.8" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="48.80" y="303.5" ></text>
</g>
<g >
<title>operator new (66,246,888 samples, 0.05%)</title><rect x="94.2" y="341" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.23" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13,184,246 samples, 0.01%)</title><rect x="822.4" y="245" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="825.41" y="255.5" ></text>
</g>
<g >
<title>operator new (57,238,103 samples, 0.04%)</title><rect x="62.7" y="357" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="65.74" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (27,952,103 samples, 0.02%)</title><rect x="1186.0" y="229" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1189.02" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (99,070,798 samples, 0.08%)</title><rect x="461.5" y="325" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="464.49" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (19,019,927 samples, 0.01%)</title><rect x="1183.9" y="165" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.85" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (80,960,930 samples, 0.06%)</title><rect x="152.1" y="213" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="155.10" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="149" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1106.99" y="159.5" ></text>
</g>
<g >
<title>malloc_consolidate (103,511,404 samples, 0.08%)</title><rect x="150.6" y="277" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="153.62" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (46,747,273 samples, 0.04%)</title><rect x="595.7" y="213" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="598.69" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="261" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1188.55" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (28,445,331 samples, 0.02%)</title><rect x="1187.8" y="245" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1190.85" y="255.5" ></text>
</g>
<g >
<title>operator new (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="101" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.59" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (42,179,607 samples, 0.03%)</title><rect x="915.5" y="197" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="918.54" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (543,736,171 samples, 0.41%)</title><rect x="328.1" y="293" width="4.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="331.09" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,148,469 samples, 0.02%)</title><rect x="17.3" y="853" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.32" y="863.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (23,815,470 samples, 0.02%)</title><rect x="89.2" y="453" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="92.20" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (66,076,596 samples, 0.05%)</title><rect x="825.2" y="325" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="828.20" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (18,880,711 samples, 0.01%)</title><rect x="1181.5" y="165" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1184.50" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (18,880,711 samples, 0.01%)</title><rect x="1181.5" y="149" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.50" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (14,315,050 samples, 0.01%)</title><rect x="574.3" y="325" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="577.28" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,149,325,617 samples, 0.88%)</title><rect x="449.8" y="357" width="10.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="452.76" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,063,733 samples, 0.01%)</title><rect x="60.1" y="421" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="63.14" y="431.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="853" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="863.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (117,447,436 samples, 0.09%)</title><rect x="94.8" y="421" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="97.83" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (94,290,067 samples, 0.07%)</title><rect x="441.6" y="341" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="444.55" y="351.5" ></text>
</g>
<g >
<title>operator new (103,189,067 samples, 0.08%)</title><rect x="95.0" y="261" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.95" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (217,181,865 samples, 0.17%)</title><rect x="596.2" y="293" width="1.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="599.19" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (141,398,502 samples, 0.11%)</title><rect x="823.9" y="293" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="826.88" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (136,933,713 samples, 0.10%)</title><rect x="232.5" y="293" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="235.50" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,836,821 samples, 0.02%)</title><rect x="1189.3" y="421" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1192.27" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (274,846,139 samples, 0.21%)</title><rect x="572.1" y="389" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="575.10" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="245" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="66.56" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (37,716,313 samples, 0.03%)</title><rect x="88.7" y="421" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="91.69" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="197" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1187.67" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (117,948,947 samples, 0.09%)</title><rect x="440.4" y="357" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="443.36" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (598,933,283 samples, 0.46%)</title><rect x="817.1" y="293" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="820.14" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,318,169 samples, 0.03%)</title><rect x="1181.0" y="181" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1183.99" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,083,890 samples, 0.01%)</title><rect x="17.8" y="901" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="20.78" y="911.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (192,310,206 samples, 0.15%)</title><rect x="591.1" y="325" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="594.12" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (729,629,216 samples, 0.56%)</title><rect x="584.5" y="277" width="6.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="587.47" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (51,870,421 samples, 0.04%)</title><rect x="1165.4" y="181" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1168.37" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,304,484 samples, 0.01%)</title><rect x="900.8" y="293" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="903.76" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,318,169 samples, 0.03%)</title><rect x="1181.0" y="149" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1183.99" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (124,357,712 samples, 0.09%)</title><rect x="713.2" y="277" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="716.22" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,326,950,896 samples, 1.77%)</title><rect x="574.6" y="373" width="21.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="577.62" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,313,046 samples, 0.02%)</title><rect x="442.4" y="277" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="445.40" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,477,988 samples, 0.03%)</title><rect x="1176.9" y="117" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1179.93" y="127.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (169,714,145 samples, 0.13%)</title><rect x="711.6" y="245" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="714.60" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (19,083,890 samples, 0.01%)</title><rect x="17.8" y="869" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="20.78" y="879.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (664,226,740 samples, 0.51%)</title><rect x="450.4" y="325" width="5.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="453.36" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (18,934,695 samples, 0.01%)</title><rect x="1166.2" y="229" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1169.22" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (38,051,438 samples, 0.03%)</title><rect x="44.4" y="453" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="47.44" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (292,847,330 samples, 0.22%)</title><rect x="143.2" y="405" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="146.22" y="415.5" ></text>
</g>
<g >
<title>CNF::~CNF (28,395,983 samples, 0.02%)</title><rect x="1185.5" y="341" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1188.47" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (51,495,378 samples, 0.04%)</title><rect x="826.1" y="277" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="829.09" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (66,246,888 samples, 0.05%)</title><rect x="94.2" y="421" width="0.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="97.23" y="431.5" ></text>
</g>
<g >
<title>CNF::is_pure (142,836,971 samples, 0.11%)</title><rect x="1181.7" y="197" width="1.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1184.67" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (575,337,581 samples, 0.44%)</title><rect x="1139.5" y="261" width="5.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1142.52" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,199,518,121 samples, 1.68%)</title><rect x="696.6" y="357" width="19.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="699.62" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18,615,398 samples, 0.01%)</title><rect x="571.9" y="373" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="574.93" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (70,694,519 samples, 0.05%)</title><rect x="916.0" y="165" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="919.01" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,732,236 samples, 0.02%)</title><rect x="44.2" y="501" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="47.18" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,815,470 samples, 0.02%)</title><rect x="89.2" y="421" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="92.20" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (32,614,505 samples, 0.02%)</title><rect x="1106.3" y="101" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1109.25" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (150,353,591 samples, 0.11%)</title><rect x="822.5" y="261" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="825.53" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (18,229,709 samples, 0.01%)</title><rect x="1144.8" y="133" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.78" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="261" width="0.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1061.46" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (108,710,188 samples, 0.08%)</title><rect x="913.2" y="261" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="916.21" y="271.5" ></text>
</g>
<g >
<title>operator new (112,924,577 samples, 0.09%)</title><rect x="462.4" y="197" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="465.43" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,280,286 samples, 0.01%)</title><rect x="218.8" y="389" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="221.75" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (141,732,076 samples, 0.11%)</title><rect x="911.9" y="229" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="914.94" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="117" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1180.31" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (160,536,854 samples, 0.12%)</title><rect x="596.2" y="229" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="599.24" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,280,286 samples, 0.01%)</title><rect x="218.8" y="421" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="221.75" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="261" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1191.40" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13,184,246 samples, 0.01%)</title><rect x="822.4" y="261" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="825.41" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,766,585 samples, 0.02%)</title><rect x="89.5" y="421" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="92.54" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,395,983 samples, 0.02%)</title><rect x="1185.5" y="277" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.47" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (19,083,890 samples, 0.01%)</title><rect x="17.8" y="917" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="20.78" y="927.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (23,415,094 samples, 0.02%)</title><rect x="899.5" y="325" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="902.45" y="335.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,961,716,896 samples, 1.50%)</title><rect x="1145.0" y="261" width="17.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1148.03" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (23,713,505 samples, 0.02%)</title><rect x="807.7" y="229" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="810.68" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (112,924,577 samples, 0.09%)</title><rect x="462.4" y="229" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="465.43" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (131,316,717 samples, 0.10%)</title><rect x="991.2" y="245" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="994.15" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,743,607 samples, 0.02%)</title><rect x="93.0" y="325" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="96.00" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,304,484 samples, 0.01%)</title><rect x="900.8" y="213" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.76" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (326,133,926 samples, 0.25%)</title><rect x="146.4" y="373" width="2.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="149.37" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (106,322,714,620 samples, 81.10%)</title><rect x="231.9" y="437" width="957.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.90" y="447.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (28,001,945 samples, 0.02%)</title><rect x="45.8" y="357" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="48.75" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (56,938,486 samples, 0.04%)</title><rect x="1097.9" y="245" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1100.95" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (14,211,923 samples, 0.01%)</title><rect x="1186.7" y="357" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.74" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,562,236 samples, 0.03%)</title><rect x="1165.5" y="165" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1168.45" y="175.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,834,961 samples, 0.02%)</title><rect x="60.1" y="453" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="63.10" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (13,792,216 samples, 0.01%)</title><rect x="463.4" y="165" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="466.44" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (217,172,459 samples, 0.17%)</title><rect x="216.6" y="405" width="2.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="219.63" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (18,983,775 samples, 0.01%)</title><rect x="1185.6" y="245" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1188.55" y="255.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,899,635,461 samples, 98.32%)</title><rect x="29.8" y="565" width="1160.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.81" y="575.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (18,825,810 samples, 0.01%)</title><rect x="322.0" y="325" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="325.01" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="197" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="341.85" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (151,398,027 samples, 0.12%)</title><rect x="36.5" y="517" width="1.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="39.49" y="527.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (103,582,866 samples, 0.08%)</title><rect x="990.2" y="213" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="993.18" y="223.5" ></text>
</g>
<g >
<title>_start (128,928,083,311 samples, 98.34%)</title><rect x="29.6" y="1013" width="1160.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="32.59" y="1023.5" >_start</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,309,347 samples, 0.07%)</title><rect x="60.9" y="405" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="63.87" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (33,240,497 samples, 0.03%)</title><rect x="63.3" y="293" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="66.26" y="303.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (14,202,801 samples, 0.01%)</title><rect x="1048.1" y="309" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1051.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (33,096,961 samples, 0.03%)</title><rect x="1186.9" y="357" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1189.91" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,307,813 samples, 0.05%)</title><rect x="141.4" y="421" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="144.43" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,320,845 samples, 0.01%)</title><rect x="1183.3" y="85" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1186.25" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (70,740,869 samples, 0.05%)</title><rect x="455.5" y="261" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="458.49" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (18,754,238 samples, 0.01%)</title><rect x="1188.9" y="277" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1191.85" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (542,736,394 samples, 0.41%)</title><rect x="901.6" y="277" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="904.61" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,408,774 samples, 0.02%)</title><rect x="913.9" y="165" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="916.94" y="175.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (274,276,252 samples, 0.21%)</title><rect x="336.7" y="357" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="339.72" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (19,083,890 samples, 0.01%)</title><rect x="17.8" y="837" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="20.78" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (118,180,491 samples, 0.09%)</title><rect x="232.7" y="213" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="235.66" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,766,585 samples, 0.02%)</title><rect x="89.5" y="357" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="92.54" y="367.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (2,816,113,618 samples, 2.15%)</title><rect x="63.7" y="469" width="25.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="66.68" y="479.5" >C..</text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="901" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="911.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13,858,127 samples, 0.01%)</title><rect x="439.6" y="357" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="442.64" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (51,240,270 samples, 0.04%)</title><rect x="906.6" y="277" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="909.60" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (985,211,121 samples, 0.75%)</title><rect x="816.3" y="325" width="8.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="819.29" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (208,085,665 samples, 0.16%)</title><rect x="569.6" y="341" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="572.64" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="165" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1061.46" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (762,634,813 samples, 0.58%)</title><rect x="985.5" y="293" width="6.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="988.47" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (129,079,916 samples, 0.10%)</title><rect x="573.0" y="341" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="576.03" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37,982,206 samples, 0.03%)</title><rect x="338.8" y="261" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="341.85" y="271.5" ></text>
</g>
<g >
<title>tcache_put (14,176,044 samples, 0.01%)</title><rect x="914.1" y="133" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="917.06" y="143.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (23,834,961 samples, 0.02%)</title><rect x="60.1" y="469" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="63.10" y="479.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (19,085,459 samples, 0.01%)</title><rect x="979.9" y="325" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="982.94" y="335.5" ></text>
</g>
<g >
<title>unlink_chunk (28,086,221 samples, 0.02%)</title><rect x="462.1" y="213" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="465.13" y="223.5" ></text>
</g>
<g >
<title>malloc_consolidate (52,471,752 samples, 0.04%)</title><rect x="62.8" y="309" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.78" y="319.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="933" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="943.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::find_unit_clauses (14,030,702 samples, 0.01%)</title><rect x="1162.7" y="261" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1165.69" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="213" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1061.46" y="223.5" ></text>
</g>
<g >
<title>operator new (47,237,949 samples, 0.04%)</title><rect x="231.9" y="309" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="234.94" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (146,148,009 samples, 0.11%)</title><rect x="229.3" y="293" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="232.26" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (33,149,839 samples, 0.03%)</title><rect x="45.5" y="453" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="48.45" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (28,398,475 samples, 0.02%)</title><rect x="1187.0" y="341" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1189.95" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (42,179,962 samples, 0.03%)</title><rect x="1104.5" y="181" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1107.54" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,001,945 samples, 0.02%)</title><rect x="45.8" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.75" y="431.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (661,329,834 samples, 0.50%)</title><rect x="38.2" y="501" width="5.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="41.18" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (178,202,436 samples, 0.14%)</title><rect x="591.2" y="245" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="594.21" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (28,001,945 samples, 0.02%)</title><rect x="45.8" y="373" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="48.75" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (84,955,597 samples, 0.06%)</title><rect x="915.9" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="918.92" y="271.5" ></text>
</g>
<g >
<title>operator new (80,510,140 samples, 0.06%)</title><rect x="336.0" y="293" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="339.00" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (409,866,463 samples, 0.31%)</title><rect x="1101.8" y="261" width="3.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1104.83" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (33,175,021 samples, 0.03%)</title><rect x="439.8" y="373" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="442.85" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (23,511,168 samples, 0.02%)</title><rect x="1183.0" y="181" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1186.04" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,517,181 samples, 0.02%)</title><rect x="145.6" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="148.59" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (255,254,559 samples, 0.19%)</title><rect x="336.9" y="309" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="339.89" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (136,933,713 samples, 0.10%)</title><rect x="232.5" y="309" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="235.50" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (585,749,037 samples, 0.45%)</title><rect x="817.1" y="229" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="820.14" y="239.5" ></text>
</g>
<g >
<title>operator new (46,747,273 samples, 0.04%)</title><rect x="595.7" y="261" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="598.69" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (51,639,191 samples, 0.04%)</title><rect x="992.8" y="149" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="995.83" y="159.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (585,749,037 samples, 0.45%)</title><rect x="817.1" y="261" width="5.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="820.14" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,017,747 samples, 0.09%)</title><rect x="333.2" y="325" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="336.16" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,254,888 samples, 0.01%)</title><rect x="809.6" y="341" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="812.55" y="351.5" ></text>
</g>
<g >
<title>CNF::is_pure (198,403,728 samples, 0.15%)</title><rect x="30.9" y="517" width="1.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="33.92" y="527.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (283,364,314 samples, 0.22%)</title><rect x="143.3" y="389" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="146.30" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (137,296,463 samples, 0.10%)</title><rect x="1163.1" y="213" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1166.11" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (56,515,189 samples, 0.04%)</title><rect x="32.9" y="517" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="35.87" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (23,265,670 samples, 0.02%)</title><rect x="992.5" y="293" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="995.54" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (27,721,841 samples, 0.02%)</title><rect x="1144.8" y="165" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1147.78" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (13,976,440 samples, 0.01%)</title><rect x="981.3" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="984.25" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (131,496,841 samples, 0.10%)</title><rect x="462.4" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="465.39" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,492,258 samples, 0.02%)</title><rect x="25.3" y="997" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="28.28" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (51,639,191 samples, 0.04%)</title><rect x="992.8" y="261" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="995.83" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (543,736,171 samples, 0.41%)</title><rect x="328.1" y="309" width="4.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="331.09" y="319.5" ></text>
</g>
<g >
<title>CNF::CNF (278,000,658 samples, 0.21%)</title><rect x="595.6" y="373" width="2.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="598.65" y="383.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="613" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="623.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (14,088,213 samples, 0.01%)</title><rect x="821.8" y="213" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="824.82" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (14,023,736 samples, 0.01%)</title><rect x="142.8" y="389" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="145.79" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (103,189,067 samples, 0.08%)</title><rect x="95.0" y="277" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="97.95" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (18,886,095 samples, 0.01%)</title><rect x="1162.9" y="245" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1165.86" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,315,087 samples, 0.01%)</title><rect x="63.6" y="309" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="66.56" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="373" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1190.25" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (42,490,227 samples, 0.03%)</title><rect x="1181.3" y="197" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1184.29" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="213" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1059.73" y="223.5" ></text>
</g>
<g >
<title>CNF::CNF (260,148,201 samples, 0.20%)</title><rect x="150.6" y="437" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="153.57" y="447.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (146,148,009 samples, 0.11%)</title><rect x="229.3" y="309" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="232.26" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (47,039,296 samples, 0.04%)</title><rect x="716.5" y="325" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="719.49" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (61,145,760 samples, 0.05%)</title><rect x="1104.0" y="181" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1106.99" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (268,740,227 samples, 0.20%)</title><rect x="440.4" y="405" width="2.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="443.36" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (141,604,871 samples, 0.11%)</title><rect x="218.9" y="437" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="221.92" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="133" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1187.67" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,320,845 samples, 0.01%)</title><rect x="1183.3" y="101" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1186.25" y="111.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (126,716,793 samples, 0.10%)</title><rect x="462.4" y="309" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="465.43" y="319.5" ></text>
</g>
<g >
<title>CNF::~CNF (19,083,890 samples, 0.01%)</title><rect x="17.8" y="981" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="20.78" y="991.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,366,150 samples, 0.09%)</title><rect x="333.2" y="277" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="336.16" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (28,657,293 samples, 0.02%)</title><rect x="1165.8" y="181" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1168.84" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (173,921,003 samples, 0.13%)</title><rect x="19.7" y="997" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="22.66" y="1007.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (151,964,238 samples, 0.12%)</title><rect x="151.5" y="389" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="154.55" y="399.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (99,577,849 samples, 0.08%)</title><rect x="29.8" y="549" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="32.81" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,259,780 samples, 0.01%)</title><rect x="825.0" y="213" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="828.03" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,942,402 samples, 0.01%)</title><rect x="33.1" y="437" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="36.12" y="447.5" ></text>
</g>
<g >
<title>operator new (51,495,378 samples, 0.04%)</title><rect x="826.1" y="229" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="829.09" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,281,010 samples, 0.03%)</title><rect x="900.4" y="277" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="903.38" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (155,932,706 samples, 0.12%)</title><rect x="232.4" y="357" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.37" y="367.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (11,179,077,390 samples, 8.53%)</title><rect x="339.2" y="405" width="100.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="342.19" y="415.5" >CNF::find_pu..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23,467,367 samples, 0.02%)</title><rect x="150.2" y="421" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="153.19" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (51,495,378 samples, 0.04%)</title><rect x="826.1" y="309" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="829.09" y="319.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (18,982,752 samples, 0.01%)</title><rect x="1184.0" y="181" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1187.02" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,808,221 samples, 0.01%)</title><rect x="1177.3" y="101" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1180.31" y="111.5" ></text>
</g>
<g >
<title>malloc_consolidate (13,973,435 samples, 0.01%)</title><rect x="1058.5" y="133" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1061.46" y="143.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (90,171,741 samples, 0.07%)</title><rect x="1098.6" y="293" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1101.59" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (50,568,719 samples, 0.04%)</title><rect x="695.4" y="325" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="698.44" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,313,046 samples, 0.02%)</title><rect x="442.4" y="357" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="445.40" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,410,572 samples, 0.02%)</title><rect x="321.8" y="293" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.76" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,395,983 samples, 0.02%)</title><rect x="1185.5" y="293" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.47" y="303.5" ></text>
</g>
<g >
<title>operator new (51,639,191 samples, 0.04%)</title><rect x="992.8" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="995.83" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (640,703,560 samples, 0.49%)</title><rect x="450.4" y="277" width="5.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="453.36" y="287.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (27,721,841 samples, 0.02%)</title><rect x="1144.8" y="181" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1147.78" y="191.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (103,960,929 samples, 0.08%)</title><rect x="142.0" y="437" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="144.98" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,206,441 samples, 0.01%)</title><rect x="694.2" y="213" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="697.16" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,477,988 samples, 0.03%)</title><rect x="1176.9" y="165" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1179.93" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (47,181,837 samples, 0.04%)</title><rect x="809.0" y="293" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="812.00" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (393,562,332 samples, 0.30%)</title><rect x="981.9" y="261" width="3.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="984.93" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="85" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1061.59" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (136,958,428 samples, 0.10%)</title><rect x="716.9" y="293" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="719.92" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (103,189,067 samples, 0.08%)</title><rect x="95.0" y="325" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="97.95" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (985,211,121 samples, 0.75%)</title><rect x="816.3" y="309" width="8.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="819.29" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (45,798,445 samples, 0.03%)</title><rect x="695.4" y="293" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="698.44" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (75,165,308 samples, 0.06%)</title><rect x="808.2" y="341" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="811.24" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (19,083,890 samples, 0.01%)</title><rect x="17.8" y="885" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="20.78" y="895.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,023,736 samples, 0.01%)</title><rect x="142.8" y="357" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="145.79" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (212,809,781 samples, 0.16%)</title><rect x="60.8" y="485" width="1.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="63.83" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (147,178,363 samples, 0.11%)</title><rect x="151.6" y="341" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="154.59" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,519,897 samples, 0.03%)</title><rect x="695.9" y="293" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="698.89" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (122,163,247 samples, 0.09%)</title><rect x="17.0" y="997" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="19.98" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (340,955,971 samples, 0.26%)</title><rect x="1053.5" y="197" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1056.53" y="207.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,923,299,421 samples, 98.34%)</title><rect x="29.6" y="661" width="1160.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.59" y="671.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (37,949,170 samples, 0.03%)</title><rect x="219.0" y="373" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="222.05" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (46,972,223 samples, 0.04%)</title><rect x="59.6" y="437" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="62.63" y="447.5" ></text>
</g>
<g >
<title>CNF::~CNF (33,369,169 samples, 0.03%)</title><rect x="1187.2" y="389" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1190.25" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (47,039,296 samples, 0.04%)</title><rect x="716.5" y="261" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="719.49" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,181,235 samples, 0.03%)</title><rect x="149.3" y="357" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="152.30" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (23,466,202 samples, 0.02%)</title><rect x="1185.0" y="309" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.96" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (260,148,201 samples, 0.20%)</title><rect x="150.6" y="421" width="2.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="153.57" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (47,387,443 samples, 0.04%)</title><rect x="93.3" y="309" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="96.25" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (47,555,584 samples, 0.04%)</title><rect x="63.3" y="437" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="66.26" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (326,133,926 samples, 0.25%)</title><rect x="146.4" y="389" width="2.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="149.37" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (18,954,106 samples, 0.01%)</title><rect x="29.4" y="997" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="32.42" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,562,236 samples, 0.03%)</title><rect x="1165.5" y="117" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1168.45" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_free (42,090,955 samples, 0.03%)</title><rect x="594.2" y="213" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="597.25" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (28,244,686 samples, 0.02%)</title><rect x="1101.9" y="229" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1104.91" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (18,712,495 samples, 0.01%)</title><rect x="711.3" y="261" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="714.31" y="271.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (747,424,770 samples, 0.57%)</title><rect x="224.7" y="405" width="6.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="227.70" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (56,399,581 samples, 0.04%)</title><rect x="980.2" y="309" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="983.15" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,387,443 samples, 0.04%)</title><rect x="93.3" y="373" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="96.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (179,475,423 samples, 0.14%)</title><rect x="318.1" y="389" width="1.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="321.06" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,012,006 samples, 0.01%)</title><rect x="32.7" y="437" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="35.70" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (66,246,888 samples, 0.05%)</title><rect x="94.2" y="373" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="97.23" y="383.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (194,229,303 samples, 0.15%)</title><rect x="1164.3" y="213" width="1.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1167.35" y="223.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (686,906,341 samples, 0.52%)</title><rect x="810.1" y="309" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="813.11" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,772,198 samples, 0.02%)</title><rect x="1143.4" y="117" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.42" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,672,652 samples, 0.02%)</title><rect x="37.9" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="40.94" y="447.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,328,174 samples, 0.01%)</title><rect x="36.4" y="517" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="39.36" y="527.5" ></text>
</g>
<g >
<title>operator new (137,695,748 samples, 0.11%)</title><rect x="151.6" y="245" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="154.63" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (42,294,755 samples, 0.03%)</title><rect x="1048.6" y="293" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1051.63" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,942,402 samples, 0.01%)</title><rect x="33.1" y="421" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="36.12" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (66,104,177 samples, 0.05%)</title><rect x="1104.9" y="181" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1107.92" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28,054,218 samples, 0.02%)</title><rect x="1105.7" y="261" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1108.70" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (193,151,952 samples, 0.15%)</title><rect x="711.5" y="309" width="1.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="714.48" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (714,575,922 samples, 0.55%)</title><rect x="697.6" y="309" width="6.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="700.59" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (80,256,363 samples, 0.06%)</title><rect x="916.0" y="229" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="918.96" y="239.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (542,736,394 samples, 0.41%)</title><rect x="901.6" y="309" width="4.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="904.61" y="319.5" ></text>
</g>
<g >
<title>CNF::~CNF (33,220,407 samples, 0.03%)</title><rect x="1187.8" y="405" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1190.81" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,230,129 samples, 0.01%)</title><rect x="93.8" y="341" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="96.76" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (94,634,863 samples, 0.07%)</title><rect x="1056.7" y="197" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1059.73" y="207.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (321,389,882 samples, 0.25%)</title><rect x="33.5" y="517" width="2.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="36.47" y="527.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (47,387,443 samples, 0.04%)</title><rect x="93.3" y="341" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="96.25" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (61,307,813 samples, 0.05%)</title><rect x="141.4" y="437" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="144.43" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (46,747,273 samples, 0.04%)</title><rect x="595.7" y="245" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="598.69" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (127,501,897 samples, 0.10%)</title><rect x="826.6" y="293" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="829.55" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (79,816,268 samples, 0.06%)</title><rect x="61.6" y="421" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="64.64" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,181,837 samples, 0.04%)</title><rect x="809.0" y="309" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="812.00" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,235,210 samples, 0.05%)</title><rect x="321.1" y="373" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="324.08" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,712,412 samples, 0.02%)</title><rect x="231.2" y="309" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="234.22" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (854,627,610 samples, 0.65%)</title><rect x="906.5" y="293" width="7.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="909.50" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (56,210,904 samples, 0.04%)</title><rect x="1058.6" y="165" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1061.59" y="175.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,182,591 samples, 0.05%)</title><rect x="899.7" y="277" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="902.75" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (129,079,916 samples, 0.10%)</title><rect x="573.0" y="309" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="576.03" y="319.5" ></text>
</g>
<g >
<title>CNF::solve_helper (1,963,806,272 samples, 1.50%)</title><rect x="1166.6" y="261" width="17.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1169.56" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (146,148,009 samples, 0.11%)</title><rect x="229.3" y="277" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="232.26" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,320,845 samples, 0.01%)</title><rect x="1183.3" y="133" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1186.25" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (14,013,298 samples, 0.01%)</title><rect x="716.3" y="325" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="719.29" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (23,475,766 samples, 0.02%)</title><rect x="332.3" y="277" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="335.27" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (23,796,578 samples, 0.02%)</title><rect x="1183.8" y="197" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1186.81" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,942,402 samples, 0.01%)</title><rect x="33.1" y="453" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="36.12" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (33,149,839 samples, 0.03%)</title><rect x="45.5" y="437" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="48.45" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (66,246,888 samples, 0.05%)</title><rect x="94.2" y="405" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="97.23" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (19,083,890 samples, 0.01%)</title><rect x="17.8" y="965" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="20.78" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (28,225,627 samples, 0.02%)</title><rect x="1186.4" y="245" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1189.44" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (836,461,802 samples, 0.64%)</title><rect x="143.0" y="437" width="7.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="146.00" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (19,090,502 samples, 0.01%)</title><rect x="455.3" y="261" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="458.31" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,646,368 samples, 0.01%)</title><rect x="981.1" y="229" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="984.09" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,521,934 samples, 0.10%)</title><rect x="1163.2" y="181" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1166.15" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (37,519,897 samples, 0.03%)</title><rect x="695.9" y="261" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="698.89" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (51,957,583 samples, 0.04%)</title><rect x="142.2" y="341" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="145.19" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,326,175 samples, 0.01%)</title><rect x="1166.1" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1169.09" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (22,940,609 samples, 0.02%)</title><rect x="37.9" y="389" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="40.94" y="399.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (51,957,583 samples, 0.04%)</title><rect x="142.2" y="373" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="145.19" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (677,469,081 samples, 0.52%)</title><rect x="810.2" y="277" width="6.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="813.19" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (40,058,276 samples, 0.03%)</title><rect x="1188.4" y="357" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.40" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,309,347 samples, 0.07%)</title><rect x="60.9" y="437" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="63.87" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (75,723,404 samples, 0.06%)</title><rect x="10.1" y="853" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.09" y="863.5" ></text>
</g>
<g >
<title>CNF::is_pure (2,783,083,243 samples, 2.12%)</title><rect x="64.0" y="453" width="25.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="66.98" y="463.5" >C..</text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (33,318,169 samples, 0.03%)</title><rect x="1181.0" y="197" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1183.99" y="207.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (108,413,386 samples, 0.08%)</title><rect x="61.6" y="437" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="64.64" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (108,763,483 samples, 0.08%)</title><rect x="826.6" y="181" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="829.59" y="191.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (241,357,706 samples, 0.18%)</title><rect x="91.7" y="421" width="2.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="94.72" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (108,183,963 samples, 0.08%)</title><rect x="150.6" y="357" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="153.57" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (640,703,560 samples, 0.49%)</title><rect x="450.4" y="309" width="5.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="453.36" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk (23,503,462 samples, 0.02%)</title><rect x="336.5" y="229" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="339.51" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,165,246 samples, 0.04%)</title><rect x="44.8" y="453" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="47.78" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,052,394 samples, 0.01%)</title><rect x="1184.7" y="229" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1187.67" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (185,242,987 samples, 0.14%)</title><rect x="90.1" y="389" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="93.05" y="399.5" ></text>
</g>
<g >
<title>CNF::solve_helper (128,790,559,413 samples, 98.23%)</title><rect x="30.8" y="549" width="1159.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="33.79" y="559.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (137,695,748 samples, 0.11%)</title><rect x="151.6" y="293" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="154.63" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (28,059,292 samples, 0.02%)</title><rect x="1144.1" y="149" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1147.10" y="159.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (79,788,449 samples, 0.06%)</title><rect x="572.2" y="357" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="575.19" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (701,075,574 samples, 0.53%)</title><rect x="705.0" y="245" width="6.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="708.00" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (113,136,353 samples, 0.09%)</title><rect x="990.1" y="261" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="993.14" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (80,510,140 samples, 0.06%)</title><rect x="336.0" y="277" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="339.00" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (112,924,577 samples, 0.09%)</title><rect x="462.4" y="261" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="465.43" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (27,672,652 samples, 0.02%)</title><rect x="37.9" y="453" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="40.94" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (47,555,584 samples, 0.04%)</title><rect x="63.3" y="421" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="66.26" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,249,286,348 samples, 0.95%)</title><rect x="704.0" y="325" width="11.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="707.03" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (98,857,553 samples, 0.08%)</title><rect x="593.8" y="261" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="596.78" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (719,788,069 samples, 0.55%)</title><rect x="705.0" y="309" width="6.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="708.00" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (23,821,996 samples, 0.02%)</title><rect x="62.4" y="373" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="65.40" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (142,160,916 samples, 0.11%)</title><rect x="91.9" y="357" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="94.93" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (108,625,928 samples, 0.08%)</title><rect x="320.1" y="405" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="323.06" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,255,466 samples, 0.01%)</title><rect x="1106.5" y="133" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1109.54" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (124,357,712 samples, 0.09%)</title><rect x="713.2" y="261" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="716.22" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (70,364,336 samples, 0.05%)</title><rect x="1058.6" y="197" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1061.59" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (47,237,949 samples, 0.04%)</title><rect x="231.9" y="389" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="234.94" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,511,168 samples, 0.02%)</title><rect x="1183.0" y="133" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1186.04" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,781,707 samples, 0.02%)</title><rect x="1099.0" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1102.02" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (108,763,483 samples, 0.08%)</title><rect x="826.6" y="213" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="829.59" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (690,448,041 samples, 0.53%)</title><rect x="10.8" y="981" width="6.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="13.77" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,092,608 samples, 0.01%)</title><rect x="45.2" y="373" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="48.16" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (142,160,916 samples, 0.11%)</title><rect x="91.9" y="373" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="94.93" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,442,358 samples, 0.02%)</title><rect x="1186.4" y="197" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1189.44" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (127,501,897 samples, 0.10%)</title><rect x="826.6" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="829.55" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (417,219,316 samples, 0.32%)</title><rect x="1049.3" y="261" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.27" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (440,444,466 samples, 0.34%)</title><rect x="225.3" y="357" width="3.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="228.26" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (56,591,945 samples, 0.04%)</title><rect x="89.4" y="453" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="92.41" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,086,431 samples, 0.01%)</title><rect x="1183.3" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1186.25" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (145,845,396 samples, 0.11%)</title><rect x="899.7" y="341" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="902.71" y="351.5" ></text>
</g>
</g>
</svg>
