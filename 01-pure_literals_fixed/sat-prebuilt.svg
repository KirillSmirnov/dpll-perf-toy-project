<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1126.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1109" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1109" > </text>
<g id="frames">
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28,565,066 samples, 0.05%)</title><rect x="1004.2" y="325" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1007.19" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (70,731,197 samples, 0.12%)</title><rect x="855.5" y="261" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="858.52" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,672,470,443 samples, 2.93%)</title><rect x="292.7" y="421" width="34.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="295.74" y="431.5" >st..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,529,169 samples, 0.02%)</title><rect x="287.1" y="309" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="290.08" y="319.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (47,621,121 samples, 0.08%)</title><rect x="693.2" y="405" width="1.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="696.22" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (537,683,235 samples, 0.94%)</title><rect x="361.4" y="341" width="11.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="364.37" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,508,545 samples, 0.02%)</title><rect x="1004.8" y="309" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1007.78" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (52,502,012 samples, 0.09%)</title><rect x="569.5" y="261" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="572.48" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="197" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="855.48" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="261" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1185.30" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (299,086,133 samples, 0.52%)</title><rect x="187.6" y="421" width="6.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="190.59" y="431.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (991,029,806 samples, 1.73%)</title><rect x="106.9" y="501" width="20.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="109.93" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,063,182 samples, 0.03%)</title><rect x="620.0" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="623.02" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (42,716,492 samples, 0.07%)</title><rect x="335.1" y="357" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="338.08" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,297,415 samples, 0.03%)</title><rect x="1156.8" y="133" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1159.80" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (76,236,044 samples, 0.13%)</title><rect x="336.0" y="389" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="338.97" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (299,086,133 samples, 0.52%)</title><rect x="187.6" y="405" width="6.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="190.59" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="357" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1185.30" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="229" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1041.41" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (53,721,087,150 samples, 93.98%)</title><rect x="80.2" y="549" width="1109.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.16" y="559.5" >CNF::solve_helper</text>
</g>
<g >
<title>_int_malloc (56,857,507 samples, 0.10%)</title><rect x="139.8" y="341" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="142.83" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,017,623 samples, 0.06%)</title><rect x="924.3" y="229" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="927.33" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (23,796,231 samples, 0.04%)</title><rect x="1126.9" y="245" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1129.93" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,220,771 samples, 0.02%)</title><rect x="1054.1" y="197" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1057.15" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="146.73" y="271.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (9,519,092 samples, 0.02%)</title><rect x="27.2" y="1013" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="30.24" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,458,176 samples, 0.02%)</title><rect x="176.9" y="405" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="179.94" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (14,258,253 samples, 0.02%)</title><rect x="970.5" y="181" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="973.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (19,102,478 samples, 0.03%)</title><rect x="895.6" y="277" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="898.56" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="469" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1190.99" y="479.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,544,088 samples, 0.02%)</title><rect x="79.9" y="421" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="82.86" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,479,254 samples, 0.05%)</title><rect x="1187.2" y="293" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1190.20" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (23,495,572 samples, 0.04%)</title><rect x="938.7" y="229" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="941.70" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,486,645 samples, 0.12%)</title><rect x="100.2" y="453" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="103.17" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,514,374 samples, 0.02%)</title><rect x="1088.1" y="309" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1091.08" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (198,707,478 samples, 0.35%)</title><rect x="39.1" y="1029" width="4.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="42.09" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,397,649 samples, 0.03%)</title><rect x="927.2" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="930.18" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (255,241,501 samples, 0.45%)</title><rect x="181.7" y="405" width="5.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="184.73" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (14,016,806 samples, 0.02%)</title><rect x="1144.9" y="229" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1147.94" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (331,972,651 samples, 0.58%)</title><rect x="1135.0" y="261" width="6.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1138.05" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,511,208 samples, 0.07%)</title><rect x="1173.4" y="229" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1176.37" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (99,531,057 samples, 0.17%)</title><rect x="1033.3" y="293" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1036.32" y="303.5" ></text>
</g>
<g >
<title>tcache_put (14,268,419 samples, 0.02%)</title><rect x="640.0" y="229" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="643.01" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="229" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1152.55" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,507,618 samples, 0.07%)</title><rect x="1089.2" y="213" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1092.16" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (76,183,312 samples, 0.13%)</title><rect x="740.0" y="309" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="742.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (56,939,039 samples, 0.10%)</title><rect x="1110.2" y="261" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1113.20" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (47,539,063 samples, 0.08%)</title><rect x="742.3" y="357" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="745.32" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,324,225 samples, 0.03%)</title><rect x="901.6" y="277" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="904.63" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (8,318,688,732 samples, 14.55%)</title><rect x="1005.1" y="357" width="171.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1008.07" y="367.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,886,191 samples, 0.08%)</title><rect x="1180.7" y="373" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1183.73" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (33,177,660 samples, 0.06%)</title><rect x="758.6" y="309" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="761.61" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="213" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="387.90" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (90,080,179 samples, 0.16%)</title><rect x="966.8" y="309" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="969.77" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (237,612,444 samples, 0.42%)</title><rect x="444.2" y="405" width="4.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="447.15" y="415.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="277" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="636.74" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (14,276,327 samples, 0.02%)</title><rect x="1180.0" y="357" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1183.04" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,568,974 samples, 0.02%)</title><rect x="74.2" y="453" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="77.17" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (132,934,506 samples, 0.23%)</title><rect x="998.1" y="213" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1001.11" y="223.5" ></text>
</g>
<g >
<title>CNF::~CNF (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="357" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1179.80" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,493,819 samples, 0.02%)</title><rect x="1163.8" y="245" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1166.76" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (47,684,654 samples, 0.08%)</title><rect x="271.1" y="357" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="274.10" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="197" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1085.60" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="181" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1110.28" y="191.5" ></text>
</g>
<g >
<title>CNF::solve_helper (42,961,738 samples, 0.08%)</title><rect x="1174.2" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1177.25" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (108,784,327 samples, 0.19%)</title><rect x="141.5" y="277" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="144.49" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (71,469,650 samples, 0.13%)</title><rect x="802.0" y="293" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="805.03" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (75,828,381 samples, 0.13%)</title><rect x="933.5" y="245" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="936.53" y="255.5" ></text>
</g>
<g >
<title>operator new (123,298,789 samples, 0.22%)</title><rect x="627.7" y="293" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="630.65" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (80,808,828 samples, 0.14%)</title><rect x="342.7" y="341" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="345.66" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="133" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1110.67" y="143.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (691,117,031 samples, 1.21%)</title><rect x="1067.4" y="309" width="14.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1070.45" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,390,409 samples, 0.02%)</title><rect x="1173.8" y="117" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1176.76" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="341" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="284.90" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,544,232 samples, 0.02%)</title><rect x="1163.0" y="213" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1165.97" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="197" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1088.14" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (51,938,215 samples, 0.09%)</title><rect x="756.5" y="309" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="759.46" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (228,553,319 samples, 0.40%)</title><rect x="492.7" y="293" width="4.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="495.68" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,117,743 samples, 0.09%)</title><rect x="244.3" y="421" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="247.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (14,037,515 samples, 0.02%)</title><rect x="1012.5" y="277" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1015.51" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,537,131 samples, 0.02%)</title><rect x="572.2" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="575.24" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (119,054,907 samples, 0.21%)</title><rect x="85.2" y="533" width="2.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="88.17" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (33,190,033 samples, 0.06%)</title><rect x="1058.8" y="293" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1061.85" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,542,688 samples, 0.02%)</title><rect x="901.6" y="245" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="904.63" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (18,991,681 samples, 0.03%)</title><rect x="337.6" y="325" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="340.64" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (578,393,145 samples, 1.01%)</title><rect x="1130.8" y="293" width="12.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1133.85" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (84,764,346 samples, 0.15%)</title><rect x="1153.9" y="229" width="1.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1156.87" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (132,662,267 samples, 0.23%)</title><rect x="850.3" y="341" width="2.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="853.33" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (693,520,794 samples, 1.21%)</title><rect x="478.3" y="373" width="14.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="481.27" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (23,878,748 samples, 0.04%)</title><rect x="1157.6" y="181" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1160.59" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,499,335 samples, 0.02%)</title><rect x="976.5" y="213" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="979.46" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,544,175 samples, 0.02%)</title><rect x="753.0" y="245" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="756.02" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (13,959,224 samples, 0.02%)</title><rect x="38.2" y="1029" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="41.21" y="1039.5" ></text>
</g>
<g >
<title>tcache_get (19,080,608 samples, 0.03%)</title><rect x="1085.6" y="149" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1088.63" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (607,011,238 samples, 1.06%)</title><rect x="812.8" y="325" width="12.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="815.82" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="245" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1178.23" y="255.5" ></text>
</g>
<g >
<title>_int_free (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="149" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1179.41" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (23,888,400 samples, 0.04%)</title><rect x="147.1" y="405" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="150.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (33,104,608 samples, 0.06%)</title><rect x="173.1" y="405" width="0.7" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="176.11" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,540,081 samples, 0.02%)</title><rect x="972.4" y="181" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="975.44" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (9,538,919 samples, 0.02%)</title><rect x="945.1" y="309" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="948.06" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,348,926 samples, 0.02%)</title><rect x="99.4" y="453" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="102.39" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,540,081 samples, 0.02%)</title><rect x="972.4" y="197" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="975.44" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="277" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1181.27" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (33,288,663 samples, 0.06%)</title><rect x="897.3" y="325" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="900.33" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,520,068 samples, 0.02%)</title><rect x="268.3" y="325" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="271.26" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (223,371,165 samples, 0.39%)</title><rect x="694.2" y="405" width="4.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="697.20" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (761,702,918 samples, 1.33%)</title><rect x="914.4" y="325" width="15.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="917.37" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="181" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1039.25" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (47,700,153 samples, 0.08%)</title><rect x="242.2" y="389" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="245.18" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (66,536,172 samples, 0.12%)</title><rect x="173.0" y="437" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="176.01" y="447.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (170,678,755 samples, 0.30%)</title><rect x="1153.6" y="261" width="3.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1156.57" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,618,233 samples, 0.11%)</title><rect x="898.6" y="309" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="901.60" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="309" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="146.73" y="319.5" ></text>
</g>
<g >
<title>operator delete (9,557,927 samples, 0.02%)</title><rect x="1181.4" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1184.42" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (264,608,117 samples, 0.46%)</title><rect x="327.3" y="421" width="5.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="330.27" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,423,944 samples, 0.16%)</title><rect x="576.9" y="373" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="579.95" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (9,563,650 samples, 0.02%)</title><rect x="1175.9" y="309" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1178.92" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (75,791,662 samples, 0.13%)</title><rect x="1139.5" y="149" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1142.45" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,296,985 samples, 0.03%)</title><rect x="620.4" y="293" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="623.42" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (23,854,576 samples, 0.04%)</title><rect x="80.3" y="437" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="83.25" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (14,314,841 samples, 0.03%)</title><rect x="148.4" y="421" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="151.44" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="373" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="146.73" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (420,643,566 samples, 0.74%)</title><rect x="428.6" y="373" width="8.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="431.62" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (28,562,243 samples, 0.05%)</title><rect x="345.0" y="389" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="348.01" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="309" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="109.63" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (9,542,030 samples, 0.02%)</title><rect x="1172.4" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1175.39" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="293" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="387.90" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,049,868 samples, 0.03%)</title><rect x="103.4" y="453" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="106.41" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,728,819 samples, 0.22%)</title><rect x="1102.0" y="261" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1104.97" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,625,396 samples, 0.05%)</title><rect x="126.0" y="341" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="129.01" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="805" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="815.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (834,275,866 samples, 1.46%)</title><rect x="581.0" y="357" width="17.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="583.95" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="341" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1179.61" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (14,319,921 samples, 0.03%)</title><rect x="1109.9" y="245" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1112.91" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (33,333,539 samples, 0.06%)</title><rect x="76.7" y="501" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="79.72" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (37,720,897 samples, 0.07%)</title><rect x="894.5" y="309" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="897.49" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="229" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1063.61" y="239.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (33,250,085 samples, 0.06%)</title><rect x="1172.7" y="245" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1175.68" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (961,808,890 samples, 1.68%)</title><rect x="945.3" y="309" width="19.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="948.25" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (792,807,797 samples, 1.39%)</title><rect x="1090.7" y="309" width="16.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1093.72" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (33,418,129 samples, 0.06%)</title><rect x="1003.5" y="325" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1006.50" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="373" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1186.87" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (80,630,289 samples, 0.14%)</title><rect x="931.8" y="277" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="934.77" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,873,760 samples, 0.04%)</title><rect x="451.6" y="389" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="454.61" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (28,198,749 samples, 0.05%)</title><rect x="88.0" y="389" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="91.02" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,275,066 samples, 0.02%)</title><rect x="27.5" y="917" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="30.54" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (28,177,044 samples, 0.05%)</title><rect x="1012.9" y="277" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1015.90" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (38,098,135 samples, 0.07%)</title><rect x="889.3" y="293" width="0.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="892.30" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (47,457,521 samples, 0.08%)</title><rect x="639.3" y="325" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="642.33" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (195,378,765 samples, 0.34%)</title><rect x="390.7" y="389" width="4.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="393.67" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,517,157 samples, 0.02%)</title><rect x="1175.6" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1178.62" y="287.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="213" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="855.48" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,450,939 samples, 0.02%)</title><rect x="895.4" y="261" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="898.36" y="271.5" ></text>
</g>
<g >
<title>operator new (152,021,635 samples, 0.27%)</title><rect x="278.8" y="261" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="281.76" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,808,574 samples, 0.04%)</title><rect x="902.0" y="261" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="905.02" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,229,636 samples, 0.02%)</title><rect x="337.6" y="293" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="340.64" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,103,400 samples, 0.03%)</title><rect x="175.8" y="325" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="178.76" y="335.5" ></text>
</g>
<g >
<title>tcache_get (14,270,820 samples, 0.02%)</title><rect x="335.7" y="277" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="338.67" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (19,100,390 samples, 0.03%)</title><rect x="569.9" y="245" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="572.88" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9,544,199 samples, 0.02%)</title><rect x="698.4" y="325" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="701.42" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (52,087,019 samples, 0.09%)</title><rect x="193.8" y="341" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="196.77" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (71,506,391 samples, 0.13%)</title><rect x="337.5" y="389" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="340.54" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (122,920,220 samples, 0.22%)</title><rect x="44.0" y="1029" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="46.98" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,404,720 samples, 0.02%)</title><rect x="804.6" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="807.59" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (42,797,927 samples, 0.07%)</title><rect x="273.4" y="437" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="276.36" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,484,056 samples, 0.11%)</title><rect x="1166.4" y="165" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1169.41" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (85,669,833 samples, 0.15%)</title><rect x="198.9" y="261" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="201.86" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (715,535,295 samples, 1.25%)</title><rect x="109.2" y="469" width="14.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="112.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,502,241 samples, 0.02%)</title><rect x="328.7" y="373" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="331.73" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (47,684,654 samples, 0.08%)</title><rect x="271.1" y="373" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="274.10" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,299,566 samples, 0.02%)</title><rect x="372.5" y="341" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="375.47" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (33,104,608 samples, 0.06%)</title><rect x="173.1" y="389" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="176.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,510,211 samples, 0.02%)</title><rect x="796.3" y="309" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="799.33" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (28,584,407 samples, 0.05%)</title><rect x="800.9" y="309" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="803.95" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,479,123 samples, 0.22%)</title><rect x="1151.0" y="245" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1154.02" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,450,939 samples, 0.02%)</title><rect x="895.4" y="277" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="898.36" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (33,401,333 samples, 0.06%)</title><rect x="344.3" y="309" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="347.32" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,117,743 samples, 0.09%)</title><rect x="244.3" y="405" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="247.35" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (71,469,650 samples, 0.13%)</title><rect x="802.0" y="309" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="805.03" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,488,560 samples, 0.02%)</title><rect x="124.8" y="373" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.84" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (23,905,286 samples, 0.04%)</title><rect x="1177.7" y="357" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1180.68" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,208,110 samples, 0.06%)</title><rect x="14.0" y="997" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="17.01" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="293" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="203.62" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (75,262,251 samples, 0.13%)</title><rect x="1062.1" y="229" width="1.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1065.07" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (80,630,289 samples, 0.14%)</title><rect x="931.8" y="213" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="934.77" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (14,378,889 samples, 0.03%)</title><rect x="1156.2" y="181" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1159.21" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (9,294,612 samples, 0.02%)</title><rect x="173.4" y="309" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="176.40" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,518,762 samples, 0.02%)</title><rect x="698.2" y="309" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="701.22" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (228,553,319 samples, 0.40%)</title><rect x="492.7" y="277" width="4.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="495.68" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,065,538 samples, 0.03%)</title><rect x="98.9" y="485" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="101.90" y="495.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="933" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="943.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (18,856,252 samples, 0.03%)</title><rect x="1128.9" y="293" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1131.89" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (47,361,390 samples, 0.08%)</title><rect x="845.2" y="261" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="848.25" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,347,291 samples, 0.02%)</title><rect x="743.3" y="325" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="746.30" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="213" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1008.07" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (246,628,295 samples, 0.43%)</title><rect x="1096.9" y="213" width="5.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1099.88" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (19,041,615 samples, 0.03%)</title><rect x="87.6" y="485" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="90.63" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (104,652,474 samples, 0.18%)</title><rect x="196.4" y="421" width="2.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="199.41" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (80,808,828 samples, 0.14%)</title><rect x="342.7" y="389" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="345.66" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (99,654,233 samples, 0.17%)</title><rect x="737.9" y="293" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="740.91" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,518,762 samples, 0.02%)</title><rect x="698.2" y="277" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="701.22" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (56,950,054 samples, 0.10%)</title><rect x="179.0" y="405" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="182.00" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (288,826,987 samples, 0.51%)</title><rect x="639.0" y="389" width="6.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="642.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="1055.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="133" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1009.34" y="143.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="309" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="387.90" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (19,069,240 samples, 0.03%)</title><rect x="444.9" y="357" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="447.94" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (190,280,651 samples, 0.33%)</title><rect x="381.8" y="341" width="4.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="384.85" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (52,477,274 samples, 0.09%)</title><rect x="623.3" y="293" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="626.26" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (56,506,806 samples, 0.10%)</title><rect x="849.2" y="213" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="852.16" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (104,615,688 samples, 0.18%)</title><rect x="696.1" y="325" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="699.06" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="213" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1088.14" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,160,553 samples, 0.02%)</title><rect x="89.2" y="373" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="92.20" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (61,959,269 samples, 0.11%)</title><rect x="797.1" y="277" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="800.11" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (80,542,122 samples, 0.14%)</title><rect x="1139.4" y="229" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1142.35" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (61,959,269 samples, 0.11%)</title><rect x="797.1" y="261" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="800.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (723,361,710 samples, 1.27%)</title><rect x="1016.7" y="293" width="14.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1019.71" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (814,948,162 samples, 1.43%)</title><rect x="717.5" y="325" width="16.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="720.46" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,208,110 samples, 0.06%)</title><rect x="14.0" y="933" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="17.01" y="943.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (147,541,945 samples, 0.26%)</title><rect x="342.6" y="421" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="345.56" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (246,628,295 samples, 0.43%)</title><rect x="1096.9" y="245" width="5.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1099.88" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (47,296,867 samples, 0.08%)</title><rect x="330.6" y="277" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="333.58" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (265,758,243 samples, 0.46%)</title><rect x="1049.1" y="277" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1052.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,224,888 samples, 0.07%)</title><rect x="895.6" y="293" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="898.56" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,518,615 samples, 0.02%)</title><rect x="1037.6" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1040.62" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (290,527,166 samples, 0.51%)</title><rect x="390.7" y="405" width="6.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="393.67" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (190,280,651 samples, 0.33%)</title><rect x="381.8" y="405" width="4.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="384.85" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (28,581,169 samples, 0.05%)</title><rect x="1104.5" y="213" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1107.52" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (37,467,244 samples, 0.07%)</title><rect x="1058.1" y="213" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1061.08" y="223.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="741" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="751.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (14,220,609 samples, 0.02%)</title><rect x="976.7" y="293" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="979.65" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="197" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1112.33" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (814,948,162 samples, 1.43%)</title><rect x="717.5" y="341" width="16.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="720.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23,768,482 samples, 0.04%)</title><rect x="492.1" y="341" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="495.09" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (37,945,453 samples, 0.07%)</title><rect x="563.6" y="293" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="566.62" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (18,991,681 samples, 0.03%)</title><rect x="337.6" y="357" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="340.64" y="367.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (3,136,110,034 samples, 5.49%)</title><rect x="508.3" y="421" width="64.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="511.28" y="431.5" >CNF::fi..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (66,225,197 samples, 0.12%)</title><rect x="838.7" y="245" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="841.69" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (38,091,579 samples, 0.07%)</title><rect x="987.5" y="293" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="990.53" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="197" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1065.07" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free (57,137,396 samples, 0.10%)</title><rect x="753.2" y="245" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="756.22" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (19,103,400 samples, 0.03%)</title><rect x="175.8" y="421" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="178.76" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="261" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1043.06" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,286,729 samples, 0.02%)</title><rect x="193.3" y="341" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="196.27" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (28,624,961 samples, 0.05%)</title><rect x="80.2" y="517" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="83.16" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="373" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1190.99" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,404,720 samples, 0.02%)</title><rect x="804.6" y="293" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="807.59" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,219,091 samples, 0.02%)</title><rect x="627.4" y="405" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="630.37" y="415.5" ></text>
</g>
<g >
<title>CNF::~CNF (14,275,066 samples, 0.02%)</title><rect x="27.5" y="1013" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="30.54" y="1023.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (23,569,146 samples, 0.04%)</title><rect x="1130.3" y="229" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1133.26" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (19,091,588 samples, 0.03%)</title><rect x="155.1" y="437" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="158.09" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="69" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1160.59" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (23,512,399 samples, 0.04%)</title><rect x="892.6" y="309" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="895.62" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,486,645 samples, 0.12%)</title><rect x="100.2" y="437" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="103.17" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="277" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="203.62" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (255,241,501 samples, 0.45%)</title><rect x="181.7" y="421" width="5.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="184.73" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (28,198,749 samples, 0.05%)</title><rect x="88.0" y="405" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="91.02" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="165" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1112.33" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (28,609,525 samples, 0.05%)</title><rect x="967.0" y="245" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="969.96" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (18,990,868 samples, 0.03%)</title><rect x="187.2" y="421" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="190.20" y="431.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (33,107,301 samples, 0.06%)</title><rect x="1130.2" y="293" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1133.17" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (114,324,290 samples, 0.20%)</title><rect x="1170.3" y="261" width="2.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1173.32" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (37,775,263 samples, 0.07%)</title><rect x="104.7" y="357" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="107.68" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,412,258,111 samples, 2.47%)</title><rect x="902.5" y="373" width="29.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="905.51" y="383.5" >CN..</text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (147,541,945 samples, 0.26%)</title><rect x="342.6" y="437" width="3.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="345.56" y="447.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (80,632,837 samples, 0.14%)</title><rect x="694.2" y="389" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="697.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,306,955 samples, 0.03%)</title><rect x="77.1" y="485" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (42,883,372 samples, 0.08%)</title><rect x="1141.0" y="229" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1144.02" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,535,947 samples, 0.02%)</title><rect x="848.6" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="851.58" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (60,957,723 samples, 0.11%)</title><rect x="849.1" y="341" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="852.07" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (47,539,063 samples, 0.08%)</title><rect x="742.3" y="373" width="1.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="745.32" y="383.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (28,532,604 samples, 0.05%)</title><rect x="1163.2" y="277" width="0.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1166.17" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (47,700,153 samples, 0.08%)</title><rect x="242.2" y="373" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="245.18" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (18,922,263 samples, 0.03%)</title><rect x="99.3" y="501" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="102.29" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (9,541,727 samples, 0.02%)</title><rect x="81.0" y="517" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="84.04" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,476,372 samples, 0.02%)</title><rect x="291.2" y="373" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="294.17" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (71,469,650 samples, 0.13%)</title><rect x="802.0" y="261" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="805.03" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (14,296,608 samples, 0.03%)</title><rect x="111.7" y="437" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="114.74" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="146.73" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="213" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1112.33" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (33,143,823 samples, 0.06%)</title><rect x="69.7" y="565" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="72.75" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (298,863,847 samples, 0.52%)</title><rect x="565.9" y="389" width="6.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="568.87" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="245" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1063.61" y="255.5" ></text>
</g>
<g >
<title>_int_free (23,811,714 samples, 0.04%)</title><rect x="204.2" y="309" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="207.24" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (14,276,327 samples, 0.02%)</title><rect x="1180.0" y="373" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1183.04" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (95,148,401 samples, 0.17%)</title><rect x="394.7" y="389" width="2.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="397.70" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (18,711,664 samples, 0.03%)</title><rect x="446.8" y="261" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="449.81" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (33,401,333 samples, 0.06%)</title><rect x="344.3" y="325" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="347.32" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (80,808,828 samples, 0.14%)</title><rect x="342.7" y="405" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="345.66" y="415.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (42,873,223 samples, 0.08%)</title><rect x="973.2" y="357" width="0.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="976.23" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="165" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1145.98" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="261" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1008.07" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (577,548,815 samples, 1.01%)</title><rect x="112.0" y="453" width="12.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="115.03" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (33,360,799 samples, 0.06%)</title><rect x="800.8" y="325" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="803.85" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (981,413,346 samples, 1.72%)</title><rect x="1040.4" y="325" width="20.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1043.35" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,086,435 samples, 0.06%)</title><rect x="77.6" y="501" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="80.60" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (99,785,461 samples, 0.17%)</title><rect x="970.0" y="309" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="972.99" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,559,229 samples, 0.02%)</title><rect x="896.0" y="197" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="898.95" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,453,364 samples, 0.09%)</title><rect x="895.4" y="309" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="898.36" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="245" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1041.41" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,353,558 samples, 0.03%)</title><rect x="860.0" y="309" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="863.04" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (128,219,838 samples, 0.22%)</title><rect x="840.7" y="293" width="2.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="843.74" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="197" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1179.41" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (38,098,135 samples, 0.07%)</title><rect x="889.3" y="309" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="892.30" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (14,314,974 samples, 0.03%)</title><rect x="888.0" y="293" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="891.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (28,606,879 samples, 0.05%)</title><rect x="457.0" y="373" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="460.00" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (14,071,420 samples, 0.02%)</title><rect x="1129.0" y="165" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1131.99" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (14,300,297 samples, 0.03%)</title><rect x="810.8" y="293" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="813.77" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="245" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1039.25" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (95,149,720 samples, 0.17%)</title><rect x="502.1" y="373" width="2.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="505.11" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (23,782,189 samples, 0.04%)</title><rect x="642.8" y="341" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="645.76" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,557,916 samples, 0.02%)</title><rect x="1177.7" y="293" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1180.68" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (52,148,724 samples, 0.09%)</title><rect x="376.1" y="341" width="1.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="379.10" y="351.5" ></text>
</g>
<g >
<title>operator new (56,857,507 samples, 0.10%)</title><rect x="139.8" y="373" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="142.83" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (90,423,944 samples, 0.16%)</title><rect x="576.9" y="357" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="579.95" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="309" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1186.48" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9,134,150 samples, 0.02%)</title><rect x="1168.1" y="181" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1171.07" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,568,666 samples, 0.02%)</title><rect x="1105.7" y="181" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1108.70" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,542,090 samples, 0.02%)</title><rect x="1179.2" y="357" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1182.16" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,240,516 samples, 0.02%)</title><rect x="627.0" y="261" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="629.97" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,299,566 samples, 0.02%)</title><rect x="372.5" y="357" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="375.47" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (61,594,893 samples, 0.11%)</title><rect x="691.8" y="341" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="694.75" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,560,581 samples, 0.02%)</title><rect x="74.0" y="533" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="76.97" y="543.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (71,517,449 samples, 0.13%)</title><rect x="372.7" y="293" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="375.66" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (9,544,199 samples, 0.02%)</title><rect x="698.4" y="309" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="701.42" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,324,225 samples, 0.03%)</title><rect x="901.6" y="309" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="904.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,498,323 samples, 0.02%)</title><rect x="127.2" y="469" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="130.19" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,540,081 samples, 0.02%)</title><rect x="972.4" y="213" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="975.44" y="223.5" ></text>
</g>
<g >
<title>operator new (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.28" y="207.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (811,755,363 samples, 1.42%)</title><rect x="986.6" y="309" width="16.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="989.64" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (18,744,057 samples, 0.03%)</title><rect x="195.1" y="357" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="198.14" y="367.5" ></text>
</g>
<g >
<title>operator new (104,652,474 samples, 0.18%)</title><rect x="196.4" y="357" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="199.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14,312,784 samples, 0.03%)</title><rect x="898.0" y="357" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="901.01" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="357" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1186.48" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (90,335,503 samples, 0.16%)</title><rect x="1010.3" y="293" width="1.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1013.25" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (104,213,972 samples, 0.18%)</title><rect x="574.6" y="373" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="577.60" y="383.5" ></text>
</g>
<g >
<title>[[stack]] (697,134,744 samples, 1.22%)</title><rect x="43.6" y="1045" width="14.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="46.59" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (61,623,767 samples, 0.11%)</title><rect x="1083.7" y="277" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1086.67" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (38,186,602 samples, 0.07%)</title><rect x="291.4" y="389" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="294.37" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,311,955 samples, 0.03%)</title><rect x="1140.7" y="133" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1143.72" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,203,664 samples, 0.07%)</title><rect x="572.1" y="341" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="575.14" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,221,297 samples, 0.05%)</title><rect x="1038.8" y="277" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1041.80" y="287.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="261" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="510.79" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,517,449 samples, 0.13%)</title><rect x="372.7" y="373" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="375.66" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (56,857,507 samples, 0.10%)</title><rect x="139.8" y="405" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="142.83" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,964,213 samples, 0.03%)</title><rect x="810.4" y="293" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="813.37" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (128,408,262 samples, 0.22%)</title><rect x="630.9" y="181" width="2.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="633.89" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (806,191,091 samples, 1.41%)</title><rect x="600.0" y="325" width="16.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="603.04" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,426,836 samples, 0.02%)</title><rect x="996.4" y="213" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="999.45" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19,059,329 samples, 0.03%)</title><rect x="195.9" y="437" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="198.92" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (408,177,896 samples, 0.71%)</title><rect x="260.9" y="357" width="8.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="263.91" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,160,553 samples, 0.02%)</title><rect x="89.2" y="405" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="92.20" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="389" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1190.99" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (33,166,623 samples, 0.06%)</title><rect x="826.2" y="325" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="829.24" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (38,098,135 samples, 0.07%)</title><rect x="889.3" y="261" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="892.30" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (289,636,221 samples, 0.51%)</title><rect x="187.6" y="373" width="6.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="190.59" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="389" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1185.30" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,936,261 samples, 0.03%)</title><rect x="456.6" y="309" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.61" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (441,424,516 samples, 0.77%)</title><rect x="250.8" y="437" width="9.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="253.83" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="309" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="91.61" y="319.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (32,704,188 samples, 0.06%)</title><rect x="1087.6" y="325" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1090.60" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (84,764,346 samples, 0.15%)</title><rect x="1153.9" y="181" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1156.87" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="133" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1170.87" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (147,601,949 samples, 0.26%)</title><rect x="381.8" y="309" width="3.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="384.85" y="319.5" ></text>
</g>
<g >
<title>operator new (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="165" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.21" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (90,507,035 samples, 0.16%)</title><rect x="247.6" y="405" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="250.59" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="117" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1174.99" y="127.5" ></text>
</g>
<g >
<title>[a.out] (9,555,089 samples, 0.02%)</title><rect x="281.9" y="213" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="284.90" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (23,890,996 samples, 0.04%)</title><rect x="239.7" y="405" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="242.74" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (113,548,758 samples, 0.20%)</title><rect x="141.4" y="309" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="144.39" y="319.5" ></text>
</g>
<g >
<title>[a.out] (9,534,332 samples, 0.02%)</title><rect x="805.0" y="213" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="807.98" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (104,752,241 samples, 0.18%)</title><rect x="146.6" y="437" width="2.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="149.57" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="181" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1146.17" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (99,533,262 samples, 0.17%)</title><rect x="332.7" y="405" width="2.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="335.73" y="415.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,603,627,198 samples, 2.81%)</title><rect x="144.1" y="485" width="33.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="147.13" y="495.5" >CN..</text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (18,895,353 samples, 0.03%)</title><rect x="1035.9" y="277" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1038.86" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,601,055,004 samples, 2.80%)</title><rect x="346.1" y="437" width="33.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="349.09" y="447.5" >CN..</text>
</g>
<g >
<title>__GI___libc_malloc (56,815,639 samples, 0.10%)</title><rect x="105.5" y="293" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="108.46" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="341" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="91.61" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (85,118,315 samples, 0.15%)</title><rect x="442.4" y="373" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="445.39" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,534,742 samples, 0.02%)</title><rect x="244.8" y="309" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="247.84" y="319.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (190,280,651 samples, 0.33%)</title><rect x="381.8" y="389" width="4.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="384.85" y="399.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="117" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1160.88" y="127.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="133" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1158.62" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="181" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1174.99" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (123,937,830 samples, 0.22%)</title><rect x="81.2" y="517" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="84.24" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (42,797,927 samples, 0.07%)</title><rect x="273.4" y="421" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="276.36" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (117,997,496 samples, 0.21%)</title><rect x="1159.1" y="261" width="2.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1162.08" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (18,673,766 samples, 0.03%)</title><rect x="103.8" y="405" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="106.80" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (60,957,723 samples, 0.11%)</title><rect x="849.1" y="229" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="852.07" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (23,493,117 samples, 0.04%)</title><rect x="260.4" y="405" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="263.43" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (90,529,934 samples, 0.16%)</title><rect x="440.5" y="309" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="443.53" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (14,298,471 samples, 0.03%)</title><rect x="80.4" y="309" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="83.35" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (28,420,934 samples, 0.05%)</title><rect x="1088.5" y="309" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1091.47" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,936,261 samples, 0.03%)</title><rect x="456.6" y="373" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="459.61" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,544,232 samples, 0.02%)</title><rect x="1163.0" y="261" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1165.97" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,502,241 samples, 0.02%)</title><rect x="328.7" y="389" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="331.73" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (19,089,052 samples, 0.03%)</title><rect x="449.1" y="357" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="452.06" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,609,525 samples, 0.05%)</title><rect x="967.0" y="197" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="969.96" y="207.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (85,280,637 samples, 0.15%)</title><rect x="933.5" y="277" width="1.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="936.53" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (99,139,369 samples, 0.17%)</title><rect x="11.3" y="1013" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.28" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="165" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1110.67" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (42,265,364 samples, 0.07%)</title><rect x="681.5" y="325" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="684.46" y="335.5" ></text>
</g>
<g >
<title>CNF::~CNF (8,975,908 samples, 0.02%)</title><rect x="1188.2" y="485" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.18" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="213" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1158.62" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,961,331 samples, 0.21%)</title><rect x="1102.0" y="181" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1104.97" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (46,900,963 samples, 0.08%)</title><rect x="12.4" y="997" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="15.35" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (537,683,235 samples, 0.94%)</title><rect x="361.4" y="325" width="11.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="364.37" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,801,453 samples, 0.04%)</title><rect x="741.0" y="229" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="743.95" y="239.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (33,265,893 samples, 0.06%)</title><rect x="74.9" y="533" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="77.86" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="293" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1179.41" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (113,495,916 samples, 0.20%)</title><rect x="1088.3" y="325" width="2.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1091.27" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23,796,470 samples, 0.04%)</title><rect x="733.8" y="309" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="736.79" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (61,594,893 samples, 0.11%)</title><rect x="691.8" y="373" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="694.75" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (23,883,812 samples, 0.04%)</title><rect x="864.1" y="309" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="867.14" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (56,857,507 samples, 0.10%)</title><rect x="139.8" y="389" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="142.83" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (61,959,269 samples, 0.11%)</title><rect x="797.1" y="293" width="1.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="800.11" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (61,710,366 samples, 0.11%)</title><rect x="1065.6" y="277" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1068.59" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (109,668,043 samples, 0.19%)</title><rect x="242.1" y="421" width="2.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="245.09" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="277" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.30" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (85,488,903 samples, 0.15%)</title><rect x="204.0" y="421" width="1.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="207.05" y="431.5" ></text>
</g>
<g >
<title>operator new (47,700,153 samples, 0.08%)</title><rect x="242.2" y="325" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="245.18" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,211,310 samples, 0.02%)</title><rect x="1180.3" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1183.34" y="367.5" ></text>
</g>
<g >
<title>operator new (19,103,400 samples, 0.03%)</title><rect x="175.8" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="178.76" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,514,346 samples, 0.02%)</title><rect x="976.8" y="277" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="979.75" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (32,827,533 samples, 0.06%)</title><rect x="48.9" y="1029" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="51.86" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (427,448,002 samples, 0.75%)</title><rect x="251.1" y="389" width="8.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="254.12" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,451,690 samples, 0.02%)</title><rect x="1167.7" y="181" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1170.68" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,570,210 samples, 0.02%)</title><rect x="195.3" y="341" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="198.33" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (345,573,451 samples, 0.60%)</title><rect x="1040.7" y="261" width="7.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1043.74" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (66,427,165 samples, 0.12%)</title><rect x="1001.2" y="261" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1004.15" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (119,033,386 samples, 0.21%)</title><rect x="1054.5" y="261" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1057.54" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (204,071,723 samples, 0.36%)</title><rect x="504.1" y="389" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="507.07" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (113,904,627 samples, 0.20%)</title><rect x="743.7" y="357" width="2.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="746.69" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (28,198,749 samples, 0.05%)</title><rect x="88.0" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="91.02" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (42,716,492 samples, 0.07%)</title><rect x="335.1" y="341" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="338.08" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,560,234 samples, 0.02%)</title><rect x="339.5" y="341" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="342.50" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (213,245,685 samples, 0.37%)</title><rect x="512.4" y="373" width="4.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="515.40" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (9,534,506 samples, 0.02%)</title><rect x="84.3" y="485" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="87.29" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="165" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1085.60" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,421,894 samples, 0.02%)</title><rect x="175.2" y="405" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="178.17" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (118,765,906 samples, 0.21%)</title><rect x="576.8" y="405" width="2.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="579.75" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (479,843,200 samples, 0.84%)</title><rect x="1096.0" y="293" width="9.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1098.99" y="303.5" ></text>
</g>
<g >
<title>operator delete (9,409,877 samples, 0.02%)</title><rect x="929.9" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="932.90" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (94,848,154 samples, 0.17%)</title><rect x="198.7" y="293" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="201.67" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,165,956 samples, 0.11%)</title><rect x="900.4" y="261" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.37" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (56,857,507 samples, 0.10%)</title><rect x="139.8" y="453" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="142.83" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (85,404,119 samples, 0.15%)</title><rect x="329.9" y="357" width="1.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="332.89" y="367.5" ></text>
</g>
<g >
<title>operator new (146,924,473 samples, 0.26%)</title><rect x="275.4" y="341" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="278.43" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (19,119,366 samples, 0.03%)</title><rect x="239.3" y="373" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="242.34" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (104,578,772 samples, 0.18%)</title><rect x="71.2" y="549" width="2.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="74.22" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (9,458,364 samples, 0.02%)</title><rect x="70.8" y="517" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="73.83" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (28,265,312 samples, 0.05%)</title><rect x="845.6" y="245" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="848.64" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (90,541,977 samples, 0.16%)</title><rect x="78.3" y="517" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="81.29" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (66,744,224 samples, 0.12%)</title><rect x="1104.5" y="245" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1107.52" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (42,886,191 samples, 0.08%)</title><rect x="1180.7" y="357" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1183.73" y="367.5" ></text>
</g>
<g >
<title>operator new (38,168,312 samples, 0.07%)</title><rect x="893.7" y="229" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="896.70" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (166,334,966 samples, 0.29%)</title><rect x="278.5" y="325" width="3.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="281.46" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (75,262,251 samples, 0.13%)</title><rect x="1062.1" y="277" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1065.07" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,570,580 samples, 0.02%)</title><rect x="1087.1" y="229" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1090.11" y="239.5" ></text>
</g>
<g >
<title>operator new (14,334,017 samples, 0.03%)</title><rect x="239.4" y="325" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="242.44" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,488,560 samples, 0.02%)</title><rect x="124.8" y="421" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="127.84" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (81,005,364 samples, 0.14%)</title><rect x="752.8" y="261" width="1.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="755.82" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (33,345,734 samples, 0.06%)</title><rect x="67.5" y="1029" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="70.48" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,729,019 samples, 0.04%)</title><rect x="1002.9" y="197" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1005.91" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (32,927,819 samples, 0.06%)</title><rect x="500.4" y="405" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="503.44" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,980,735 samples, 0.03%)</title><rect x="43.6" y="1029" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="46.59" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (132,662,267 samples, 0.23%)</title><rect x="850.3" y="325" width="2.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="853.33" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,728,819 samples, 0.22%)</title><rect x="1102.0" y="245" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1104.97" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (237,505,551 samples, 0.42%)</title><rect x="752.6" y="341" width="4.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="755.63" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (54,323,729,579 samples, 95.04%)</title><rect x="68.6" y="1029" width="1121.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="71.56" y="1039.5" >__libc_start_main_impl</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (42,228,178 samples, 0.07%)</title><rect x="1058.0" y="229" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1060.98" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,196,717 samples, 0.02%)</title><rect x="1090.0" y="277" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1093.03" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="149" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1129.74" y="159.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (460,401,031 samples, 0.81%)</title><rect x="988.3" y="261" width="9.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="991.31" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (161,800,195 samples, 0.28%)</title><rect x="146.6" y="469" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="149.57" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (13,976,874 samples, 0.02%)</title><rect x="449.5" y="341" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="452.45" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="421" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1191.66" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,570,580 samples, 0.02%)</title><rect x="1087.1" y="213" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1090.11" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (156,650,685 samples, 0.27%)</title><rect x="329.5" y="405" width="3.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="332.50" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (109,112,081 samples, 0.19%)</title><rect x="32.5" y="1029" width="2.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="35.53" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (9,538,386 samples, 0.02%)</title><rect x="87.3" y="453" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="90.34" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (18,872,770 samples, 0.03%)</title><rect x="1177.2" y="357" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1180.19" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,558,387 samples, 0.02%)</title><rect x="973.5" y="197" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="976.52" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,520,998 samples, 0.02%)</title><rect x="501.5" y="293" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="504.52" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (246,628,295 samples, 0.43%)</title><rect x="1096.9" y="229" width="5.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1099.88" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15,553,379 samples, 0.03%)</title><rect x="342.2" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="345.24" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (23,838,409 samples, 0.04%)</title><rect x="207.0" y="405" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="209.99" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (60,957,723 samples, 0.11%)</title><rect x="849.1" y="277" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="852.07" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (341,995,177 samples, 0.60%)</title><rect x="627.6" y="389" width="7.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="630.56" y="399.5" ></text>
</g>
<g >
<title>operator new (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="197" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1041.41" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (23,627,342 samples, 0.04%)</title><rect x="563.7" y="245" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="566.72" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (61,311,539 samples, 0.11%)</title><rect x="1062.2" y="117" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1065.17" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="229" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1151.47" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,888,400 samples, 0.04%)</title><rect x="147.1" y="341" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="150.06" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,354,118 samples, 0.06%)</title><rect x="740.9" y="245" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="743.85" y="255.5" ></text>
</g>
<g >
<title>operator new (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1145.98" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="133" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1160.88" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (23,825,860 samples, 0.04%)</title><rect x="84.2" y="501" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="87.19" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,570,580 samples, 0.02%)</title><rect x="1087.1" y="181" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1090.11" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (9,519,092 samples, 0.02%)</title><rect x="27.2" y="997" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="30.24" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,519,092 samples, 0.02%)</title><rect x="27.2" y="981" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="30.24" y="991.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (184,784,727 samples, 0.32%)</title><rect x="1131.2" y="277" width="3.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1134.24" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="293" width="1.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1063.61" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (9,529,373 samples, 0.02%)</title><rect x="1173.9" y="165" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1176.95" y="175.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,444,362,802 samples, 2.53%)</title><rect x="1008.0" y="341" width="29.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1011.00" y="351.5" >CN..</text>
</g>
<g >
<title>__GI___libc_free (19,042,487 samples, 0.03%)</title><rect x="902.1" y="213" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="905.12" y="223.5" ></text>
</g>
<g >
<title>operator new (38,098,135 samples, 0.07%)</title><rect x="889.3" y="229" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="892.30" y="239.5" ></text>
</g>
<g >
<title>CNF::CNF (80,750,479 samples, 0.14%)</title><rect x="25.6" y="1013" width="1.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="28.58" y="1023.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (42,511,208 samples, 0.07%)</title><rect x="1173.4" y="245" width="0.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1176.37" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (123,449,283 samples, 0.22%)</title><rect x="840.7" y="229" width="2.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="843.74" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (23,332,807 samples, 0.04%)</title><rect x="1125.8" y="245" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1128.77" y="255.5" ></text>
</g>
<g >
<title>unlink_chunk (19,066,500 samples, 0.03%)</title><rect x="933.0" y="181" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="936.04" y="191.5" ></text>
</g>
<g >
<title>_int_free (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="165" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1040.13" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,228,331,792 samples, 2.15%)</title><rect x="716.2" y="373" width="25.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="719.18" y="383.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (14,211,310 samples, 0.02%)</title><rect x="1180.3" y="373" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1183.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,587,192 samples, 0.04%)</title><rect x="1087.0" y="277" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1090.01" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="165" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1110.28" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (588,108,935 samples, 1.03%)</title><rect x="347.3" y="421" width="12.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="350.27" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (52,433,224 samples, 0.09%)</title><rect x="1033.7" y="181" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1036.70" y="191.5" ></text>
</g>
<g >
<title>operator new (9,458,364 samples, 0.02%)</title><rect x="70.8" y="453" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.83" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (19,041,615 samples, 0.03%)</title><rect x="87.6" y="373" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="90.63" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="293" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1181.27" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,366,037 samples, 0.09%)</title><rect x="972.1" y="293" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.15" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (607,011,238 samples, 1.06%)</title><rect x="812.8" y="357" width="12.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="815.82" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (47,784,710 samples, 0.08%)</title><rect x="685.1" y="341" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="688.07" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,553,284 samples, 0.02%)</title><rect x="1150.6" y="245" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1153.64" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,804,921 samples, 0.04%)</title><rect x="573.7" y="373" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="576.71" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,251,696,442 samples, 2.19%)</title><rect x="860.6" y="357" width="25.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="863.64" y="367.5" >s..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,499,335 samples, 0.02%)</title><rect x="976.5" y="293" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="979.46" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,275,066 samples, 0.02%)</title><rect x="27.5" y="981" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="30.54" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (247,402,150 samples, 0.43%)</title><rect x="743.7" y="373" width="5.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="746.69" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (47,681,728 samples, 0.08%)</title><rect x="25.6" y="869" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="28.58" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14,330,709 samples, 0.03%)</title><rect x="693.9" y="389" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="696.91" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (28,546,090 samples, 0.05%)</title><rect x="973.4" y="341" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="976.42" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (71,517,449 samples, 0.13%)</title><rect x="372.7" y="309" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="375.66" y="319.5" ></text>
</g>
<g >
<title>CNF::solve_helper (16,008,922,465 samples, 28.01%)</title><rect x="848.9" y="389" width="330.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="851.87" y="399.5" >CNF::solve_helper</text>
</g>
<g >
<title>_int_free (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="133" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1147.06" y="143.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (791,151,692 samples, 1.38%)</title><rect x="717.5" y="309" width="16.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="720.46" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,524,573 samples, 0.02%)</title><rect x="1089.8" y="197" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1092.84" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (497,409,079 samples, 0.87%)</title><rect x="327.3" y="437" width="10.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="330.27" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (28,540,178 samples, 0.05%)</title><rect x="796.5" y="325" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="799.52" y="335.5" ></text>
</g>
<g >
<title>_int_free (9,544,607 samples, 0.02%)</title><rect x="846.0" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="849.03" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (80,750,479 samples, 0.14%)</title><rect x="25.6" y="965" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="28.58" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (75,262,251 samples, 0.13%)</title><rect x="1062.1" y="293" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1065.07" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (37,746,033 samples, 0.07%)</title><rect x="88.0" y="421" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="91.02" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (14,252,223 samples, 0.02%)</title><rect x="345.0" y="357" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="348.01" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (19,026,010 samples, 0.03%)</title><rect x="1096.5" y="261" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1099.48" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (9,536,851 samples, 0.02%)</title><rect x="76.0" y="501" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="79.03" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="261" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="636.74" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (37,945,453 samples, 0.07%)</title><rect x="563.6" y="261" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="566.62" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (14,211,310 samples, 0.02%)</title><rect x="1180.3" y="389" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1183.34" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (99,956,407 samples, 0.17%)</title><rect x="279.5" y="229" width="2.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="282.54" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (114,324,290 samples, 0.20%)</title><rect x="1170.3" y="245" width="2.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1173.32" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (47,071,020 samples, 0.08%)</title><rect x="975.5" y="261" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="978.49" y="271.5" ></text>
</g>
<g >
<title>CNF::~CNF (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="373" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1181.27" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,234,932 samples, 0.05%)</title><rect x="1039.4" y="245" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1042.38" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="149" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1131.21" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,637,838 samples, 0.05%)</title><rect x="689.3" y="245" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="692.30" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (85,595,366 samples, 0.15%)</title><rect x="798.4" y="325" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="801.39" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (42,856,742 samples, 0.07%)</title><rect x="1185.2" y="437" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1188.24" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (155,813,939 samples, 0.27%)</title><rect x="286.8" y="405" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="289.79" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,548,033 samples, 0.02%)</title><rect x="969.3" y="277" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="972.31" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (28,467,198 samples, 0.05%)</title><rect x="11.8" y="981" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.77" y="991.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,283,692 samples, 0.02%)</title><rect x="180.2" y="389" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="183.17" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (355,023,556 samples, 0.62%)</title><rect x="1040.5" y="309" width="7.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1043.55" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,546,832 samples, 0.02%)</title><rect x="1130.0" y="245" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1132.97" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (37,897,845 samples, 0.07%)</title><rect x="1148.3" y="261" width="0.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1151.28" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (37,945,453 samples, 0.07%)</title><rect x="563.6" y="341" width="0.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="566.62" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="293" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1182.55" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="277" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1063.61" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,104,883 samples, 0.16%)</title><rect x="452.8" y="389" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="455.79" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="117" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1170.87" y="127.5" ></text>
</g>
<g >
<title>_int_malloc (85,263,828 samples, 0.15%)</title><rect x="850.5" y="149" width="1.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="853.52" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (23,888,400 samples, 0.04%)</title><rect x="147.1" y="373" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="150.06" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (156,813,973 samples, 0.27%)</title><rect x="504.5" y="213" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="507.47" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (42,661,474 samples, 0.07%)</title><rect x="599.2" y="357" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="602.16" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (142,322,417 samples, 0.25%)</title><rect x="454.7" y="405" width="2.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="457.65" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="325" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1186.87" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (223,257,669 samples, 0.39%)</title><rect x="806.7" y="389" width="4.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="809.75" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,540,081 samples, 0.02%)</title><rect x="972.4" y="245" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="975.44" y="255.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (80,439,954 samples, 0.14%)</title><rect x="1006.3" y="261" width="1.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1009.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (14,321,360 samples, 0.03%)</title><rect x="451.6" y="373" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="454.61" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (128,917,638 samples, 0.23%)</title><rect x="339.9" y="389" width="2.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="342.90" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (33,208,110 samples, 0.06%)</title><rect x="14.0" y="981" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="17.01" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (14,013,244 samples, 0.02%)</title><rect x="334.0" y="373" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="337.01" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (9,546,217 samples, 0.02%)</title><rect x="1157.1" y="245" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1160.10" y="255.5" ></text>
</g>
<g >
<title>_int_free (9,551,333 samples, 0.02%)</title><rect x="338.3" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="341.33" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (99,599,062 samples, 0.17%)</title><rect x="198.6" y="341" width="2.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="201.57" y="351.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (2,838,836,988 samples, 4.97%)</title><rect x="634.6" y="405" width="58.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="637.62" y="415.5" >CNF::f..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (28,649,487 samples, 0.05%)</title><rect x="914.9" y="309" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="917.95" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (28,517,466 samples, 0.05%)</title><rect x="840.1" y="277" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="843.06" y="287.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (80,880,268 samples, 0.14%)</title><rect x="896.6" y="373" width="1.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="899.64" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,518,307 samples, 0.02%)</title><rect x="805.4" y="245" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="808.37" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (23,851,486 samples, 0.04%)</title><rect x="452.1" y="421" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="455.10" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (425,872,817 samples, 0.75%)</title><rect x="886.5" y="357" width="8.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="889.48" y="367.5" ></text>
</g>
<g >
<title>_int_free (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="149" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1112.33" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (9,425,059 samples, 0.02%)</title><rect x="1158.3" y="213" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1161.29" y="223.5" ></text>
</g>
<g >
<title>CNF::~CNF (37,986,708 samples, 0.07%)</title><rect x="1187.0" y="469" width="0.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1190.01" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,297,415 samples, 0.03%)</title><rect x="1156.8" y="149" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1159.80" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (123,298,789 samples, 0.22%)</title><rect x="627.7" y="309" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="630.65" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (237,342,371 samples, 0.42%)</title><rect x="99.8" y="501" width="4.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="102.78" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (176,013,311 samples, 0.31%)</title><rect x="752.8" y="325" width="3.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="755.82" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (408,177,896 samples, 0.71%)</title><rect x="260.9" y="405" width="8.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="263.91" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="261" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1039.25" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,550,375 samples, 0.02%)</title><rect x="895.8" y="213" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="898.76" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (19,067,786 samples, 0.03%)</title><rect x="1188.6" y="437" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.56" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,283,692 samples, 0.02%)</title><rect x="180.2" y="405" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="183.17" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (71,469,650 samples, 0.13%)</title><rect x="802.0" y="325" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="805.03" y="335.5" ></text>
</g>
<g >
<title>__libc_start_call_main (54,323,729,579 samples, 95.04%)</title><rect x="68.6" y="1013" width="1121.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="71.56" y="1023.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="293" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1185.30" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (19,089,052 samples, 0.03%)</title><rect x="449.1" y="325" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="452.06" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="229" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1182.55" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (744,005,959 samples, 1.30%)</title><rect x="181.0" y="469" width="15.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="184.05" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (9,542,030 samples, 0.02%)</title><rect x="1172.4" y="181" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1175.39" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,537,131 samples, 0.02%)</title><rect x="572.2" y="293" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="575.24" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="949" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="959.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_malloc (152,021,635 samples, 0.27%)</title><rect x="278.8" y="245" width="3.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="281.76" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="293" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="510.79" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (99,576,677 samples, 0.17%)</title><rect x="850.4" y="213" width="2.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="853.42" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (98,971,344 samples, 0.17%)</title><rect x="891.3" y="325" width="2.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="894.26" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,267,378,719 samples, 2.22%)</title><rect x="598.2" y="389" width="26.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="601.18" y="399.5" >s..</text>
</g>
<g >
<title>_int_free (9,540,081 samples, 0.02%)</title><rect x="972.4" y="165" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="975.44" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (75,952,432 samples, 0.13%)</title><rect x="498.9" y="325" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="501.88" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (28,625,396 samples, 0.05%)</title><rect x="126.0" y="389" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="129.01" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (47,756,117 samples, 0.08%)</title><rect x="562.5" y="357" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="565.54" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,555,094 samples, 0.02%)</title><rect x="562.3" y="357" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="565.34" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (9,541,107 samples, 0.02%)</title><rect x="1036.3" y="165" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1039.34" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (127,936,698 samples, 0.22%)</title><rect x="822.7" y="293" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="825.71" y="303.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (18,992,483 samples, 0.03%)</title><rect x="282.1" y="213" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="285.09" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (23,620,824 samples, 0.04%)</title><rect x="339.2" y="421" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="342.21" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1145.98" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (132,612,842 samples, 0.23%)</title><rect x="437.5" y="389" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="440.50" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,500,093 samples, 0.02%)</title><rect x="103.2" y="373" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="106.21" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (28,396,766 samples, 0.05%)</title><rect x="1144.0" y="261" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1146.96" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (47,458,446 samples, 0.08%)</title><rect x="76.4" y="533" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="79.43" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,206,445,458 samples, 2.11%)</title><rect x="212.3" y="421" width="24.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="215.28" y="431.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (189,445,481 samples, 0.33%)</title><rect x="1135.4" y="245" width="4.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1138.44" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (104,213,972 samples, 0.18%)</title><rect x="574.6" y="389" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="577.60" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (355,023,556 samples, 0.62%)</title><rect x="1040.5" y="293" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1043.55" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,535,947 samples, 0.02%)</title><rect x="848.6" y="229" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="851.58" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="357" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1181.27" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (23,528,096 samples, 0.04%)</title><rect x="244.3" y="357" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="247.35" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="837" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="29.56" y="847.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (260,974,682 samples, 0.46%)</title><rect x="1049.1" y="213" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1052.05" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (19,009,136 samples, 0.03%)</title><rect x="931.1" y="341" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="934.08" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,539,864 samples, 0.02%)</title><rect x="1184.9" y="421" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1187.95" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="181" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1131.21" y="191.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="325" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="284.90" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (56,804,747 samples, 0.10%)</title><rect x="446.3" y="325" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="449.32" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1041.41" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (33,104,608 samples, 0.06%)</title><rect x="173.1" y="421" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="176.11" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (80,632,837 samples, 0.14%)</title><rect x="694.2" y="373" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="697.20" y="383.5" ></text>
</g>
<g >
<title>operator new (9,379,273 samples, 0.02%)</title><rect x="63.7" y="1029" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="66.66" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (66,279,275 samples, 0.12%)</title><rect x="927.6" y="277" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="930.56" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="341" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1190.99" y="351.5" ></text>
</g>
<g >
<title>operator new (9,543,343 samples, 0.02%)</title><rect x="451.7" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="454.71" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (39,048,427,899 samples, 68.31%)</title><rect x="379.1" y="453" width="806.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="382.14" y="463.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,275,401 samples, 0.02%)</title><rect x="139.4" y="453" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="142.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,275,066 samples, 0.02%)</title><rect x="27.5" y="853" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="30.54" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (189,399,599 samples, 0.33%)</title><rect x="440.2" y="389" width="4.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="443.24" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (157,026,719 samples, 0.27%)</title><rect x="630.5" y="197" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="633.49" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (33,401,333 samples, 0.06%)</title><rect x="344.3" y="357" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="347.32" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,198,749 samples, 0.05%)</title><rect x="88.0" y="309" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="91.02" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,542,463 samples, 0.02%)</title><rect x="180.7" y="389" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="183.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,141,446,862 samples, 2.00%)</title><rect x="941.5" y="325" width="23.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="944.55" y="335.5" >s..</text>
</g>
<g >
<title>operator new (14,272,240 samples, 0.02%)</title><rect x="98.0" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="101.02" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (342,114,118 samples, 0.60%)</title><rect x="50.9" y="1029" width="7.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="53.91" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (32,946,087 samples, 0.06%)</title><rect x="1039.4" y="293" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1042.38" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (299,861,051 samples, 0.52%)</title><rect x="321.1" y="389" width="6.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="324.08" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (70,731,197 samples, 0.12%)</title><rect x="855.5" y="293" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="858.52" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (123,505,964 samples, 0.22%)</title><rect x="1172.7" y="261" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1175.68" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (85,222,711 samples, 0.15%)</title><rect x="454.8" y="325" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="457.85" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (14,322,009 samples, 0.03%)</title><rect x="692.2" y="245" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="695.24" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (62,129,626 samples, 0.11%)</title><rect x="1164.5" y="229" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1167.54" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (19,119,366 samples, 0.03%)</title><rect x="239.3" y="357" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="242.34" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (100,082,171 samples, 0.18%)</title><rect x="81.7" y="485" width="2.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="84.73" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (32,309,302 samples, 0.06%)</title><rect x="289.3" y="373" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="292.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (90,001,343 samples, 0.16%)</title><rect x="1125.6" y="277" width="1.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1128.57" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="197" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1008.07" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (9,569,531 samples, 0.02%)</title><rect x="809.0" y="341" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="812.00" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (180,803,846 samples, 0.32%)</title><rect x="1144.5" y="277" width="3.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1147.55" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,484,056 samples, 0.11%)</title><rect x="1166.4" y="149" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1169.41" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (66,696,600 samples, 0.12%)</title><rect x="802.1" y="229" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="805.13" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (28,614,619 samples, 0.05%)</title><rect x="741.7" y="357" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="744.73" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,569,146 samples, 0.04%)</title><rect x="1130.3" y="213" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1133.26" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="245" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1131.21" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,390,409 samples, 0.02%)</title><rect x="1173.8" y="181" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1176.76" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (227,349,718 samples, 0.40%)</title><rect x="886.5" y="341" width="4.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="889.48" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (33,405,710 samples, 0.06%)</title><rect x="1157.4" y="261" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1160.39" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (23,508,856 samples, 0.04%)</title><rect x="1183.4" y="421" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1186.39" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (227,171,416 samples, 0.40%)</title><rect x="1091.3" y="245" width="4.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1094.31" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (57,260,548 samples, 0.10%)</title><rect x="624.3" y="389" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="627.34" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (28,198,749 samples, 0.05%)</title><rect x="88.0" y="373" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="91.02" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (118,961,331 samples, 0.21%)</title><rect x="1102.0" y="197" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1104.97" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (52,238,406 samples, 0.09%)</title><rect x="11.3" y="997" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="14.28" y="1007.5" ></text>
</g>
<g >
<title>operator new (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.74" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,208,110 samples, 0.06%)</title><rect x="14.0" y="885" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="17.01" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (47,373,239 samples, 0.08%)</title><rect x="1126.4" y="261" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1129.45" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="181" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1151.47" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (142,983,957 samples, 0.25%)</title><rect x="391.1" y="373" width="2.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="394.06" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,232,362 samples, 0.02%)</title><rect x="84.8" y="485" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="87.78" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (28,265,312 samples, 0.05%)</title><rect x="845.6" y="229" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="848.64" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (66,753,903 samples, 0.12%)</title><rect x="746.7" y="165" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="749.73" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="277" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="510.79" y="287.5" ></text>
</g>
<g >
<title>_int_free (9,534,918 samples, 0.02%)</title><rect x="1179.6" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1182.65" y="207.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (9,549,718 samples, 0.02%)</title><rect x="748.5" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="751.51" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (14,272,240 samples, 0.02%)</title><rect x="98.0" y="437" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="101.02" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (57,060,311 samples, 0.10%)</title><rect x="809.2" y="277" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="812.20" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (23,775,764 samples, 0.04%)</title><rect x="334.3" y="389" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="337.30" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="373" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1191.66" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (583,360,560 samples, 1.02%)</title><rect x="347.4" y="389" width="12.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="350.37" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (71,138,890 samples, 0.12%)</title><rect x="105.5" y="469" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="108.46" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,780,617 samples, 0.04%)</title><rect x="1179.4" y="357" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1182.35" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (19,091,717 samples, 0.03%)</title><rect x="38.5" y="1029" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="41.50" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (76,020,154 samples, 0.13%)</title><rect x="101.8" y="405" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="104.84" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (23,883,812 samples, 0.04%)</title><rect x="864.1" y="325" width="0.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="867.14" y="335.5" ></text>
</g>
<g >
<title>unlink_chunk (13,822,890 samples, 0.02%)</title><rect x="1005.9" y="165" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1008.86" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (95,149,720 samples, 0.17%)</title><rect x="502.1" y="325" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="505.11" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="85" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1160.88" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (42,708,719 samples, 0.07%)</title><rect x="138.1" y="421" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="141.06" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (9,458,364 samples, 0.02%)</title><rect x="70.8" y="421" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="73.83" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (880,039,570 samples, 1.54%)</title><rect x="1013.5" y="325" width="18.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1016.48" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="277" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1036.61" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (33,423,888 samples, 0.06%)</title><rect x="1168.8" y="213" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1171.85" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (118,472,561 samples, 0.21%)</title><rect x="620.7" y="309" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="623.71" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (80,750,479 samples, 0.14%)</title><rect x="25.6" y="917" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="28.58" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (142,554,477 samples, 0.25%)</title><rect x="560.6" y="373" width="2.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="563.58" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="181" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="636.74" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (161,559,215 samples, 0.28%)</title><rect x="504.4" y="245" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="507.37" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (33,177,660 samples, 0.06%)</title><rect x="758.6" y="325" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="761.61" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (52,366,037 samples, 0.09%)</title><rect x="972.1" y="325" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="975.15" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,626,525,683 samples, 2.85%)</title><rect x="403.7" y="389" width="33.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="406.73" y="399.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (198,523,099 samples, 0.35%)</title><rect x="891.2" y="341" width="4.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="894.17" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="181" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="855.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (90,529,934 samples, 0.16%)</title><rect x="440.5" y="341" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="443.53" y="351.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (328,155,272 samples, 0.57%)</title><rect x="1143.7" y="293" width="6.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1146.67" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (85,404,119 samples, 0.15%)</title><rect x="329.9" y="341" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="332.89" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,493,216 samples, 0.02%)</title><rect x="50.3" y="1029" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="53.32" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="325" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="109.63" y="335.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="661" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="671.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (37,746,033 samples, 0.07%)</title><rect x="88.0" y="469" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="91.02" y="479.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,857,775 samples, 0.03%)</title><rect x="1163.8" y="277" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1166.76" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (23,762,811 samples, 0.04%)</title><rect x="717.0" y="341" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="719.97" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (860,611,189 samples, 1.51%)</title><rect x="359.4" y="421" width="17.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="362.41" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="213" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="938.10" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="181" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1110.67" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (227,760,965 samples, 0.40%)</title><rect x="574.5" y="421" width="4.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="577.50" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (9,556,242 samples, 0.02%)</title><rect x="175.8" y="309" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="178.76" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,160,553 samples, 0.02%)</title><rect x="89.2" y="437" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="92.20" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,557,081 samples, 0.02%)</title><rect x="624.1" y="261" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="627.14" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (14,302,004 samples, 0.03%)</title><rect x="501.5" y="389" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="504.52" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (57,194,179 samples, 0.10%)</title><rect x="895.3" y="357" width="1.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="898.27" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,551,908 samples, 0.02%)</title><rect x="103.6" y="421" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="106.60" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (114,440,646 samples, 0.20%)</title><rect x="746.0" y="277" width="2.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="749.04" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (460,401,031 samples, 0.81%)</title><rect x="988.3" y="245" width="9.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="991.31" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (104,213,972 samples, 0.18%)</title><rect x="574.6" y="405" width="2.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="577.60" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (23,508,856 samples, 0.04%)</title><rect x="1183.4" y="405" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1186.39" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (52,117,743 samples, 0.09%)</title><rect x="244.3" y="437" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="247.35" y="447.5" ></text>
</g>
<g >
<title>operator new (85,669,833 samples, 0.15%)</title><rect x="198.9" y="277" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="201.86" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (19,019,835 samples, 0.03%)</title><rect x="292.2" y="389" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="295.16" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="981" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="991.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (587,460,102 samples, 1.03%)</title><rect x="1130.8" y="309" width="12.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1133.85" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,541,977 samples, 0.16%)</title><rect x="78.3" y="501" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="81.29" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (90,423,944 samples, 0.16%)</title><rect x="576.9" y="325" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="579.95" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (37,775,263 samples, 0.07%)</title><rect x="104.7" y="437" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="107.68" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (19,054,168 samples, 0.03%)</title><rect x="83.4" y="469" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.40" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (75,628,090 samples, 0.13%)</title><rect x="141.9" y="261" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="144.88" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (57,060,311 samples, 0.10%)</title><rect x="809.2" y="341" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="812.20" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (18,688,131 samples, 0.03%)</title><rect x="89.7" y="469" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="92.68" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (242,803,650 samples, 0.42%)</title><rect x="492.6" y="373" width="5.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="495.59" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,458,176 samples, 0.02%)</title><rect x="176.9" y="469" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="179.94" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,240,516 samples, 0.02%)</title><rect x="627.0" y="277" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="629.97" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,275,066 samples, 0.02%)</title><rect x="27.5" y="965" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="30.54" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (66,009,931 samples, 0.12%)</title><rect x="855.5" y="229" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="858.52" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,534,742 samples, 0.02%)</title><rect x="244.8" y="357" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="247.84" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (14,071,420 samples, 0.02%)</title><rect x="1129.0" y="213" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1131.99" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (18,938,877 samples, 0.03%)</title><rect x="345.7" y="421" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="348.70" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (264,753,919 samples, 0.46%)</title><rect x="181.5" y="437" width="5.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="184.54" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="181" width="1.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1009.34" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (61,918,106 samples, 0.11%)</title><rect x="78.5" y="453" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="81.48" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (33,339,266 samples, 0.06%)</title><rect x="394.0" y="373" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="397.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,359,522 samples, 0.02%)</title><rect x="1186.1" y="437" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.13" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (80,542,122 samples, 0.14%)</title><rect x="1139.4" y="245" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1142.35" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="229" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1145.98" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate (19,041,615 samples, 0.03%)</title><rect x="87.6" y="357" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="90.63" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (33,437,147 samples, 0.06%)</title><rect x="66.8" y="1029" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="69.79" y="1039.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (151,579,049 samples, 0.27%)</title><rect x="141.0" y="405" width="3.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="144.00" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="245" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="203.62" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,348,926 samples, 0.02%)</title><rect x="99.4" y="405" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="102.39" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,542,090 samples, 0.02%)</title><rect x="1179.2" y="341" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1182.16" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14,307,510 samples, 0.03%)</title><rect x="574.2" y="405" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="577.21" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (23,810,264 samples, 0.04%)</title><rect x="238.2" y="389" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="241.17" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (9,529,571 samples, 0.02%)</title><rect x="1144.3" y="245" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1147.35" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (28,445,672 samples, 0.05%)</title><rect x="335.1" y="277" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="338.08" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,542,688 samples, 0.02%)</title><rect x="901.6" y="229" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="904.63" y="239.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,161,253,023 samples, 2.03%)</title><rect x="1063.6" y="325" width="24.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1066.63" y="335.5" >C..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (70,349,092 samples, 0.12%)</title><rect x="625.5" y="389" width="1.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="628.52" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (109,347,758 samples, 0.19%)</title><rect x="205.8" y="421" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="208.81" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,276,302 samples, 0.02%)</title><rect x="1000.9" y="229" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1003.86" y="239.5" ></text>
</g>
<g >
<title>operator new (66,696,600 samples, 0.12%)</title><rect x="802.1" y="245" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="805.13" y="255.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="165" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1158.62" y="175.5" ></text>
</g>
<g >
<title>operator new (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="117" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.67" y="127.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (118,386,185 samples, 0.21%)</title><rect x="925.1" y="261" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="928.11" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="245" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="938.10" y="255.5" ></text>
</g>
<g >
<title>operator new (37,775,263 samples, 0.07%)</title><rect x="104.7" y="389" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="107.68" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (104,652,474 samples, 0.18%)</title><rect x="196.4" y="405" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="199.41" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (14,297,563 samples, 0.03%)</title><rect x="172.7" y="421" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="175.72" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,104,883 samples, 0.16%)</title><rect x="452.8" y="373" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="455.79" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,278,739 samples, 0.09%)</title><rect x="804.6" y="325" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="807.59" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,131,345 samples, 0.07%)</title><rect x="972.3" y="277" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.34" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,488,560 samples, 0.02%)</title><rect x="124.8" y="437" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="127.84" y="447.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,011,101,488 samples, 1.77%)</title><rect x="825.4" y="341" width="20.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="828.35" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,542,194 samples, 0.02%)</title><rect x="345.4" y="325" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="348.41" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (47,598,538 samples, 0.08%)</title><rect x="85.2" y="501" width="1.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="88.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (9,527,433 samples, 0.02%)</title><rect x="1038.2" y="293" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1041.21" y="303.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (9,542,082 samples, 0.02%)</title><rect x="1150.4" y="293" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1153.44" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="213" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="636.74" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (38,143,848 samples, 0.07%)</title><rect x="1037.0" y="309" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1040.03" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (19,074,795 samples, 0.03%)</title><rect x="1171.6" y="165" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1174.60" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (23,867,984 samples, 0.04%)</title><rect x="338.0" y="309" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="341.03" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="309" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1181.27" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,228,331,792 samples, 2.15%)</title><rect x="716.2" y="357" width="25.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="719.18" y="367.5" >s..</text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="757" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="767.5" >CNF::solve_helper</text>
</g>
<g >
<title>_int_free (28,606,653 samples, 0.05%)</title><rect x="856.2" y="213" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="859.19" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (232,822,530 samples, 0.41%)</title><rect x="196.4" y="453" width="4.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="199.41" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (9,551,199 samples, 0.02%)</title><rect x="1143.4" y="69" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1146.37" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,520,998 samples, 0.02%)</title><rect x="501.5" y="277" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="504.52" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (109,634,352 samples, 0.19%)</title><rect x="271.1" y="405" width="2.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="274.10" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,352,927,157 samples, 2.37%)</title><rect x="977.0" y="341" width="28.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="980.05" y="351.5" >C..</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,524,752 samples, 0.02%)</title><rect x="1179.0" y="373" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1181.96" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="389" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="109.63" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,310,305 samples, 0.03%)</title><rect x="177.4" y="469" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="180.43" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (61,653,843 samples, 0.11%)</title><rect x="449.1" y="421" width="1.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="452.06" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,164,490,503 samples, 3.79%)</title><rect x="698.8" y="405" width="44.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="701.81" y="415.5" >CNF:..</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,498,323 samples, 0.02%)</title><rect x="127.2" y="485" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="130.19" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (28,547,056 samples, 0.05%)</title><rect x="97.9" y="485" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="100.92" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (80,630,289 samples, 0.14%)</title><rect x="931.8" y="293" width="1.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="934.77" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,071,020 samples, 0.08%)</title><rect x="975.5" y="309" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="978.49" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="261" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1088.14" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (14,321,360 samples, 0.03%)</title><rect x="451.6" y="341" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="454.61" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,347,291 samples, 0.02%)</title><rect x="743.3" y="245" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="746.30" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="213" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1036.61" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (57,250,015 samples, 0.10%)</title><rect x="623.2" y="309" width="1.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="626.16" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (80,750,479 samples, 0.14%)</title><rect x="25.6" y="933" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="28.58" y="943.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="821" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="831.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="293" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1041.41" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="837" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (75,828,381 samples, 0.13%)</title><rect x="933.5" y="229" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="936.53" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (28,629,197 samples, 0.05%)</title><rect x="1156.5" y="181" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1159.51" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,544,232 samples, 0.02%)</title><rect x="1163.0" y="229" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1165.97" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (61,484,056 samples, 0.11%)</title><rect x="1166.4" y="181" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1169.41" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,283,692 samples, 0.02%)</title><rect x="180.2" y="341" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="183.17" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (19,019,738 samples, 0.03%)</title><rect x="1105.9" y="293" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1108.90" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (71,138,890 samples, 0.12%)</title><rect x="105.5" y="437" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="108.46" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate (104,652,474 samples, 0.18%)</title><rect x="196.4" y="309" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="199.41" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (52,440,936 samples, 0.09%)</title><rect x="512.7" y="293" width="1.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="515.68" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (19,041,615 samples, 0.03%)</title><rect x="87.6" y="421" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="90.63" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (23,872,488 samples, 0.04%)</title><rect x="1011.6" y="277" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1014.62" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (23,777,390 samples, 0.04%)</title><rect x="806.1" y="357" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="809.06" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (119,054,907 samples, 0.21%)</title><rect x="85.2" y="517" width="2.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="88.17" y="527.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (52,268,157 samples, 0.09%)</title><rect x="98.7" y="517" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="101.70" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,537,515 samples, 0.02%)</title><rect x="940.0" y="293" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="942.97" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (9,458,364 samples, 0.02%)</title><rect x="70.8" y="549" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="73.83" y="559.5" ></text>
</g>
<g >
<title>CNF::CNF (28,624,961 samples, 0.05%)</title><rect x="80.2" y="533" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="83.16" y="543.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (811,755,363 samples, 1.42%)</title><rect x="986.6" y="325" width="16.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="989.64" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="165" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="855.48" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (95,149,720 samples, 0.17%)</title><rect x="502.1" y="357" width="2.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="505.11" y="367.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (137,989,232 samples, 0.24%)</title><rect x="71.0" y="565" width="2.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="74.02" y="575.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (788,488,907 samples, 1.38%)</title><rect x="459.4" y="389" width="16.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="462.45" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,498,323 samples, 0.02%)</title><rect x="127.2" y="437" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="130.19" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,536,406 samples, 0.02%)</title><rect x="1176.2" y="309" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1179.21" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (80,750,479 samples, 0.14%)</title><rect x="25.6" y="949" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.58" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (42,983,229 samples, 0.08%)</title><rect x="572.0" y="373" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="575.04" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (152,320,059 samples, 0.27%)</title><rect x="617.3" y="293" width="3.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="620.27" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (133,502,370 samples, 0.23%)</title><rect x="801.7" y="341" width="2.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="804.73" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (14,086,922 samples, 0.02%)</title><rect x="1144.1" y="229" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1147.06" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (19,100,574 samples, 0.03%)</title><rect x="291.8" y="373" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="294.76" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,534,742 samples, 0.02%)</title><rect x="244.8" y="341" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="247.84" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (312,893,242 samples, 0.55%)</title><rect x="679.6" y="373" width="6.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="682.60" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (23,859,736 samples, 0.04%)</title><rect x="517.5" y="357" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="520.49" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (128,219,838 samples, 0.22%)</title><rect x="840.7" y="277" width="2.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="843.74" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (332,917,902 samples, 0.58%)</title><rect x="90.1" y="485" width="6.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="93.07" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,534,072 samples, 0.02%)</title><rect x="242.2" y="309" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="245.18" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (131,031,597 samples, 0.23%)</title><rect x="379.1" y="309" width="2.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="382.14" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (66,427,165 samples, 0.12%)</title><rect x="1001.2" y="245" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1004.15" y="255.5" ></text>
</g>
<g >
<title>operator new (60,957,723 samples, 0.11%)</title><rect x="849.1" y="261" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="852.07" y="271.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (537,683,235 samples, 0.94%)</title><rect x="361.4" y="357" width="11.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="364.37" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,970,722 samples, 0.23%)</title><rect x="840.6" y="309" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="843.65" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (175,906,482 samples, 0.31%)</title><rect x="504.1" y="293" width="3.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="507.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (71,506,391 samples, 0.13%)</title><rect x="337.5" y="421" width="1.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="340.54" y="431.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="805" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="29.56" y="815.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (693,520,794 samples, 1.21%)</title><rect x="478.3" y="357" width="14.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="481.27" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (33,339,266 samples, 0.06%)</title><rect x="394.0" y="357" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="397.01" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (151,479,163 samples, 0.27%)</title><rect x="177.9" y="485" width="3.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="180.92" y="495.5" ></text>
</g>
<g >
<title>CNF::solve_helper (3,324,973,422 samples, 5.82%)</title><rect x="1107.3" y="325" width="68.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1110.28" y="335.5" >CNF::so..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,791,662 samples, 0.13%)</title><rect x="1139.5" y="213" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1142.45" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (28,576,788 samples, 0.05%)</title><rect x="759.3" y="325" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="762.29" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (397,956,157 samples, 0.70%)</title><rect x="551.7" y="357" width="8.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="554.69" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (9,551,598 samples, 0.02%)</title><rect x="1174.8" y="181" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1177.84" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9,525,555 samples, 0.02%)</title><rect x="180.5" y="405" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="183.47" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,212,945 samples, 0.02%)</title><rect x="38.0" y="997" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="41.02" y="1007.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="901" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="911.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (384,639,093 samples, 0.67%)</title><rect x="752.6" y="373" width="8.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="755.63" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (37,986,708 samples, 0.07%)</title><rect x="1187.0" y="421" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.01" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (815,566,640 samples, 1.43%)</title><rect x="600.0" y="357" width="16.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="603.04" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,544,232 samples, 0.02%)</title><rect x="1163.0" y="245" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1165.97" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,087,019 samples, 0.09%)</title><rect x="193.8" y="421" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="196.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (56,667,108 samples, 0.10%)</title><rect x="928.9" y="277" width="1.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="931.93" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,544,088 samples, 0.02%)</title><rect x="79.9" y="389" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.86" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (132,484,134 samples, 0.23%)</title><rect x="141.0" y="373" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="144.00" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (13,961,624 samples, 0.02%)</title><rect x="244.4" y="309" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="247.45" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (42,757,331 samples, 0.07%)</title><rect x="1059.5" y="309" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1062.53" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (156,360,328 samples, 0.27%)</title><rect x="1010.3" y="325" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1013.25" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,854,576 samples, 0.04%)</title><rect x="80.3" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="83.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,318,989 samples, 0.03%)</title><rect x="245.0" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="248.03" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (170,678,755 samples, 0.30%)</title><rect x="1153.6" y="245" width="3.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1156.57" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,463,027 samples, 0.02%)</title><rect x="972.1" y="229" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="975.15" y="239.5" ></text>
</g>
<g >
<title>operator new (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="149" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1009.34" y="159.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="181" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1158.62" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,535,947 samples, 0.02%)</title><rect x="848.6" y="261" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="851.58" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (806,191,091 samples, 1.41%)</title><rect x="600.0" y="293" width="16.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="603.04" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (19,086,785 samples, 0.03%)</title><rect x="525.8" y="357" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="528.81" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,559,229 samples, 0.02%)</title><rect x="896.0" y="229" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="898.95" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (104,615,688 samples, 0.18%)</title><rect x="696.1" y="309" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="699.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,517,157 samples, 0.02%)</title><rect x="1175.6" y="293" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1178.62" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,544,762 samples, 0.02%)</title><rect x="508.0" y="293" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="510.99" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (47,457,521 samples, 0.08%)</title><rect x="639.3" y="309" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="642.33" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (422,135,073 samples, 0.74%)</title><rect x="977.9" y="293" width="8.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="980.93" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (9,534,415 samples, 0.02%)</title><rect x="126.3" y="325" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="129.31" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,844,979 samples, 0.04%)</title><rect x="1143.2" y="261" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1146.17" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (28,381,701 samples, 0.05%)</title><rect x="439.7" y="373" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="442.66" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,301,876 samples, 0.03%)</title><rect x="104.2" y="405" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="107.19" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (14,322,009 samples, 0.03%)</title><rect x="692.2" y="293" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="695.24" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (14,302,010 samples, 0.03%)</title><rect x="1016.4" y="293" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1019.42" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (123,628,412 samples, 0.22%)</title><rect x="77.6" y="533" width="2.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="80.60" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (9,541,727 samples, 0.02%)</title><rect x="81.0" y="501" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="84.04" y="511.5" ></text>
</g>
<g >
<title>[a.out] (9,540,668 samples, 0.02%)</title><rect x="752.8" y="245" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="755.82" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (19,041,404 samples, 0.03%)</title><rect x="97.5" y="469" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="100.53" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="197" width="0.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="751.41" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,526,892 samples, 0.02%)</title><rect x="1184.6" y="421" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.56" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (47,323,213 samples, 0.08%)</title><rect x="846.2" y="341" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="849.23" y="351.5" ></text>
</g>
<g >
<title>CNF::CNF (247,402,150 samples, 0.43%)</title><rect x="743.7" y="389" width="5.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="746.69" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (9,503,866 samples, 0.02%)</title><rect x="1069.9" y="277" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1072.90" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,728,819 samples, 0.22%)</title><rect x="1102.0" y="229" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1104.97" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (14,304,557 samples, 0.03%)</title><rect x="806.1" y="309" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="809.06" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,964,213 samples, 0.03%)</title><rect x="810.4" y="245" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="813.37" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (132,726,167 samples, 0.23%)</title><rect x="1079.0" y="261" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1081.97" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (75,262,251 samples, 0.13%)</title><rect x="1062.1" y="245" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1065.07" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="229" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="636.74" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="197" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1009.34" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (28,614,619 samples, 0.05%)</title><rect x="741.7" y="373" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="744.73" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="245" width="0.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1085.60" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,548,598 samples, 0.02%)</title><rect x="1179.8" y="373" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1182.84" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (289,636,221 samples, 0.51%)</title><rect x="187.6" y="389" width="6.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="190.59" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (99,599,062 samples, 0.17%)</title><rect x="198.6" y="357" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="201.57" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (38,045,910 samples, 0.07%)</title><rect x="176.2" y="421" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="179.15" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (493,318,917 samples, 0.86%)</title><rect x="904.2" y="293" width="10.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="907.19" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (133,497,523 samples, 0.23%)</title><rect x="746.0" y="341" width="2.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="749.04" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (431,571,409 samples, 0.76%)</title><rect x="977.7" y="309" width="8.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="980.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (28,308,086 samples, 0.05%)</title><rect x="516.2" y="341" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="519.21" y="351.5" ></text>
</g>
<g >
<title>CNF::~CNF (42,856,742 samples, 0.07%)</title><rect x="1185.2" y="453" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1188.24" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,557,916 samples, 0.02%)</title><rect x="1177.7" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1180.68" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (9,556,752 samples, 0.02%)</title><rect x="1129.6" y="293" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1132.57" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,536,406 samples, 0.02%)</title><rect x="1176.2" y="325" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1179.21" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,082,216 samples, 0.03%)</title><rect x="1183.0" y="421" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1185.99" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,283,692 samples, 0.02%)</title><rect x="180.2" y="421" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="183.17" y="431.5" ></text>
</g>
<g >
<title>std::istream::operator&gt;&gt; (36,303,975 samples, 0.06%)</title><rect x="1189.2" y="965" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.25" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (384,639,093 samples, 0.67%)</title><rect x="752.6" y="357" width="8.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="755.63" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (184,784,727 samples, 0.32%)</title><rect x="1131.2" y="261" width="3.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1134.24" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,342,287,743 samples, 4.10%)</title><rect x="579.2" y="421" width="48.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="582.20" y="431.5" >CNF:..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="277" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1183.83" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19,009,136 samples, 0.03%)</title><rect x="931.1" y="325" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="934.08" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="261" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1085.60" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,390,409 samples, 0.02%)</title><rect x="1173.8" y="165" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1176.76" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5,322,557 samples, 0.01%)</title><rect x="1165.7" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.71" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,450,939 samples, 0.02%)</title><rect x="895.4" y="293" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="898.36" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (61,959,269 samples, 0.11%)</title><rect x="797.1" y="325" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="800.11" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (493,318,917 samples, 0.86%)</title><rect x="904.2" y="309" width="10.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="907.19" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,518,762 samples, 0.02%)</title><rect x="698.2" y="293" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="701.22" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,206,431 samples, 0.06%)</title><rect x="1170.5" y="197" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1173.52" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="405" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1185.30" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="149" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1146.17" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (80,482,751 samples, 0.14%)</title><rect x="843.4" y="277" width="1.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="846.39" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,458,176 samples, 0.02%)</title><rect x="176.9" y="453" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="179.94" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (71,363,764 samples, 0.12%)</title><rect x="107.7" y="469" width="1.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="110.71" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (33,148,055 samples, 0.06%)</title><rect x="1048.4" y="277" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1051.37" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (76,020,154 samples, 0.13%)</title><rect x="101.8" y="389" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="104.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (18,991,681 samples, 0.03%)</title><rect x="337.6" y="309" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="340.64" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (171,232,349 samples, 0.30%)</title><rect x="630.2" y="293" width="3.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="633.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,559,229 samples, 0.02%)</title><rect x="896.0" y="245" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="898.95" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (71,217,033 samples, 0.12%)</title><rect x="933.6" y="149" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="936.63" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (132,635,648 samples, 0.23%)</title><rect x="639.2" y="341" width="2.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="642.23" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (37,969,239 samples, 0.07%)</title><rect x="1059.6" y="293" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1062.63" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="261" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1179.61" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (42,955,495 samples, 0.08%)</title><rect x="893.6" y="261" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="896.60" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (47,126,606 samples, 0.08%)</title><rect x="929.1" y="245" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="932.12" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="357" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="203.62" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (14,315,849 samples, 0.03%)</title><rect x="1183.1" y="389" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1186.09" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (14,315,803 samples, 0.03%)</title><rect x="194.8" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="197.84" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (38,163,055 samples, 0.07%)</title><rect x="1105.1" y="229" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1108.11" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (9,541,148 samples, 0.02%)</title><rect x="70.4" y="565" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="73.43" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (19,068,018 samples, 0.03%)</title><rect x="180.5" y="421" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="183.47" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (9,544,199 samples, 0.02%)</title><rect x="698.4" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="701.42" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (13,918,734 samples, 0.02%)</title><rect x="1168.1" y="213" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1171.07" y="223.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (127,810,511 samples, 0.22%)</title><rect x="899.9" y="341" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="902.88" y="351.5" ></text>
</g>
<g >
<title>CNF::solve_helper (33,034,987,035 samples, 57.79%)</title><rect x="501.9" y="437" width="682.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="504.91" y="447.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="261" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="387.90" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (156,761,043 samples, 0.27%)</title><rect x="997.9" y="293" width="3.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1000.92" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (18,872,770 samples, 0.03%)</title><rect x="1177.2" y="325" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1180.19" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (28,629,197 samples, 0.05%)</title><rect x="1156.5" y="197" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1159.51" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="293" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="91.61" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (23,528,096 samples, 0.04%)</title><rect x="244.3" y="341" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="247.35" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (161,559,215 samples, 0.28%)</title><rect x="504.4" y="261" width="3.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="507.37" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,275,066 samples, 0.02%)</title><rect x="27.5" y="901" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="30.54" y="911.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (23,878,748 samples, 0.04%)</title><rect x="1157.6" y="197" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1160.59" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (147,507,384 samples, 0.26%)</title><rect x="569.0" y="373" width="3.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="571.99" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,221,297 samples, 0.05%)</title><rect x="1038.8" y="293" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1041.80" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (19,086,342 samples, 0.03%)</title><rect x="138.1" y="389" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="141.06" y="399.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (128,170,056 samples, 0.22%)</title><rect x="198.6" y="389" width="2.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="201.57" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="389" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="91.61" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="997" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="1007.5" ></text>
</g>
<g >
<title>CNF::solve_helper (1,595,748,531 samples, 2.79%)</title><rect x="1143.0" y="309" width="32.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1145.98" y="319.5" >CN..</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (23,616,141 samples, 0.04%)</title><rect x="1169.5" y="245" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1172.54" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (9,528,690 samples, 0.02%)</title><rect x="292.5" y="389" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="295.55" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,545,098 samples, 0.02%)</title><rect x="1065.6" y="229" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1068.59" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,449,912 samples, 0.02%)</title><rect x="193.6" y="373" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="196.57" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,448,075 samples, 0.02%)</title><rect x="378.9" y="405" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="381.95" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (33,418,410 samples, 0.06%)</title><rect x="689.2" y="293" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="692.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (81,005,364 samples, 0.14%)</title><rect x="752.8" y="309" width="1.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="755.82" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,011,101,488 samples, 1.77%)</title><rect x="825.4" y="357" width="20.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="828.35" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (761,702,918 samples, 1.33%)</title><rect x="914.4" y="341" width="15.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="917.37" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,853,731 samples, 0.04%)</title><rect x="244.8" y="373" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="247.84" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,275,401 samples, 0.02%)</title><rect x="139.4" y="469" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="142.44" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (9,531,152 samples, 0.02%)</title><rect x="1171.4" y="197" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1174.40" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (80,400,993 samples, 0.14%)</title><rect x="640.3" y="325" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="643.31" y="335.5" ></text>
</g>
<g >
<title>CNF::CNF (33,405,710 samples, 0.06%)</title><rect x="1157.4" y="277" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1160.39" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (28,224,031 samples, 0.05%)</title><rect x="643.6" y="341" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="646.63" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="325" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1185.30" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (14,302,604 samples, 0.03%)</title><rect x="107.8" y="389" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="110.81" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (71,138,890 samples, 0.12%)</title><rect x="105.5" y="405" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="108.46" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,537,131 samples, 0.02%)</title><rect x="572.2" y="261" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="575.24" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (760,622,081 samples, 1.33%)</title><rect x="700.5" y="325" width="15.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="703.48" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="133" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1160.59" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (9,458,364 samples, 0.02%)</title><rect x="70.8" y="501" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="73.83" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,088 samples, 0.02%)</title><rect x="79.9" y="469" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="82.86" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,539,572 samples, 0.02%)</title><rect x="10.8" y="901" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="13.78" y="911.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="805" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="815.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,548,598 samples, 0.02%)</title><rect x="1179.8" y="389" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1182.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,307,889 samples, 0.03%)</title><rect x="101.2" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="104.25" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (123,005,156 samples, 0.22%)</title><rect x="1165.8" y="229" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1168.82" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (90,157,708 samples, 0.16%)</title><rect x="683.2" y="277" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="686.21" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,968,766,672 samples, 3.44%)</title><rect x="396.7" y="421" width="40.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="399.67" y="431.5" >std..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (151,579,049 samples, 0.27%)</title><rect x="141.0" y="437" width="3.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="144.00" y="447.5" ></text>
</g>
<g >
<title>CNF::solve_helper (53,354,277,562 samples, 93.34%)</title><rect x="87.6" y="533" width="1101.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.63" y="543.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="229" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1088.14" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (42,507,618 samples, 0.07%)</title><rect x="1089.2" y="261" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1092.16" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (142,136,556 samples, 0.25%)</title><rect x="974.1" y="357" width="2.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="977.11" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (38,184,748 samples, 0.07%)</title><rect x="49.5" y="1029" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="52.54" y="1039.5" ></text>
</g>
<g >
<title>malloc_consolidate (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="149" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1110.28" y="159.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (128,917,638 samples, 0.23%)</title><rect x="339.9" y="437" width="2.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="342.90" y="447.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,136,418 samples, 0.12%)</title><rect x="898.4" y="341" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="901.41" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (300,139,758 samples, 0.53%)</title><rect x="339.9" y="453" width="6.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="342.90" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,712,886 samples, 0.21%)</title><rect x="1151.1" y="229" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1154.12" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="181" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="751.41" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (47,323,213 samples, 0.08%)</title><rect x="846.2" y="357" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="849.23" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (9,425,059 samples, 0.02%)</title><rect x="1158.3" y="197" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1161.29" y="207.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (128,917,638 samples, 0.23%)</title><rect x="339.9" y="421" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="342.90" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (14,343,957 samples, 0.03%)</title><rect x="1111.1" y="245" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1114.08" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,549,565 samples, 0.02%)</title><rect x="929.7" y="197" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="932.70" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (42,883,372 samples, 0.08%)</title><rect x="1141.0" y="245" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1144.02" y="255.5" ></text>
</g>
<g >
<title>operator new (23,810,107 samples, 0.04%)</title><rect x="970.3" y="213" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="973.28" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (271,066,948 samples, 0.47%)</title><rect x="686.1" y="373" width="5.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="689.06" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="757" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="767.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (408,177,896 samples, 0.71%)</title><rect x="260.9" y="341" width="8.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="263.91" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (531,443,521 samples, 0.93%)</title><rect x="1047.9" y="293" width="10.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1050.88" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,219,091 samples, 0.02%)</title><rect x="627.4" y="389" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="630.37" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (14,321,360 samples, 0.03%)</title><rect x="451.6" y="357" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="454.61" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (14,082,840 samples, 0.02%)</title><rect x="1169.7" y="213" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1172.74" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (52,476,452 samples, 0.09%)</title><rect x="274.3" y="421" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="277.35" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,936,261 samples, 0.03%)</title><rect x="456.6" y="357" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="459.61" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (170,866,666 samples, 0.30%)</title><rect x="734.4" y="261" width="3.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="737.38" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (95,018,511 samples, 0.17%)</title><rect x="71.4" y="517" width="2.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="74.42" y="527.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (152,320,059 samples, 0.27%)</title><rect x="617.3" y="261" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="620.27" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (70,935,746 samples, 0.12%)</title><rect x="1166.4" y="197" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1169.41" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (185,682,192 samples, 0.32%)</title><rect x="616.9" y="341" width="3.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="619.88" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,428,886 samples, 0.06%)</title><rect x="137.4" y="405" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="140.37" y="415.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (33,401,333 samples, 0.06%)</title><rect x="344.3" y="341" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="347.32" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (28,309,090 samples, 0.05%)</title><rect x="126.6" y="437" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="129.61" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (90,141,843 samples, 0.16%)</title><rect x="1065.6" y="293" width="1.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1068.59" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,347,291 samples, 0.02%)</title><rect x="743.3" y="373" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="746.30" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,516,305 samples, 0.02%)</title><rect x="449.9" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="452.94" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (141,865,828 samples, 0.25%)</title><rect x="1005.1" y="325" width="2.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1008.07" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,074,795 samples, 0.03%)</title><rect x="1171.6" y="181" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1174.60" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (189,445,481 samples, 0.33%)</title><rect x="1135.4" y="229" width="4.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1138.44" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (57,075,601 samples, 0.10%)</title><rect x="199.4" y="245" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="202.45" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,449,901 samples, 0.02%)</title><rect x="1060.4" y="309" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1063.42" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (18,991,079 samples, 0.03%)</title><rect x="858.4" y="309" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="861.35" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,546,777 samples, 0.02%)</title><rect x="69.2" y="581" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="72.16" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,066,957 samples, 0.02%)</title><rect x="1142.8" y="293" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1145.79" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,507,035 samples, 0.16%)</title><rect x="247.6" y="421" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="250.59" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (71,046,544 samples, 0.12%)</title><rect x="596.7" y="325" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.71" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (71,233,797 samples, 0.12%)</title><rect x="570.6" y="357" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="573.57" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,901,165 samples, 0.04%)</title><rect x="1138.9" y="165" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1141.86" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (38,192,515 samples, 0.07%)</title><rect x="1168.8" y="229" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1171.75" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (32,821,366 samples, 0.06%)</title><rect x="1162.0" y="229" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1165.00" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (18,794,730 samples, 0.03%)</title><rect x="692.5" y="213" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="695.54" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (9,526,648 samples, 0.02%)</title><rect x="695.9" y="357" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="698.87" y="367.5" ></text>
</g>
<g >
<title>_int_free (28,567,923 samples, 0.05%)</title><rect x="391.4" y="277" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="394.36" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (266,986,360 samples, 0.47%)</title><rect x="855.1" y="341" width="5.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="858.12" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,560,234 samples, 0.02%)</title><rect x="339.5" y="325" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="342.50" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (62,028,947 samples, 0.11%)</title><rect x="1149.1" y="261" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1152.06" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,516,305 samples, 0.02%)</title><rect x="449.9" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="452.94" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (132,662,267 samples, 0.23%)</title><rect x="850.3" y="277" width="2.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="853.33" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (238,041,171 samples, 0.42%)</title><rect x="492.7" y="325" width="4.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="495.68" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,300,095 samples, 0.03%)</title><rect x="83.9" y="485" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="86.89" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (66,322,667 samples, 0.12%)</title><rect x="985.3" y="261" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="988.27" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,239,552,407 samples, 94.89%)</title><rect x="69.6" y="597" width="1119.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.55" y="607.5" >CNF::solve_helper</text>
</g>
<g >
<title>CNF::propagate_var_values (1,357,638,731 samples, 2.38%)</title><rect x="977.0" y="357" width="28.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="980.05" y="367.5" >C..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (70,935,746 samples, 0.12%)</title><rect x="1166.4" y="213" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1169.41" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (33,143,823 samples, 0.06%)</title><rect x="69.7" y="549" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="72.75" y="559.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,551,908 samples, 0.02%)</title><rect x="103.6" y="389" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="106.60" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (764,633,706 samples, 1.34%)</title><rect x="459.9" y="357" width="15.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="462.94" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,107,301 samples, 0.06%)</title><rect x="1130.2" y="277" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1133.17" y="287.5" ></text>
</g>
<g >
<title>CNF::CNF (141,865,828 samples, 0.25%)</title><rect x="1005.1" y="341" width="2.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1008.07" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (52,087,019 samples, 0.09%)</title><rect x="193.8" y="373" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="196.77" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,234,932 samples, 0.05%)</title><rect x="1039.4" y="229" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1042.38" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,560,581 samples, 0.02%)</title><rect x="74.0" y="501" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="76.97" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (37,746,033 samples, 0.07%)</title><rect x="88.0" y="453" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="91.02" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (38,019,695 samples, 0.07%)</title><rect x="1158.3" y="261" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1161.29" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (807,076,696 samples, 1.41%)</title><rect x="1090.6" y="325" width="16.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1093.62" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (669,752,312 samples, 1.17%)</title><rect x="478.3" y="309" width="13.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="481.27" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,378,185 samples, 0.06%)</title><rect x="1185.4" y="325" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1188.44" y="335.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (123,449,283 samples, 0.22%)</title><rect x="840.7" y="261" width="2.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="843.74" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="133" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1146.17" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (37,810,647 samples, 0.07%)</title><rect x="913.6" y="277" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="916.59" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,059,504 samples, 0.03%)</title><rect x="1186.3" y="453" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1189.32" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="389" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1191.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,676,179,251 samples, 2.93%)</title><rect x="645.0" y="373" width="34.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="648.00" y="383.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (18,872,770 samples, 0.03%)</title><rect x="1177.2" y="341" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1180.19" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (47,645,543 samples, 0.08%)</title><rect x="930.1" y="341" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="933.10" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (28,465,545 samples, 0.05%)</title><rect x="1172.7" y="197" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.68" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,817,276,611 samples, 3.18%)</title><rect x="811.4" y="389" width="37.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="814.36" y="399.5" >CNF..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (14,302,004 samples, 0.03%)</title><rect x="501.5" y="405" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="504.52" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (9,539,384 samples, 0.02%)</title><rect x="98.1" y="341" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="101.12" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,441,343 samples, 0.02%)</title><rect x="758.4" y="309" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="761.41" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,111,695 samples, 0.09%)</title><rect x="691.9" y="325" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="694.95" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (56,667,108 samples, 0.10%)</title><rect x="928.9" y="261" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="931.93" y="271.5" ></text>
</g>
<g >
<title>tcache_get (14,294,340 samples, 0.03%)</title><rect x="894.2" y="197" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="897.19" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (204,088,285 samples, 0.36%)</title><rect x="1164.1" y="277" width="4.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1167.15" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (332,917,902 samples, 0.58%)</title><rect x="90.1" y="501" width="6.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="93.07" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (14,339,988 samples, 0.03%)</title><rect x="1107.8" y="85" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1110.77" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,536,185 samples, 0.02%)</title><rect x="1149.4" y="229" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1152.36" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (9,529,922 samples, 0.02%)</title><rect x="859.8" y="309" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="862.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (61,653,843 samples, 0.11%)</title><rect x="449.1" y="389" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.06" y="399.5" ></text>
</g>
<g >
<title>CNF::solve_helper (44,157,948,798 samples, 77.25%)</title><rect x="275.4" y="469" width="911.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="278.43" y="479.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="165" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1174.99" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (47,645,543 samples, 0.08%)</title><rect x="930.1" y="325" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="933.10" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,280,135 samples, 0.02%)</title><rect x="1184.8" y="437" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1187.76" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,396,595,653 samples, 2.44%)</title><rect x="766.1" y="341" width="28.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="769.13" y="351.5" >st..</text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="133" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="938.10" y="143.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (85,318,368 samples, 0.15%)</title><rect x="269.3" y="341" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="272.34" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="197" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="636.74" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (9,420,818 samples, 0.02%)</title><rect x="794.8" y="325" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="797.77" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="213" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1179.41" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (95,149,720 samples, 0.17%)</title><rect x="502.1" y="389" width="2.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="505.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,117,743 samples, 0.09%)</title><rect x="244.3" y="389" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="247.35" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,739,633 samples, 0.03%)</title><rect x="456.2" y="309" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="459.22" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (23,512,399 samples, 0.04%)</title><rect x="892.6" y="293" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="895.62" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (71,363,764 samples, 0.12%)</title><rect x="107.7" y="485" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="110.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (61,959,269 samples, 0.11%)</title><rect x="797.1" y="309" width="1.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="800.11" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (90,141,843 samples, 0.16%)</title><rect x="1065.6" y="309" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1068.59" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="213" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1152.55" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (99,506,585 samples, 0.17%)</title><rect x="127.6" y="501" width="2.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="130.58" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="245" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1036.61" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (71,217,033 samples, 0.12%)</title><rect x="933.6" y="181" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="936.63" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="213" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1110.67" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,569,720 samples, 0.12%)</title><rect x="974.1" y="293" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="977.11" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (42,955,495 samples, 0.08%)</title><rect x="893.6" y="277" width="0.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="896.60" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (431,571,409 samples, 0.76%)</title><rect x="977.7" y="325" width="8.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="980.73" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (131,031,597 samples, 0.23%)</title><rect x="379.1" y="293" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="382.14" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (133,195,645 samples, 0.23%)</title><rect x="171.6" y="453" width="2.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="174.64" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,553,313 samples, 0.05%)</title><rect x="259.4" y="373" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="262.35" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (412,771,777 samples, 0.72%)</title><rect x="187.0" y="453" width="8.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="190.00" y="463.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (62,129,626 samples, 0.11%)</title><rect x="1164.5" y="245" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1167.54" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (123,479,123 samples, 0.22%)</title><rect x="1151.0" y="261" width="2.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1154.02" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (321,312,248 samples, 0.56%)</title><rect x="379.1" y="421" width="6.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="382.14" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,165,956 samples, 0.11%)</title><rect x="900.4" y="325" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="903.37" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (14,217,385 samples, 0.02%)</title><rect x="691.9" y="277" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="694.95" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (28,625,396 samples, 0.05%)</title><rect x="126.0" y="405" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="129.01" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (66,735,147 samples, 0.12%)</title><rect x="337.6" y="373" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="340.64" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,240,516 samples, 0.02%)</title><rect x="627.0" y="325" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="629.97" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,018,950 samples, 0.03%)</title><rect x="1167.3" y="133" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1170.29" y="143.5" ></text>
</g>
<g >
<title>operator new (142,845,372 samples, 0.25%)</title><rect x="381.9" y="245" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="384.95" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,208,110 samples, 0.06%)</title><rect x="14.0" y="949" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="17.01" y="959.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,363,956 samples, 0.02%)</title><rect x="1164.0" y="245" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1166.95" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="261" width="1.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1036.61" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="821" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="831.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,049,868 samples, 0.03%)</title><rect x="103.4" y="437" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="106.41" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (161,544,998 samples, 0.28%)</title><rect x="516.8" y="373" width="3.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="519.80" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (108,860,978 samples, 0.19%)</title><rect x="1001.2" y="293" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1004.15" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="325" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1179.61" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (189,445,481 samples, 0.33%)</title><rect x="1135.4" y="197" width="4.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.44" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (38,126,788 samples, 0.07%)</title><rect x="1081.8" y="277" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1084.81" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,214,324 samples, 0.02%)</title><rect x="1087.9" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1090.89" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (38,192,515 samples, 0.07%)</title><rect x="1168.8" y="245" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1171.75" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="149" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="855.48" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (56,815,639 samples, 0.10%)</title><rect x="105.5" y="325" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="108.46" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (14,240,516 samples, 0.02%)</title><rect x="627.0" y="357" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="629.97" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,165,956 samples, 0.11%)</title><rect x="900.4" y="277" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="903.37" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,347,240 samples, 0.03%)</title><rect x="843.0" y="213" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="846.00" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,330,040 samples, 0.03%)</title><rect x="1141.9" y="261" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1144.90" y="271.5" ></text>
</g>
<g >
<title>operator new (142,353,031 samples, 0.25%)</title><rect x="34.8" y="1029" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="37.79" y="1039.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,697,379 samples, 0.04%)</title><rect x="1173.7" y="197" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1176.66" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (880,039,570 samples, 1.54%)</title><rect x="1013.5" y="309" width="18.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1016.48" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (209,682,989 samples, 0.37%)</title><rect x="800.2" y="357" width="4.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="803.16" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,474,448 samples, 0.02%)</title><rect x="642.0" y="325" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="644.97" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="309" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="510.79" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,164,606 samples, 0.08%)</title><rect x="127.7" y="453" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="130.68" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (288,427,443 samples, 0.50%)</title><rect x="286.8" y="437" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="289.79" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,638,865 samples, 0.04%)</title><rect x="1088.6" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1091.57" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (14,286,894 samples, 0.02%)</title><rect x="297.4" y="389" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="300.45" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,318,368 samples, 0.15%)</title><rect x="269.3" y="389" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="272.34" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (227,171,416 samples, 0.40%)</title><rect x="1091.3" y="293" width="4.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1094.31" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,515,131 samples, 0.05%)</title><rect x="75.0" y="453" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="77.95" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,240,516 samples, 0.02%)</title><rect x="627.0" y="293" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="629.97" y="303.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (47,616,702 samples, 0.08%)</title><rect x="805.8" y="389" width="0.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="808.76" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (14,071,420 samples, 0.02%)</title><rect x="1129.0" y="181" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1131.99" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="309" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1179.61" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (14,322,009 samples, 0.03%)</title><rect x="692.2" y="277" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="695.24" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="325" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="203.62" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (132,970,722 samples, 0.23%)</title><rect x="840.6" y="325" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="843.65" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="229" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1040.13" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,499,335 samples, 0.02%)</title><rect x="976.5" y="261" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="979.46" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (38,161,335 samples, 0.07%)</title><rect x="287.1" y="325" width="0.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="290.08" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (19,039,287 samples, 0.03%)</title><rect x="897.5" y="293" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="900.52" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_end (9,540,918 samples, 0.02%)</title><rect x="451.3" y="373" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="454.31" y="383.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (47,454,526 samples, 0.08%)</title><rect x="69.6" y="581" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="72.65" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (71,469,650 samples, 0.13%)</title><rect x="802.0" y="277" width="1.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="805.03" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (123,298,789 samples, 0.22%)</title><rect x="627.7" y="325" width="2.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="630.65" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,683,931 samples, 0.08%)</title><rect x="128.7" y="469" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="131.65" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (8,975,908 samples, 0.02%)</title><rect x="1188.2" y="469" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1191.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,519,092 samples, 0.02%)</title><rect x="27.2" y="965" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="30.24" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (14,299,999 samples, 0.03%)</title><rect x="50.6" y="1029" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="53.62" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,598,538 samples, 0.08%)</title><rect x="85.2" y="469" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="88.17" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,560,234 samples, 0.02%)</title><rect x="339.5" y="293" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="342.50" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (14,302,604 samples, 0.03%)</title><rect x="107.8" y="373" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="110.81" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,559,229 samples, 0.02%)</title><rect x="896.0" y="261" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="898.95" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (33,104,608 samples, 0.06%)</title><rect x="173.1" y="373" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="176.11" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,515,131 samples, 0.05%)</title><rect x="75.0" y="437" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="77.95" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (57,238,906 samples, 0.10%)</title><rect x="86.2" y="405" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="89.15" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (23,589,176 samples, 0.04%)</title><rect x="66.3" y="1029" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="69.30" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,858,727 samples, 0.04%)</title><rect x="457.1" y="341" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="460.10" y="351.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (190,280,651 samples, 0.33%)</title><rect x="381.8" y="357" width="4.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="384.85" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,375,549 samples, 0.02%)</title><rect x="616.7" y="309" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="619.69" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,522,812 samples, 0.02%)</title><rect x="1176.9" y="181" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1179.90" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (71,302,753 samples, 0.12%)</title><rect x="1160.0" y="229" width="1.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1163.04" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (52,440,936 samples, 0.09%)</title><rect x="512.7" y="325" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="515.68" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (57,040,472 samples, 0.10%)</title><rect x="804.5" y="357" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="807.49" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (19,041,742 samples, 0.03%)</title><rect x="76.0" y="517" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="79.03" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,472,833 samples, 0.02%)</title><rect x="806.4" y="325" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="809.36" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (27,799,160 samples, 0.05%)</title><rect x="1109.3" y="245" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1112.33" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="197" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="938.10" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (14,292,506 samples, 0.03%)</title><rect x="848.5" y="325" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="851.48" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (142,347,106 samples, 0.25%)</title><rect x="101.5" y="469" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="104.54" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,453,364 samples, 0.09%)</title><rect x="895.4" y="325" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="898.36" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,318,368 samples, 0.15%)</title><rect x="269.3" y="405" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="272.34" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="101" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1110.67" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (61,959,269 samples, 0.11%)</title><rect x="797.1" y="229" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="800.11" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,549,892 samples, 0.02%)</title><rect x="574.0" y="357" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="577.01" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (636,206,567 samples, 1.11%)</title><rect x="826.9" y="293" width="13.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="829.92" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (33,418,410 samples, 0.06%)</title><rect x="689.2" y="277" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="692.20" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (189,445,481 samples, 0.33%)</title><rect x="1135.4" y="213" width="4.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1138.44" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,132,634,911 samples, 3.73%)</title><rect x="457.8" y="421" width="44.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="460.79" y="431.5" >CNF:..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,535,135 samples, 0.02%)</title><rect x="972.6" y="229" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.64" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate (109,227,681 samples, 0.19%)</title><rect x="627.9" y="245" width="2.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="630.95" y="255.5" ></text>
</g>
<g >
<title>tcache_put (14,294,268 samples, 0.03%)</title><rect x="852.0" y="133" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="854.99" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="261" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1145.98" y="271.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="149" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1170.87" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (38,098,135 samples, 0.07%)</title><rect x="889.3" y="245" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="892.30" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (75,952,432 samples, 0.13%)</title><rect x="498.9" y="341" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="501.88" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (61,900,791 samples, 0.11%)</title><rect x="377.2" y="405" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="380.18" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (47,795,537 samples, 0.08%)</title><rect x="239.2" y="421" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="242.24" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (90,507,035 samples, 0.16%)</title><rect x="247.6" y="373" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="250.59" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (38,137,386 samples, 0.07%)</title><rect x="1185.3" y="357" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1188.34" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (76,020,154 samples, 0.13%)</title><rect x="101.8" y="453" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="104.84" y="463.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (33,428,886 samples, 0.06%)</title><rect x="137.4" y="389" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="140.37" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (123,728,819 samples, 0.22%)</title><rect x="1102.0" y="213" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1104.97" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (95,092,440 samples, 0.17%)</title><rect x="374.1" y="341" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="377.14" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (38,039,113 samples, 0.07%)</title><rect x="765.3" y="341" width="0.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="768.35" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (19,041,615 samples, 0.03%)</title><rect x="87.6" y="469" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="90.63" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (18,959,442 samples, 0.03%)</title><rect x="929.7" y="213" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="932.70" y="223.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="869" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="879.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (47,373,206 samples, 0.08%)</title><rect x="376.2" y="325" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="379.20" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (61,804,346 samples, 0.11%)</title><rect x="477.0" y="373" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="479.99" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (14,321,360 samples, 0.03%)</title><rect x="451.6" y="325" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="454.61" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (37,945,453 samples, 0.07%)</title><rect x="563.6" y="325" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="566.62" y="335.5" ></text>
</g>
<g >
<title>CNF::CNF (42,938,449 samples, 0.08%)</title><rect x="1107.3" y="309" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1110.28" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (42,442,526 samples, 0.07%)</title><rect x="1035.4" y="293" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1038.37" y="303.5" ></text>
</g>
<g >
<title>_int_free (28,636,056 samples, 0.05%)</title><rect x="753.7" y="229" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="756.71" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (14,279,625 samples, 0.02%)</title><rect x="212.0" y="421" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="214.99" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,555,615 samples, 0.02%)</title><rect x="449.7" y="277" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="452.74" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (332,858,867 samples, 0.58%)</title><rect x="1168.4" y="277" width="6.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1171.36" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (42,955,495 samples, 0.08%)</title><rect x="893.6" y="293" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="896.60" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,065,538 samples, 0.03%)</title><rect x="98.9" y="453" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="101.90" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (146,924,473 samples, 0.26%)</title><rect x="275.4" y="357" width="3.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="278.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (19,059,504 samples, 0.03%)</title><rect x="1186.3" y="421" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1189.32" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (204,071,723 samples, 0.36%)</title><rect x="504.1" y="325" width="4.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="507.07" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,518,189 samples, 0.02%)</title><rect x="357.5" y="357" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="360.45" y="367.5" ></text>
</g>
<g >
<title>operator new (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="133" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1065.07" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (60,957,723 samples, 0.11%)</title><rect x="849.1" y="245" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="852.07" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (165,636,129 samples, 0.29%)</title><rect x="968.6" y="325" width="3.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="971.63" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,499,335 samples, 0.02%)</title><rect x="976.5" y="309" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="979.46" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (76,020,154 samples, 0.13%)</title><rect x="101.8" y="437" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="104.84" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (28,633,463 samples, 0.05%)</title><rect x="1157.5" y="245" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1160.49" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (137,408,177 samples, 0.24%)</title><rect x="843.4" y="309" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="846.39" y="319.5" ></text>
</g>
<g >
<title>CNF::~CNF (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="341" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1179.41" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (147,210,808 samples, 0.26%)</title><rect x="998.1" y="261" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1001.11" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,196,717 samples, 0.02%)</title><rect x="1090.0" y="229" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1093.03" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,783,364 samples, 0.04%)</title><rect x="98.0" y="469" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="101.02" y="479.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (133,205,297 samples, 0.23%)</title><rect x="695.9" y="389" width="2.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="698.87" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (14,279,625 samples, 0.02%)</title><rect x="212.0" y="405" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="214.99" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,535,947 samples, 0.02%)</title><rect x="848.6" y="277" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="851.58" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,508,545 samples, 0.02%)</title><rect x="1004.8" y="325" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1007.78" y="335.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (47,071,020 samples, 0.08%)</title><rect x="975.5" y="277" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="978.49" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (99,926,792 samples, 0.17%)</title><rect x="1148.3" y="277" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1151.28" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (19,088,170 samples, 0.03%)</title><rect x="457.2" y="325" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="460.20" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (146,924,473 samples, 0.26%)</title><rect x="275.4" y="309" width="3.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="278.43" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (146,924,473 samples, 0.26%)</title><rect x="275.4" y="405" width="3.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="278.43" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,452,544 samples, 0.02%)</title><rect x="576.6" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="579.56" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,316,876 samples, 0.03%)</title><rect x="1169.2" y="197" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1172.24" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (171,558,200 samples, 0.30%)</title><rect x="246.1" y="469" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="249.11" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (9,520,521 samples, 0.02%)</title><rect x="811.1" y="277" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="814.06" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (132,662,267 samples, 0.23%)</title><rect x="850.3" y="309" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="853.33" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (14,304,557 samples, 0.03%)</title><rect x="806.1" y="293" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="809.06" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,537,411 samples, 0.02%)</title><rect x="282.5" y="341" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="285.49" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (131,031,597 samples, 0.23%)</title><rect x="379.1" y="357" width="2.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="382.14" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (71,136,418 samples, 0.12%)</title><rect x="898.4" y="357" width="1.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="901.41" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="197" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1040.13" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (9,567,798 samples, 0.02%)</title><rect x="239.5" y="293" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="242.54" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (52,528,386,841 samples, 91.90%)</title><rect x="104.7" y="517" width="1084.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.68" y="527.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (461,365,343 samples, 0.81%)</title><rect x="795.0" y="373" width="9.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="797.96" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (19,082,606 samples, 0.03%)</title><rect x="338.1" y="277" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="341.13" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (289,636,221 samples, 0.51%)</title><rect x="187.6" y="357" width="6.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="190.59" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (459,049,906 samples, 0.80%)</title><rect x="915.5" y="277" width="9.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="918.54" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (23,451,684 samples, 0.04%)</title><rect x="888.3" y="309" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="891.33" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (28,527,336 samples, 0.05%)</title><rect x="901.9" y="309" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="904.93" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (104,735,400 samples, 0.18%)</title><rect x="1054.7" y="213" width="2.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1057.73" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (109,678,713 samples, 0.19%)</title><rect x="746.0" y="245" width="2.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="749.04" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (85,404,119 samples, 0.15%)</title><rect x="329.9" y="325" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="332.89" y="335.5" ></text>
</g>
<g >
<title>operator new (131,031,597 samples, 0.23%)</title><rect x="379.1" y="325" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="382.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="741" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="751.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (204,088,285 samples, 0.36%)</title><rect x="1164.1" y="261" width="4.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1167.15" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,558,387 samples, 0.02%)</title><rect x="973.5" y="229" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="976.52" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="197" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1063.61" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (52,148,724 samples, 0.09%)</title><rect x="376.1" y="357" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="379.10" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="229" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1131.21" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (75,770,393 samples, 0.13%)</title><rect x="95.4" y="453" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.37" y="463.5" ></text>
</g>
<g >
<title>operator new (14,304,557 samples, 0.03%)</title><rect x="806.1" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="809.06" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,102,837 samples, 0.07%)</title><rect x="804.8" y="309" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="807.78" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (70,349,092 samples, 0.12%)</title><rect x="625.5" y="373" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="628.52" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (52,366,037 samples, 0.09%)</title><rect x="972.1" y="309" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.15" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,853,380 samples, 0.04%)</title><rect x="1156.6" y="165" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1159.60" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (85,404,119 samples, 0.15%)</title><rect x="329.9" y="373" width="1.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="332.89" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (47,551,890 samples, 0.08%)</title><rect x="96.9" y="485" width="1.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="99.94" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (19,067,786 samples, 0.03%)</title><rect x="1188.6" y="485" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1191.56" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (42,856,742 samples, 0.07%)</title><rect x="1185.2" y="389" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.24" y="399.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (90,423,944 samples, 0.16%)</title><rect x="576.9" y="341" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="579.95" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="109.63" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (14,314,841 samples, 0.03%)</title><rect x="148.4" y="405" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="151.44" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (23,697,379 samples, 0.04%)</title><rect x="1173.7" y="213" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1176.66" y="223.5" ></text>
</g>
<g >
<title>tcache_get (14,312,028 samples, 0.03%)</title><rect x="684.8" y="229" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="687.78" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,620,367 samples, 0.04%)</title><rect x="133.3" y="405" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="136.27" y="415.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (42,472,697 samples, 0.07%)</title><rect x="1039.4" y="325" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1042.38" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (28,517,466 samples, 0.05%)</title><rect x="840.1" y="293" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="843.06" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,556,752 samples, 0.02%)</title><rect x="1129.6" y="277" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1132.57" y="287.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (33,206,431 samples, 0.06%)</title><rect x="1170.5" y="229" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1173.52" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,557,916 samples, 0.02%)</title><rect x="1177.7" y="261" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1180.68" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="197" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1178.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (57,040,472 samples, 0.10%)</title><rect x="804.5" y="341" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="807.49" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,104,608 samples, 0.06%)</title><rect x="173.1" y="325" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="176.11" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (80,659,697 samples, 0.14%)</title><rect x="64.0" y="1029" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="66.95" y="1039.5" ></text>
</g>
<g >
<title>CNF::CNF (208,436,556 samples, 0.36%)</title><rect x="139.8" y="485" width="4.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="142.83" y="495.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (57,238,906 samples, 0.10%)</title><rect x="86.2" y="437" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="89.15" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (601,412,352 samples, 1.05%)</title><rect x="1113.2" y="261" width="12.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1116.15" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (61,900,059 samples, 0.11%)</title><rect x="74.4" y="565" width="1.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="77.36" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (251,682,354 samples, 0.44%)</title><rect x="795.0" y="357" width="5.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="797.96" y="367.5" ></text>
</g>
<g >
<title>[a.out] (9,541,104 samples, 0.02%)</title><rect x="289.1" y="373" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="292.14" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,510,790 samples, 0.02%)</title><rect x="1186.8" y="421" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1189.81" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,569,720 samples, 0.12%)</title><rect x="974.1" y="309" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="977.11" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,208,110 samples, 0.06%)</title><rect x="14.0" y="901" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="17.01" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (14,304,557 samples, 0.03%)</title><rect x="806.1" y="277" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="809.06" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="181" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1112.33" y="191.5" ></text>
</g>
<g >
<title>CNF::CNF (33,397,000 samples, 0.06%)</title><rect x="1143.0" y="293" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1145.98" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (66,744,224 samples, 0.12%)</title><rect x="1104.5" y="261" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1107.52" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (56,815,639 samples, 0.10%)</title><rect x="105.5" y="341" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="108.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (23,873,632 samples, 0.04%)</title><rect x="1142.2" y="261" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1145.20" y="271.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,390,409 samples, 0.02%)</title><rect x="1173.8" y="149" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1176.76" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (114,102,423 samples, 0.20%)</title><rect x="888.8" y="325" width="2.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="891.81" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1181.27" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="213" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1041.41" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (61,594,893 samples, 0.11%)</title><rect x="691.8" y="389" width="1.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="694.75" y="399.5" ></text>
</g>
<g >
<title>_int_free (18,950,208 samples, 0.03%)</title><rect x="1003.0" y="165" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1006.01" y="175.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,415,861 samples, 0.02%)</title><rect x="1090.0" y="213" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1093.03" y="223.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,173,008,737 samples, 94.77%)</title><rect x="70.8" y="581" width="1118.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.83" y="591.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (84,764,346 samples, 0.15%)</title><rect x="1153.9" y="165" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1156.87" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (99,576,677 samples, 0.17%)</title><rect x="850.4" y="197" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="853.42" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="213" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1065.07" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (19,099,602 samples, 0.03%)</title><rect x="1166.0" y="213" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1169.02" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (23,620,824 samples, 0.04%)</title><rect x="339.2" y="437" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="342.21" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (19,089,052 samples, 0.03%)</title><rect x="449.1" y="293" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="452.06" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="213" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1151.47" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,301,876 samples, 0.03%)</title><rect x="104.2" y="421" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="107.19" y="431.5" ></text>
</g>
<g >
<title>_int_free (19,070,034 samples, 0.03%)</title><rect x="500.0" y="245" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="502.95" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (161,796,521 samples, 0.28%)</title><rect x="630.4" y="261" width="3.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="633.39" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,555,615 samples, 0.02%)</title><rect x="449.7" y="325" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="452.74" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (331,972,651 samples, 0.58%)</title><rect x="1135.0" y="277" width="6.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1138.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (19,075,874 samples, 0.03%)</title><rect x="1161.1" y="213" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.12" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (128,170,056 samples, 0.22%)</title><rect x="198.6" y="437" width="2.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="201.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,359,522 samples, 0.02%)</title><rect x="1186.1" y="453" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1189.13" y="463.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (85,222,711 samples, 0.15%)</title><rect x="454.8" y="373" width="1.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="457.85" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,302,604 samples, 0.03%)</title><rect x="107.8" y="357" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="110.81" y="367.5" ></text>
</g>
<g >
<title>CNF::CNF (351,344,422 samples, 0.61%)</title><rect x="275.4" y="453" width="7.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="278.43" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="101" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1174.99" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (33,258,837 samples, 0.06%)</title><rect x="72.7" y="501" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="75.69" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,518,762 samples, 0.02%)</title><rect x="698.2" y="341" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="701.22" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (146,924,473 samples, 0.26%)</title><rect x="275.4" y="325" width="3.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="278.43" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (9,569,589 samples, 0.02%)</title><rect x="894.0" y="197" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="897.00" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (669,752,312 samples, 1.17%)</title><rect x="478.3" y="325" width="13.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="481.27" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,438,253 samples, 0.02%)</title><rect x="138.8" y="357" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="141.75" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="293" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="636.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,071,420 samples, 0.02%)</title><rect x="1129.0" y="229" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1131.99" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (23,842,253 samples, 0.04%)</title><rect x="378.5" y="421" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="381.46" y="431.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (2,141,611,937 samples, 3.75%)</title><rect x="201.2" y="469" width="44.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="204.21" y="479.5" >CNF:..</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,067,786 samples, 0.03%)</title><rect x="1188.6" y="469" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.56" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,542,194 samples, 0.02%)</title><rect x="345.4" y="309" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="348.41" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (90,061,072 samples, 0.16%)</title><rect x="933.4" y="325" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="936.43" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (9,458,364 samples, 0.02%)</title><rect x="70.8" y="485" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="73.83" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,542,194 samples, 0.02%)</title><rect x="345.4" y="293" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="348.41" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,551,089 samples, 0.02%)</title><rect x="177.5" y="421" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="180.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="885" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="895.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (95,076,896 samples, 0.17%)</title><rect x="178.9" y="469" width="2.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="181.90" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (28,609,525 samples, 0.05%)</title><rect x="967.0" y="277" width="0.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="969.96" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (23,854,118 samples, 0.04%)</title><rect x="797.7" y="213" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="800.70" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (109,678,713 samples, 0.19%)</title><rect x="746.0" y="229" width="2.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="749.04" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (14,378,889 samples, 0.03%)</title><rect x="1156.2" y="197" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1159.21" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,513,975 samples, 0.02%)</title><rect x="38.9" y="1029" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="41.89" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (89,975,169 samples, 0.16%)</title><rect x="1006.1" y="293" width="1.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1009.14" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (33,396,107 samples, 0.06%)</title><rect x="396.0" y="373" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="398.98" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (166,617,044 samples, 0.29%)</title><rect x="617.3" y="309" width="3.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="620.27" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,407,527,195 samples, 2.46%)</title><rect x="902.6" y="357" width="29.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="905.61" y="367.5" >CN..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,987,469 samples, 0.11%)</title><rect x="246.2" y="405" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="249.21" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (133,497,523 samples, 0.23%)</title><rect x="746.0" y="293" width="2.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="749.04" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (650,156,735 samples, 1.14%)</title><rect x="259.9" y="421" width="13.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="262.94" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (57,192,774 samples, 0.10%)</title><rect x="272.2" y="341" width="1.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="275.18" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,375,549 samples, 0.02%)</title><rect x="616.7" y="325" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="619.69" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,272,240 samples, 0.02%)</title><rect x="98.0" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="101.02" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate (80,630,289 samples, 0.14%)</title><rect x="931.8" y="197" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="934.77" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,518,762 samples, 0.02%)</title><rect x="698.2" y="325" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="701.22" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (33,302,576 samples, 0.06%)</title><rect x="759.9" y="325" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="762.88" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,389,315 samples, 0.06%)</title><rect x="1095.3" y="229" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.31" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,964,213 samples, 0.03%)</title><rect x="810.4" y="325" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="813.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (66,024,825 samples, 0.12%)</title><rect x="1012.1" y="293" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1015.12" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="901" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="911.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="725" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="735.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_free (23,729,019 samples, 0.04%)</title><rect x="1002.9" y="181" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1005.91" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (60,957,723 samples, 0.11%)</title><rect x="849.1" y="293" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="852.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (14,290,513 samples, 0.03%)</title><rect x="860.3" y="309" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="863.34" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="309" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1190.10" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (33,449,480 samples, 0.06%)</title><rect x="1106.3" y="293" width="0.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1109.29" y="303.5" ></text>
</g>
<g >
<title>operator new (19,041,615 samples, 0.03%)</title><rect x="87.6" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="90.63" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (38,137,386 samples, 0.07%)</title><rect x="1185.3" y="373" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1188.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (14,231,957 samples, 0.02%)</title><rect x="973.7" y="293" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="976.72" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (80,439,954 samples, 0.14%)</title><rect x="1006.3" y="245" width="1.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1009.34" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (89,997,241 samples, 0.16%)</title><rect x="806.9" y="341" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="809.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,187,601 samples, 0.02%)</title><rect x="1162.8" y="213" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1165.78" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,448,075 samples, 0.02%)</title><rect x="378.9" y="421" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="381.95" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk (33,282,950 samples, 0.06%)</title><rect x="629.5" y="229" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="632.51" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,893,465 samples, 0.04%)</title><rect x="572.4" y="309" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="575.43" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="213" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="751.41" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (313,215,682 samples, 0.55%)</title><rect x="1150.9" y="293" width="6.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1153.93" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (42,116,401 samples, 0.07%)</title><rect x="89.2" y="485" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="92.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (19,103,400 samples, 0.03%)</title><rect x="175.8" y="405" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="178.76" y="415.5" ></text>
</g>
<g >
<title>operator new (14,250,868 samples, 0.02%)</title><rect x="897.6" y="229" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="900.62" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,559,229 samples, 0.02%)</title><rect x="896.0" y="213" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="898.95" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (157,016,526 samples, 0.27%)</title><rect x="1083.7" y="293" width="3.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1086.67" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (47,681,728 samples, 0.08%)</title><rect x="25.6" y="901" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="28.58" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (57,194,179 samples, 0.10%)</title><rect x="895.3" y="341" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="898.27" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,324,225 samples, 0.03%)</title><rect x="901.6" y="293" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="904.63" y="303.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (23,844,979 samples, 0.04%)</title><rect x="1143.2" y="213" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1146.17" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (109,190,018 samples, 0.19%)</title><rect x="743.7" y="293" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="746.69" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (14,322,009 samples, 0.03%)</title><rect x="692.2" y="261" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="695.24" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="693" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="703.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (75,989,949 samples, 0.13%)</title><rect x="447.5" y="373" width="1.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="450.49" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,543,705 samples, 0.02%)</title><rect x="693.7" y="357" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="696.71" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,390,409 samples, 0.02%)</title><rect x="1173.8" y="133" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1176.76" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (104,578,772 samples, 0.18%)</title><rect x="71.2" y="533" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="74.22" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,338,181 samples, 0.03%)</title><rect x="149.4" y="421" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="152.42" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,987,469 samples, 0.11%)</title><rect x="246.2" y="437" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="249.21" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (583,360,560 samples, 1.02%)</title><rect x="347.4" y="373" width="12.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="350.37" y="383.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (204,071,723 samples, 0.36%)</title><rect x="504.1" y="373" width="4.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="507.07" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,618,233 samples, 0.11%)</title><rect x="898.6" y="325" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="901.60" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (37,775,263 samples, 0.07%)</title><rect x="104.7" y="453" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="107.68" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,401,333 samples, 0.06%)</title><rect x="344.3" y="389" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="347.32" y="399.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (2,733,587,284 samples, 4.78%)</title><rect x="282.7" y="453" width="56.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="285.68" y="463.5" >CNF::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,310,305 samples, 0.03%)</title><rect x="177.4" y="453" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="180.43" y="463.5" ></text>
</g>
<g >
<title>operator new (33,104,608 samples, 0.06%)</title><rect x="173.1" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="176.11" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (61,771,707 samples, 0.11%)</title><rect x="10.0" y="1013" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (18,977,657 samples, 0.03%)</title><rect x="966.4" y="293" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="969.38" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (33,418,410 samples, 0.06%)</title><rect x="689.2" y="341" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="692.20" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (14,302,604 samples, 0.03%)</title><rect x="107.8" y="405" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="110.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,541,148 samples, 0.02%)</title><rect x="70.4" y="533" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="73.43" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (14,082,840 samples, 0.02%)</title><rect x="1169.7" y="229" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1172.74" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (52,274,704 samples, 0.09%)</title><rect x="890.1" y="309" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="893.09" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,501,759 samples, 0.02%)</title><rect x="1141.7" y="165" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1144.71" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,347,291 samples, 0.02%)</title><rect x="743.3" y="277" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="746.30" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="437" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.99" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (42,116,401 samples, 0.07%)</title><rect x="89.2" y="501" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="92.20" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (56,925,403 samples, 0.10%)</title><rect x="1065.6" y="261" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1068.59" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (522,288,765 samples, 0.91%)</title><rect x="14.7" y="1013" width="10.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="17.70" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (109,510,534 samples, 0.19%)</title><rect x="1054.7" y="245" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1057.73" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="261" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1179.41" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="213" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1039.25" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="197" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1151.47" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="229" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="938.10" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,555,615 samples, 0.02%)</title><rect x="449.7" y="261" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="452.74" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="309" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1179.80" y="319.5" ></text>
</g>
<g >
<title>_start (54,323,729,579 samples, 95.04%)</title><rect x="68.6" y="1045" width="1121.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="71.56" y="1055.5" >_start</text>
</g>
<g >
<title>tcache_get (14,273,007 samples, 0.02%)</title><rect x="1082.8" y="149" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1085.79" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="869" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="29.56" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (19,068,635 samples, 0.03%)</title><rect x="501.1" y="405" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="504.12" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="341" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1190.10" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,082,216 samples, 0.03%)</title><rect x="1183.0" y="405" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1185.99" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (51,822,654 samples, 0.09%)</title><rect x="127.6" y="469" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="130.58" y="479.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (860,611,189 samples, 1.51%)</title><rect x="359.4" y="405" width="17.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="362.41" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (37,919,950 samples, 0.07%)</title><rect x="639.5" y="261" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="642.53" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (18,991,681 samples, 0.03%)</title><rect x="337.6" y="341" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="340.64" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (23,857,406 samples, 0.04%)</title><rect x="74.4" y="533" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="77.36" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (19,103,400 samples, 0.03%)</title><rect x="175.8" y="389" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="178.76" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (9,544,199 samples, 0.02%)</title><rect x="698.4" y="357" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="701.42" y="367.5" ></text>
</g>
<g >
<title>CNF::~CNF (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="277" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1178.23" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (76,020,154 samples, 0.13%)</title><rect x="101.8" y="421" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="104.84" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (28,782,040 samples, 0.05%)</title><rect x="68.6" y="597" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="71.56" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (9,319,969 samples, 0.02%)</title><rect x="579.0" y="373" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="582.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (52,502,012 samples, 0.09%)</title><rect x="569.5" y="325" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="572.48" y="335.5" ></text>
</g>
<g >
<title>[a.out] (9,379,374 samples, 0.02%)</title><rect x="689.0" y="341" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="692.00" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (56,950,054 samples, 0.10%)</title><rect x="179.0" y="437" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="182.00" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="197" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1170.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,544,762 samples, 0.02%)</title><rect x="508.0" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="510.99" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (52,502,012 samples, 0.09%)</title><rect x="569.5" y="309" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="572.48" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="357" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1190.10" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (133,267,700 samples, 0.23%)</title><rect x="334.8" y="405" width="2.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="337.79" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (38,152,698 samples, 0.07%)</title><rect x="128.8" y="453" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="131.75" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="245" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1181.27" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,790,344 samples, 0.04%)</title><rect x="973.5" y="309" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="976.52" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,563,181 samples, 0.02%)</title><rect x="896.2" y="261" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="899.15" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (42,564,791 samples, 0.07%)</title><rect x="449.5" y="357" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.45" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (23,844,979 samples, 0.04%)</title><rect x="1143.2" y="197" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1146.17" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (161,581,052 samples, 0.28%)</title><rect x="278.6" y="277" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="281.56" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,969,807 samples, 0.03%)</title><rect x="85.8" y="437" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="88.76" y="447.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (1,197,309,152 samples, 2.09%)</title><rect x="475.7" y="405" width="24.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="478.73" y="415.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,570,580 samples, 0.02%)</title><rect x="1087.1" y="197" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1090.11" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (14,314,307 samples, 0.03%)</title><rect x="966.1" y="293" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="969.08" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (251,432,667 samples, 0.44%)</title><rect x="133.8" y="453" width="5.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="136.76" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="245" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1179.61" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (18,959,442 samples, 0.03%)</title><rect x="929.7" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="932.70" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (19,003,308 samples, 0.03%)</title><rect x="941.2" y="293" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="944.15" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,552,400 samples, 0.02%)</title><rect x="451.9" y="373" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="454.90" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="261" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1179.80" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,557,081 samples, 0.02%)</title><rect x="624.1" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="627.14" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (127,810,511 samples, 0.22%)</title><rect x="899.9" y="357" width="2.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="902.88" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="325" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1179.80" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,516,305 samples, 0.02%)</title><rect x="449.9" y="261" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="452.94" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (19,112,752 samples, 0.03%)</title><rect x="73.4" y="549" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="76.38" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (38,168,312 samples, 0.07%)</title><rect x="893.7" y="213" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="896.70" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (38,121,993 samples, 0.07%)</title><rect x="1085.2" y="165" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1088.24" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="277" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1179.61" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,557,916 samples, 0.02%)</title><rect x="1177.7" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1180.68" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (137,635,497 samples, 0.24%)</title><rect x="1122.7" y="245" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1125.73" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,463,027 samples, 0.02%)</title><rect x="972.1" y="261" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="975.15" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,296,985 samples, 0.03%)</title><rect x="620.4" y="277" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="623.42" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="325" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1183.83" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (9,275,401 samples, 0.02%)</title><rect x="139.4" y="437" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="142.44" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,386,185 samples, 0.21%)</title><rect x="925.1" y="309" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="928.11" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,539,572 samples, 0.02%)</title><rect x="10.8" y="933" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="13.78" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,066,957 samples, 0.02%)</title><rect x="1142.8" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.79" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="293" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="146.73" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,386,185 samples, 0.21%)</title><rect x="925.1" y="293" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="928.11" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,812,774 samples, 0.04%)</title><rect x="1141.4" y="197" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1144.41" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (23,658,997 samples, 0.04%)</title><rect x="758.1" y="325" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="761.12" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (175,624,731 samples, 0.31%)</title><rect x="734.3" y="325" width="3.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="737.29" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (9,408,525 samples, 0.02%)</title><rect x="1148.3" y="245" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1151.28" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="1013" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="1023.5" ></text>
</g>
<g >
<title>main (54,323,729,579 samples, 95.04%)</title><rect x="68.6" y="997" width="1121.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="71.56" y="1007.5" >main</text>
</g>
<g >
<title>CNF::propagate_var_single_value (75,791,662 samples, 0.13%)</title><rect x="1139.5" y="197" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1142.45" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (32,975,642 samples, 0.06%)</title><rect x="103.8" y="453" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="106.80" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (19,119,366 samples, 0.03%)</title><rect x="239.3" y="341" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="242.34" y="351.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (408,177,896 samples, 0.71%)</title><rect x="260.9" y="373" width="8.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="263.91" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,555,615 samples, 0.02%)</title><rect x="449.7" y="293" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="452.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (42,805,571 samples, 0.07%)</title><rect x="897.1" y="341" width="0.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="900.13" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (42,983,229 samples, 0.08%)</title><rect x="572.0" y="405" width="0.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="575.04" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (14,284,468 samples, 0.02%)</title><rect x="1158.8" y="229" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1161.78" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (19,059,504 samples, 0.03%)</title><rect x="1186.3" y="437" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1189.32" y="447.5" ></text>
</g>
<g >
<title>[a.out] (9,537,231 samples, 0.02%)</title><rect x="746.0" y="197" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="749.04" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="229" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1043.06" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (33,363,305 samples, 0.06%)</title><rect x="1037.1" y="261" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1040.13" y="271.5" ></text>
</g>
<g >
<title>tcache_get (9,539,763 samples, 0.02%)</title><rect x="564.2" y="245" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="567.21" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (104,735,400 samples, 0.18%)</title><rect x="1054.7" y="181" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1057.73" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,240,516 samples, 0.02%)</title><rect x="627.0" y="341" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="629.97" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,087,019 samples, 0.09%)</title><rect x="193.8" y="405" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="196.77" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (23,735,227 samples, 0.04%)</title><rect x="1158.3" y="229" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1161.29" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (170,866,666 samples, 0.30%)</title><rect x="734.4" y="277" width="3.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="737.38" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,141,446,862 samples, 2.00%)</title><rect x="941.5" y="341" width="23.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="944.55" y="351.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (61,904,714 samples, 0.11%)</title><rect x="497.6" y="325" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="500.60" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (23,863,247 samples, 0.04%)</title><rect x="1149.1" y="245" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1152.06" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (180,317,550 samples, 0.32%)</title><rect x="504.1" y="309" width="3.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="507.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,535,576 samples, 0.02%)</title><rect x="972.9" y="261" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="975.93" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (42,680,331 samples, 0.07%)</title><rect x="204.8" y="389" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="207.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (147,241,164 samples, 0.26%)</title><rect x="374.1" y="389" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="377.14" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="53" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1160.88" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (19,063,729 samples, 0.03%)</title><rect x="848.4" y="357" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="851.38" y="367.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (61,165,956 samples, 0.11%)</title><rect x="900.4" y="293" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="903.37" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="389" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1186.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,474,448 samples, 0.02%)</title><rect x="642.0" y="341" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="644.97" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (14,089,429 samples, 0.02%)</title><rect x="207.8" y="405" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="210.78" y="415.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="261" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="751.41" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (56,857,507 samples, 0.10%)</title><rect x="139.8" y="421" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="142.83" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (109,190,018 samples, 0.19%)</title><rect x="743.7" y="245" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="746.69" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (28,489,320 samples, 0.05%)</title><rect x="1148.5" y="245" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1151.47" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (19,070,598 samples, 0.03%)</title><rect x="1141.0" y="197" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1144.02" y="207.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (133,497,523 samples, 0.23%)</title><rect x="746.0" y="309" width="2.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="749.04" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="165" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1178.23" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (89,943,767 samples, 0.16%)</title><rect x="240.2" y="421" width="1.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="243.23" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (9,511,913 samples, 0.02%)</title><rect x="109.0" y="437" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="111.99" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (95,392,759 samples, 0.17%)</title><rect x="1084.9" y="277" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1087.95" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (185,682,192 samples, 0.32%)</title><rect x="616.9" y="357" width="3.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="619.88" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (23,742,198 samples, 0.04%)</title><rect x="395.5" y="373" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="398.49" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="421" width="0.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1186.87" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (23,810,264 samples, 0.04%)</title><rect x="238.2" y="405" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="241.17" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (76,183,312 samples, 0.13%)</title><rect x="740.0" y="293" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="742.97" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,328,812 samples, 0.03%)</title><rect x="1129.9" y="277" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1132.87" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (19,077,168 samples, 0.03%)</title><rect x="195.5" y="437" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="198.52" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,493,819 samples, 0.02%)</title><rect x="1163.8" y="229" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1166.76" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (42,228,178 samples, 0.07%)</title><rect x="1058.0" y="245" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1060.98" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (465,176,273 samples, 0.81%)</title><rect x="988.3" y="277" width="9.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="991.31" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (37,937,198 samples, 0.07%)</title><rect x="438.9" y="373" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="441.87" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (238,041,171 samples, 0.42%)</title><rect x="492.7" y="341" width="4.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="495.68" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,222,711 samples, 0.15%)</title><rect x="454.8" y="389" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="457.85" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,534,742 samples, 0.02%)</title><rect x="244.8" y="325" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="247.84" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (9,150,023 samples, 0.02%)</title><rect x="133.9" y="437" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="136.95" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (52,363,126 samples, 0.09%)</title><rect x="171.9" y="437" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="174.93" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (131,031,597 samples, 0.23%)</title><rect x="379.1" y="373" width="2.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="382.14" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (308,453,571 samples, 0.54%)</title><rect x="1150.9" y="277" width="6.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1153.93" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (128,170,056 samples, 0.22%)</title><rect x="198.6" y="405" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="201.57" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,070,507 samples, 0.03%)</title><rect x="80.3" y="325" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="83.25" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,401,333 samples, 0.06%)</title><rect x="344.3" y="373" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="347.32" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (56,804,747 samples, 0.10%)</title><rect x="446.3" y="357" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="449.32" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (137,857,146 samples, 0.24%)</title><rect x="497.6" y="357" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="500.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (23,867,984 samples, 0.04%)</title><rect x="338.0" y="341" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="341.03" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="261" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1182.55" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,504,592 samples, 0.02%)</title><rect x="808.6" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="811.61" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,298,445 samples, 0.03%)</title><rect x="1000.6" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1003.56" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,968,766,672 samples, 3.44%)</title><rect x="396.7" y="405" width="40.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="399.67" y="415.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (52,440,936 samples, 0.09%)</title><rect x="512.7" y="309" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="515.68" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (70,567,103 samples, 0.12%)</title><rect x="1161.5" y="261" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1164.51" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (190,280,651 samples, 0.33%)</title><rect x="381.8" y="373" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="384.85" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (85,318,368 samples, 0.15%)</title><rect x="269.3" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="272.34" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1179.41" y="319.5" ></text>
</g>
<g >
<title>operator new (109,190,018 samples, 0.19%)</title><rect x="743.7" y="277" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="746.69" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (80,750,479 samples, 0.14%)</title><rect x="25.6" y="981" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="28.58" y="991.5" ></text>
</g>
<g >
<title>CNF::solve_helper (5,609,348,598 samples, 9.81%)</title><rect x="1060.6" y="341" width="115.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1063.61" y="351.5" >CNF::solve_hel..</text>
</g>
<g >
<title>std::_Rb_tree_increment (33,347,243 samples, 0.06%)</title><rect x="65.6" y="1029" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="68.62" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,283,692 samples, 0.02%)</title><rect x="180.2" y="437" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="183.17" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,196,717 samples, 0.02%)</title><rect x="1090.0" y="261" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1093.03" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (14,276,327 samples, 0.02%)</title><rect x="1180.0" y="389" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1183.04" y="399.5" ></text>
</g>
<g >
<title>_int_free (9,461,160 samples, 0.02%)</title><rect x="337.7" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="340.74" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,052,404,074 samples, 1.84%)</title><rect x="149.9" y="453" width="21.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="152.91" y="463.5" >s..</text>
</g>
<g >
<title>CNF::find_pure_literals (2,759,411,960 samples, 4.83%)</title><rect x="748.8" y="389" width="57.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="751.80" y="399.5" >CNF::f..</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (715,535,295 samples, 1.25%)</title><rect x="109.2" y="485" width="14.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="112.18" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,568,974 samples, 0.02%)</title><rect x="74.2" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.17" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="1029" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,533,301 samples, 0.02%)</title><rect x="1169.5" y="229" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1172.54" y="239.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (70,790,964 samples, 0.12%)</title><rect x="975.5" y="341" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="978.49" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (14,285,179 samples, 0.02%)</title><rect x="805.0" y="277" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="807.98" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (127,863,088 samples, 0.22%)</title><rect x="275.8" y="293" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="278.82" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="277" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1110.28" y="287.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (2,110,780,626 samples, 3.69%)</title><rect x="853.1" y="373" width="43.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="856.06" y="383.5" >CNF:..</text>
</g>
<g >
<title>CNF::parse (36,303,975 samples, 0.06%)</title><rect x="1189.2" y="981" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.25" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (47,700,153 samples, 0.08%)</title><rect x="242.2" y="357" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="245.18" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (52,117,743 samples, 0.09%)</title><rect x="244.3" y="453" width="1.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="247.35" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (75,262,251 samples, 0.13%)</title><rect x="1062.1" y="261" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.07" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (37,775,263 samples, 0.07%)</title><rect x="104.7" y="405" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="107.68" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (95,076,896 samples, 0.17%)</title><rect x="178.9" y="453" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="181.90" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,936,261 samples, 0.03%)</title><rect x="456.6" y="293" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.61" y="303.5" ></text>
</g>
<g >
<title>operator new (99,576,677 samples, 0.17%)</title><rect x="850.4" y="181" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="853.42" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,206,431 samples, 0.06%)</title><rect x="1170.5" y="181" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1173.52" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (18,676,187 samples, 0.03%)</title><rect x="1109.5" y="229" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1112.52" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (42,961,471 samples, 0.08%)</title><rect x="1086.0" y="261" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1089.03" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (42,708,719 samples, 0.07%)</title><rect x="138.1" y="437" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="141.06" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (166,334,966 samples, 0.29%)</title><rect x="278.5" y="341" width="3.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="281.46" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,543,343 samples, 0.02%)</title><rect x="451.7" y="277" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="454.71" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (14,217,260 samples, 0.02%)</title><rect x="796.2" y="325" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="799.23" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (37,775,263 samples, 0.07%)</title><rect x="104.7" y="469" width="0.8" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="107.68" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (9,458,364 samples, 0.02%)</title><rect x="70.8" y="533" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="73.83" y="543.5" ></text>
</g>
<g >
<title>CNF::solve_helper (878,386,046 samples, 1.54%)</title><rect x="1157.4" y="293" width="18.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1160.39" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,463,027 samples, 0.02%)</title><rect x="972.1" y="277" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="975.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (18,993,157 samples, 0.03%)</title><rect x="627.0" y="389" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="629.97" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,780,617 samples, 0.04%)</title><rect x="1179.4" y="341" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1182.35" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="309" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1185.30" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="245" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1179.41" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (13,976,874 samples, 0.02%)</title><rect x="449.5" y="325" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="452.45" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="229" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1039.25" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (104,615,688 samples, 0.18%)</title><rect x="696.1" y="341" width="2.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="699.06" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (251,432,667 samples, 0.44%)</title><rect x="133.8" y="469" width="5.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="136.76" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (33,190,033 samples, 0.06%)</title><rect x="1058.8" y="309" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1061.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (94,983,924 samples, 0.17%)</title><rect x="893.3" y="325" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="896.31" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (9,518,591 samples, 0.02%)</title><rect x="101.6" y="453" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="104.64" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="229" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1009.34" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (175,624,731 samples, 0.31%)</title><rect x="734.3" y="341" width="3.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="737.29" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (331,544,459 samples, 0.58%)</title><rect x="437.3" y="405" width="6.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="440.31" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,572,301 samples, 0.04%)</title><rect x="692.5" y="293" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="695.54" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,517,449 samples, 0.13%)</title><rect x="372.7" y="357" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="375.66" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (80,750,479 samples, 0.14%)</title><rect x="25.6" y="997" width="1.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="28.58" y="1007.5" ></text>
</g>
<g >
<title>__GI___libc_free (47,674,020 samples, 0.08%)</title><rect x="512.8" y="277" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="515.78" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (9,495,343 samples, 0.02%)</title><rect x="893.1" y="309" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="896.11" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="229" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1158.62" y="239.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (33,386,934 samples, 0.06%)</title><rect x="177.2" y="485" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="180.23" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (23,810,107 samples, 0.04%)</title><rect x="970.3" y="277" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="973.28" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (90,157,708 samples, 0.16%)</title><rect x="683.2" y="245" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="686.21" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="245" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="751.41" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (71,506,391 samples, 0.13%)</title><rect x="337.5" y="437" width="1.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="340.54" y="447.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (14,283,692 samples, 0.02%)</title><rect x="180.2" y="373" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="183.17" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="181" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1063.61" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="949" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="959.5" ></text>
</g>
<g >
<title>unlink_chunk (28,310,191 samples, 0.05%)</title><rect x="745.4" y="213" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="748.36" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (132,934,506 samples, 0.23%)</title><rect x="998.1" y="229" width="2.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1001.11" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.80" y="303.5" ></text>
</g>
<g >
<title>_int_free (9,160,553 samples, 0.02%)</title><rect x="89.2" y="357" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="92.20" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (128,170,056 samples, 0.22%)</title><rect x="198.6" y="373" width="2.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="201.57" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="197" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1152.55" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (14,286,894 samples, 0.02%)</title><rect x="297.4" y="405" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="300.45" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (46,785,180 samples, 0.08%)</title><rect x="1162.0" y="245" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1165.00" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (23,884,354 samples, 0.04%)</title><rect x="1110.6" y="245" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1113.59" y="255.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (57,060,311 samples, 0.10%)</title><rect x="809.2" y="309" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="812.20" y="319.5" ></text>
</g>
<g >
<title>operator new (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="149" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.47" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="181" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1147.06" y="191.5" ></text>
</g>
<g >
<title>[a.out] (9,559,417 samples, 0.02%)</title><rect x="278.6" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="281.56" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (56,804,747 samples, 0.10%)</title><rect x="446.3" y="277" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="449.32" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="101" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1160.88" y="111.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (42,886,582 samples, 0.08%)</title><rect x="573.3" y="405" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="576.32" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (782,360,606 samples, 1.37%)</title><rect x="155.5" y="437" width="16.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="158.48" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (23,867,984 samples, 0.04%)</title><rect x="338.0" y="325" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="341.03" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,339,003 samples, 0.03%)</title><rect x="1087.1" y="245" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1090.11" y="255.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (18,842,968 samples, 0.03%)</title><rect x="852.7" y="133" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="855.68" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (170,866,666 samples, 0.30%)</title><rect x="734.4" y="309" width="3.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="737.38" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,545,098 samples, 0.02%)</title><rect x="1065.6" y="197" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1068.59" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (161,581,052 samples, 0.28%)</title><rect x="278.6" y="293" width="3.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="281.56" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (80,808,828 samples, 0.14%)</title><rect x="342.7" y="357" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="345.66" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (512,420,634 samples, 0.90%)</title><rect x="903.8" y="325" width="10.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="906.79" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (13,963,814 samples, 0.02%)</title><rect x="1162.7" y="229" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1165.68" y="239.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (204,071,723 samples, 0.36%)</title><rect x="504.1" y="341" width="4.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="507.07" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (14,272,240 samples, 0.02%)</title><rect x="98.0" y="453" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="101.02" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,638,865 samples, 0.04%)</title><rect x="1088.6" y="277" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1091.57" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (61,861,681 samples, 0.11%)</title><rect x="740.3" y="277" width="1.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="743.26" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="149" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1147.06" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,563,035 samples, 0.05%)</title><rect x="1183.9" y="261" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1186.87" y="271.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (28,782,040 samples, 0.05%)</title><rect x="68.6" y="629" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="71.56" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (28,431,477 samples, 0.05%)</title><rect x="1066.9" y="277" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1069.86" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (38,163,055 samples, 0.07%)</title><rect x="1105.1" y="213" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1108.11" y="223.5" ></text>
</g>
<g >
<title>operator new (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1039.25" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (23,810,107 samples, 0.04%)</title><rect x="970.3" y="197" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="973.28" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (37,696,402 samples, 0.07%)</title><rect x="1128.1" y="261" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1131.11" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (151,579,049 samples, 0.27%)</title><rect x="141.0" y="389" width="3.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="144.00" y="399.5" ></text>
</g>
<g >
<title>operator new (9,558,387 samples, 0.02%)</title><rect x="973.5" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="976.52" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (37,945,453 samples, 0.07%)</title><rect x="563.6" y="357" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="566.62" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (37,775,263 samples, 0.07%)</title><rect x="104.7" y="421" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="107.68" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,280,135 samples, 0.02%)</title><rect x="1184.8" y="421" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.76" y="431.5" ></text>
</g>
<g >
<title>operator new (33,418,410 samples, 0.06%)</title><rect x="689.2" y="261" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="692.20" y="271.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="37" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.88" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="149" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1110.67" y="159.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (33,208,110 samples, 0.06%)</title><rect x="14.0" y="1013" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="17.01" y="1023.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (9,485,031 samples, 0.02%)</title><rect x="241.9" y="405" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="244.89" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (14,323,104 samples, 0.03%)</title><rect x="1174.8" y="213" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1177.84" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (19,045,387 samples, 0.03%)</title><rect x="138.9" y="453" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="141.95" y="463.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="245" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1043.06" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (19,069,240 samples, 0.03%)</title><rect x="444.9" y="373" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="447.94" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,520,998 samples, 0.02%)</title><rect x="501.5" y="325" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="504.52" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (38,023,483 samples, 0.07%)</title><rect x="402.9" y="373" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="405.95" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (57,060,311 samples, 0.10%)</title><rect x="809.2" y="293" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="812.20" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,557,881 samples, 0.02%)</title><rect x="693.0" y="373" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="696.02" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,347,291 samples, 0.02%)</title><rect x="743.3" y="357" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="746.30" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="197" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1179.80" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (52,087,019 samples, 0.09%)</title><rect x="193.8" y="357" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="196.77" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (19,039,287 samples, 0.03%)</title><rect x="897.5" y="277" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="900.52" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (19,089,052 samples, 0.03%)</title><rect x="449.1" y="341" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="452.06" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (9,560,581 samples, 0.02%)</title><rect x="74.0" y="549" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="76.97" y="559.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,922,263 samples, 0.03%)</title><rect x="99.3" y="485" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="102.29" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (374,790,683 samples, 0.66%)</title><rect x="512.4" y="405" width="7.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="515.40" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,518,307 samples, 0.02%)</title><rect x="805.4" y="213" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="808.37" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (33,015,149 samples, 0.06%)</title><rect x="682.3" y="341" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="685.33" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (60,957,723 samples, 0.11%)</title><rect x="849.1" y="325" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="852.07" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (13,999,214 samples, 0.02%)</title><rect x="614.6" y="277" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="617.63" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (9,523,640 samples, 0.02%)</title><rect x="149.7" y="421" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="152.71" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (345,573,451 samples, 0.60%)</title><rect x="1040.7" y="277" width="7.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1043.74" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,568,666 samples, 0.02%)</title><rect x="1105.7" y="165" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1108.70" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,520,998 samples, 0.02%)</title><rect x="501.5" y="341" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="504.52" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,164,490,503 samples, 3.79%)</title><rect x="698.8" y="389" width="44.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="701.81" y="399.5" >CNF:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,799,040 samples, 0.04%)</title><rect x="272.9" y="325" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="275.87" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (23,820,818 samples, 0.04%)</title><rect x="810.8" y="341" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="813.77" y="351.5" ></text>
</g>
<g >
<title>CNF::CNF (146,033,114 samples, 0.26%)</title><rect x="1060.6" y="325" width="3.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1063.61" y="335.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (80,808,828 samples, 0.14%)</title><rect x="342.7" y="373" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="345.66" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (23,587,192 samples, 0.04%)</title><rect x="1087.0" y="309" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1090.01" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (19,098,761 samples, 0.03%)</title><rect x="887.9" y="309" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="890.93" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (156,360,328 samples, 0.27%)</title><rect x="1010.3" y="309" width="3.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1013.25" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (113,548,758 samples, 0.20%)</title><rect x="141.4" y="325" width="2.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="144.39" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,263,424 samples, 0.08%)</title><rect x="177.9" y="453" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="180.92" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,958,455 samples, 0.21%)</title><rect x="808.8" y="357" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="811.80" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,573,655 samples, 0.02%)</title><rect x="1170.1" y="261" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1173.12" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,498,323 samples, 0.02%)</title><rect x="127.2" y="453" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="130.19" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (23,528,096 samples, 0.04%)</title><rect x="244.3" y="325" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="247.35" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (19,101,811 samples, 0.03%)</title><rect x="1034.2" y="165" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1037.20" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,534,918 samples, 0.02%)</title><rect x="1179.6" y="213" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1182.65" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (42,568,005 samples, 0.07%)</title><rect x="519.3" y="357" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="522.25" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (123,628,412 samples, 0.22%)</title><rect x="77.6" y="549" width="2.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="80.60" y="559.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,712,886 samples, 0.21%)</title><rect x="1151.1" y="213" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1154.12" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,501,759 samples, 0.02%)</title><rect x="1141.7" y="149" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1144.71" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,918,106 samples, 0.11%)</title><rect x="78.5" y="437" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="81.48" y="447.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (52,201,505 samples, 0.09%)</title><rect x="1129.8" y="309" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1132.77" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (427,448,002 samples, 0.75%)</title><rect x="251.1" y="405" width="8.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="254.12" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,551,089 samples, 0.02%)</title><rect x="177.5" y="437" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="180.53" y="447.5" ></text>
</g>
<g >
<title>all (57,160,676,327 samples, 100%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (23,858,845 samples, 0.04%)</title><rect x="451.1" y="389" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="454.12" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="85" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1146.17" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (52,226,422 samples, 0.09%)</title><rect x="967.6" y="293" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="970.55" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (57,192,128 samples, 0.10%)</title><rect x="243.2" y="405" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="246.17" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (47,432,730 samples, 0.08%)</title><rect x="1046.9" y="245" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.90" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (33,315,467 samples, 0.06%)</title><rect x="1127.4" y="261" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1130.42" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (71,167,626 samples, 0.12%)</title><rect x="499.0" y="309" width="1.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="501.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (166,193,429 samples, 0.29%)</title><rect x="168.2" y="421" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="171.20" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (246,628,295 samples, 0.43%)</title><rect x="1096.9" y="261" width="5.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1099.88" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (19,039,287 samples, 0.03%)</title><rect x="897.5" y="309" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="900.52" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,539,864 samples, 0.02%)</title><rect x="1184.9" y="437" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1187.95" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (80,705,981 samples, 0.14%)</title><rect x="714.5" y="309" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="717.52" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (744,005,959 samples, 1.30%)</title><rect x="181.0" y="485" width="15.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="184.05" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="181" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1129.74" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (103,188,329 samples, 0.18%)</title><rect x="327.4" y="405" width="2.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="330.37" y="415.5" ></text>
</g>
<g >
<title>operator new (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="213" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1063.61" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,510,790 samples, 0.02%)</title><rect x="1186.8" y="437" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1189.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (61,653,843 samples, 0.11%)</title><rect x="449.1" y="405" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="452.06" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="277" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1008.07" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,488,560 samples, 0.02%)</title><rect x="124.8" y="389" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="127.84" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (66,553,383 samples, 0.12%)</title><rect x="147.1" y="421" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="150.06" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (156,839,772 samples, 0.27%)</title><rect x="134.1" y="373" width="3.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="137.14" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (18,517,444 samples, 0.03%)</title><rect x="643.2" y="341" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="646.25" y="351.5" ></text>
</g>
<g >
<title>CNF::~CNF (19,067,786 samples, 0.03%)</title><rect x="1188.6" y="501" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.56" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (47,595,362 samples, 0.08%)</title><rect x="1057.0" y="229" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.00" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (90,529,934 samples, 0.16%)</title><rect x="440.5" y="325" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="443.53" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (9,563,222 samples, 0.02%)</title><rect x="125.7" y="437" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="128.72" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (94,848,154 samples, 0.17%)</title><rect x="198.7" y="309" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="201.67" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (14,296,608 samples, 0.03%)</title><rect x="111.7" y="453" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="114.74" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (171,232,349 samples, 0.30%)</title><rect x="630.2" y="277" width="3.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="633.20" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (19,103,400 samples, 0.03%)</title><rect x="175.8" y="357" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.76" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (9,529,373 samples, 0.02%)</title><rect x="1173.9" y="181" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1176.95" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (95,149,720 samples, 0.17%)</title><rect x="502.1" y="277" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="505.11" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,232,362 samples, 0.02%)</title><rect x="84.8" y="469" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="87.78" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (71,256,921 samples, 0.12%)</title><rect x="204.2" y="405" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="207.24" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="101" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1178.23" y="111.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="901" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="29.56" y="911.5" ></text>
</g>
<g >
<title>_int_free (9,525,473 samples, 0.02%)</title><rect x="1182.4" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1185.40" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (80,642,734 samples, 0.14%)</title><rect x="474.1" y="341" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="477.06" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (23,495,572 samples, 0.04%)</title><rect x="938.7" y="245" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="941.70" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (90,507,035 samples, 0.16%)</title><rect x="247.6" y="357" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="250.59" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (161,796,521 samples, 0.28%)</title><rect x="630.4" y="245" width="3.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="633.39" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (28,541,844 samples, 0.05%)</title><rect x="684.0" y="229" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="687.00" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (37,968,153 samples, 0.07%)</title><rect x="939.2" y="277" width="0.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="942.19" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (104,615,688 samples, 0.18%)</title><rect x="696.1" y="293" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="699.06" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (764,633,706 samples, 1.34%)</title><rect x="459.9" y="373" width="15.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="462.94" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (131,031,597 samples, 0.23%)</title><rect x="379.1" y="389" width="2.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="382.14" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,324,225 samples, 0.03%)</title><rect x="901.6" y="325" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="904.63" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (28,576,590 samples, 0.05%)</title><rect x="204.2" y="373" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="207.24" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (57,238,906 samples, 0.10%)</title><rect x="86.2" y="421" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="89.15" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="229" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="855.48" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (70,862,260 samples, 0.12%)</title><rect x="564.4" y="357" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="567.41" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,544,232 samples, 0.02%)</title><rect x="1163.0" y="197" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1165.97" y="207.5" ></text>
</g>
<g >
<title>operator new (9,560,234 samples, 0.02%)</title><rect x="339.5" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.50" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (47,719,822 samples, 0.08%)</title><rect x="803.5" y="325" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="806.50" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (33,418,129 samples, 0.06%)</title><rect x="1003.5" y="309" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1006.50" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (33,390,407 samples, 0.06%)</title><rect x="108.5" y="453" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="111.50" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (151,579,049 samples, 0.27%)</title><rect x="141.0" y="453" width="3.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="144.00" y="463.5" ></text>
</g>
<g >
<title>_int_free (14,006,565 samples, 0.02%)</title><rect x="692.6" y="197" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="695.64" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (90,157,708 samples, 0.16%)</title><rect x="683.2" y="341" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="686.21" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (75,791,662 samples, 0.13%)</title><rect x="1139.5" y="165" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1142.45" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (142,347,106 samples, 0.25%)</title><rect x="101.5" y="485" width="3.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="104.54" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="197" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1158.62" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (19,070,507 samples, 0.03%)</title><rect x="80.3" y="405" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="83.25" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (47,443,860 samples, 0.08%)</title><rect x="10.0" y="965" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (146,586,253 samples, 0.26%)</title><rect x="566.0" y="373" width="3.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="568.97" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (51,822,654 samples, 0.09%)</title><rect x="127.6" y="485" width="1.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="130.58" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (28,562,243 samples, 0.05%)</title><rect x="345.0" y="405" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="348.01" y="415.5" ></text>
</g>
<g >
<title>_int_free (14,293,265 samples, 0.03%)</title><rect x="1184.1" y="245" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.07" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,542,463 samples, 0.02%)</title><rect x="180.7" y="405" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="183.66" y="415.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="853" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="29.56" y="863.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (546,982,801 samples, 0.96%)</title><rect x="361.4" y="373" width="11.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="364.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="869" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="879.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,256,783 samples, 0.02%)</title><rect x="1173.5" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1176.47" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="245" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1088.14" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,214,324 samples, 0.02%)</title><rect x="1087.9" y="261" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1090.89" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (246,628,295 samples, 0.43%)</title><rect x="1096.9" y="197" width="5.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1099.88" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (9,529,373 samples, 0.02%)</title><rect x="1173.9" y="133" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1176.95" y="143.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="261" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1110.67" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (42,886,582 samples, 0.08%)</title><rect x="573.3" y="389" width="0.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="576.32" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (33,418,410 samples, 0.06%)</title><rect x="689.2" y="325" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="692.20" y="335.5" ></text>
</g>
<g >
<title>_int_free (9,568,666 samples, 0.02%)</title><rect x="1105.7" y="133" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1108.70" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (56,925,426 samples, 0.10%)</title><rect x="845.1" y="277" width="1.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="848.05" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.88" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="917" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="927.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (66,777,292 samples, 0.12%)</title><rect x="86.2" y="501" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="89.15" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="277" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.41" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,799,040 samples, 0.04%)</title><rect x="272.9" y="309" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="275.87" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,386,185 samples, 0.21%)</title><rect x="925.1" y="277" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="928.11" y="287.5" ></text>
</g>
<g >
<title>operator new (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="197" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1036.61" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (33,322,098 samples, 0.06%)</title><rect x="125.2" y="453" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="128.23" y="463.5" ></text>
</g>
<g >
<title>operator new (56,804,747 samples, 0.10%)</title><rect x="446.3" y="293" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="449.32" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,557,081 samples, 0.02%)</title><rect x="624.1" y="277" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="627.14" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (578,509,968 samples, 1.01%)</title><rect x="560.1" y="405" width="11.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="563.10" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (61,918,106 samples, 0.11%)</title><rect x="78.5" y="421" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="81.48" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (42,955,495 samples, 0.08%)</title><rect x="893.6" y="309" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="896.60" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (650,156,735 samples, 1.14%)</title><rect x="259.9" y="437" width="13.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="262.94" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (75,579,947 samples, 0.13%)</title><rect x="965.2" y="309" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="968.21" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="965" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (66,626,062 samples, 0.12%)</title><rect x="1031.9" y="293" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1034.94" y="303.5" ></text>
</g>
<g >
<title>checked_request2size (9,564,434 samples, 0.02%)</title><rect x="570.3" y="245" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="573.27" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="341" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="146.73" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="53" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1160.59" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (19,119,366 samples, 0.03%)</title><rect x="239.3" y="405" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="242.34" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (61,699,874 samples, 0.11%)</title><rect x="1010.3" y="261" width="1.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1013.35" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="325" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="146.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (91,707,591 samples, 0.16%)</title><rect x="858.7" y="325" width="1.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="861.74" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,256,783 samples, 0.02%)</title><rect x="1173.5" y="181" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1176.47" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="245" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="510.79" y="255.5" ></text>
</g>
<g >
<title>_int_free (19,104,836 samples, 0.03%)</title><rect x="147.2" y="325" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="150.16" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,404,720 samples, 0.02%)</title><rect x="804.6" y="277" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="807.59" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (151,967,535 samples, 0.27%)</title><rect x="938.4" y="341" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="941.41" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (61,771,707 samples, 0.11%)</title><rect x="10.0" y="981" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (194,836,661 samples, 0.34%)</title><rect x="204.0" y="437" width="4.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="207.05" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (28,198,749 samples, 0.05%)</title><rect x="88.0" y="357" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="91.02" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk (9,130,043 samples, 0.02%)</title><rect x="1061.9" y="149" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1064.88" y="159.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (42,319,935 samples, 0.07%)</title><rect x="30.5" y="1029" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="33.49" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="405" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1191.66" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (147,210,808 samples, 0.26%)</title><rect x="998.1" y="245" width="3.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1001.11" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (19,016,387 samples, 0.03%)</title><rect x="107.8" y="437" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="110.81" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (42,716,492 samples, 0.07%)</title><rect x="335.1" y="325" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="338.08" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (152,320,059 samples, 0.27%)</title><rect x="617.3" y="277" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="620.27" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,347,370 samples, 0.03%)</title><rect x="1177.9" y="309" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.88" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,052,404,074 samples, 1.84%)</title><rect x="149.9" y="469" width="21.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="152.91" y="479.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="245" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1179.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (38,098,135 samples, 0.07%)</title><rect x="889.3" y="277" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="892.30" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (56,804,747 samples, 0.10%)</title><rect x="446.3" y="341" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="449.32" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="885" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="29.56" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,451,690 samples, 0.02%)</title><rect x="1167.7" y="165" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.68" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="357" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="109.63" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (19,090,644 samples, 0.03%)</title><rect x="242.7" y="293" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="245.68" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,348,926 samples, 0.02%)</title><rect x="99.4" y="437" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="102.39" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,587,192 samples, 0.04%)</title><rect x="1087.0" y="261" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1090.01" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="165" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="751.41" y="175.5" ></text>
</g>
<g >
<title>unlink_chunk (14,279,239 samples, 0.02%)</title><rect x="43.2" y="1029" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="46.19" y="1039.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="645" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="655.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="373" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="109.63" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="245" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1110.67" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,217,385 samples, 0.02%)</title><rect x="691.9" y="245" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="694.95" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (128,170,056 samples, 0.22%)</title><rect x="198.6" y="421" width="2.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="201.57" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (38,152,698 samples, 0.07%)</title><rect x="128.8" y="389" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="131.75" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,289,524 samples, 0.02%)</title><rect x="207.5" y="405" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="210.48" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (42,716,492 samples, 0.07%)</title><rect x="335.1" y="389" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="338.08" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (156,599,032 samples, 0.27%)</title><rect x="130.5" y="453" width="3.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="133.52" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (38,019,695 samples, 0.07%)</title><rect x="1158.3" y="245" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1161.29" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="821" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="29.56" y="831.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="917" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="927.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (90,104,883 samples, 0.16%)</title><rect x="452.8" y="421" width="1.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="455.79" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (147,492,842 samples, 0.26%)</title><rect x="683.0" y="357" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="686.01" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="133" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1178.23" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (131,031,597 samples, 0.23%)</title><rect x="379.1" y="405" width="2.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="382.14" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (23,239,148 samples, 0.04%)</title><rect x="969.5" y="293" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="972.51" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (408,177,896 samples, 0.71%)</title><rect x="260.9" y="389" width="8.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="263.91" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (23,528,096 samples, 0.04%)</title><rect x="244.3" y="373" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="247.35" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (37,973,357 samples, 0.07%)</title><rect x="107.7" y="453" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="110.71" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (19,068,018 samples, 0.03%)</title><rect x="180.5" y="437" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="183.47" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (131,031,597 samples, 0.23%)</title><rect x="379.1" y="341" width="2.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="382.14" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (104,615,688 samples, 0.18%)</title><rect x="696.1" y="357" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="699.06" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (23,842,253 samples, 0.04%)</title><rect x="378.5" y="405" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="381.46" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (104,652,474 samples, 0.18%)</title><rect x="196.4" y="437" width="2.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="199.41" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (19,103,400 samples, 0.03%)</title><rect x="175.8" y="373" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="178.76" y="383.5" ></text>
</g>
<g >
<title>CNF::CNF (170,691,361 samples, 0.30%)</title><rect x="931.8" y="357" width="3.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="934.77" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk (14,249,278 samples, 0.02%)</title><rect x="503.8" y="245" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="506.78" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (70,770,863 samples, 0.12%)</title><rect x="1060.6" y="261" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1063.61" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (109,634,352 samples, 0.19%)</title><rect x="271.1" y="389" width="2.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="274.10" y="399.5" ></text>
</g>
<g >
<title>_int_free (19,068,832 samples, 0.03%)</title><rect x="1180.9" y="213" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1183.92" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,348,926 samples, 0.02%)</title><rect x="99.4" y="469" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="102.39" y="479.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,551,908 samples, 0.02%)</title><rect x="103.6" y="405" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="106.60" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (23,888,400 samples, 0.04%)</title><rect x="147.1" y="357" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="150.06" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (133,497,523 samples, 0.23%)</title><rect x="746.0" y="325" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="749.04" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (132,934,506 samples, 0.23%)</title><rect x="998.1" y="197" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1001.11" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (9,319,969 samples, 0.02%)</title><rect x="579.0" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="582.01" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="165" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1009.34" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (9,525,555 samples, 0.02%)</title><rect x="180.5" y="389" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="183.47" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (18,828,578 samples, 0.03%)</title><rect x="12.9" y="981" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="15.93" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (9,504,891 samples, 0.02%)</title><rect x="76.2" y="501" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.23" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (128,055,895 samples, 0.22%)</title><rect x="627.6" y="373" width="2.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="630.56" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (38,152,698 samples, 0.07%)</title><rect x="128.8" y="405" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="131.75" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (23,893,532 samples, 0.04%)</title><rect x="97.0" y="469" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="100.03" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (42,628,104 samples, 0.07%)</title><rect x="1125.6" y="261" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1128.57" y="271.5" ></text>
</g>
<g >
<title>_int_free (56,800,897 samples, 0.10%)</title><rect x="31.4" y="1029" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="34.36" y="1039.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (9,493,819 samples, 0.02%)</title><rect x="1163.8" y="261" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1166.76" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (38,163,055 samples, 0.07%)</title><rect x="1105.1" y="197" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1108.11" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,518,307 samples, 0.02%)</title><rect x="805.4" y="197" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="808.37" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (664,724,033 samples, 1.16%)</title><rect x="826.9" y="325" width="13.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="829.92" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (9,256,783 samples, 0.02%)</title><rect x="1173.5" y="213" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1176.47" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="149" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1065.07" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (123,743,047 samples, 0.22%)</title><rect x="174.4" y="453" width="2.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="177.38" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="277" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1182.55" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="373" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1185.30" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,548,654 samples, 0.02%)</title><rect x="1110.0" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1113.01" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (9,134,150 samples, 0.02%)</title><rect x="1168.1" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1171.07" y="175.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (61,900,059 samples, 0.11%)</title><rect x="74.4" y="549" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="77.36" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (28,259,544 samples, 0.05%)</title><rect x="1034.8" y="277" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1037.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (9,538,386 samples, 0.02%)</title><rect x="87.3" y="469" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="90.34" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (38,039,113 samples, 0.07%)</title><rect x="765.3" y="325" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="768.35" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,633,463 samples, 0.05%)</title><rect x="1157.5" y="229" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1160.49" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (38,137,386 samples, 0.07%)</title><rect x="1185.3" y="341" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1188.34" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (90,157,708 samples, 0.16%)</title><rect x="683.2" y="293" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="686.21" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (57,234,637 samples, 0.10%)</title><rect x="274.2" y="437" width="1.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="277.25" y="447.5" ></text>
</g>
<g >
<title>_int_free (23,703,047 samples, 0.04%)</title><rect x="1187.2" y="277" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.20" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (137,857,146 samples, 0.24%)</title><rect x="497.6" y="373" width="2.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="500.60" y="383.5" ></text>
</g>
<g >
<title>operator new (61,959,269 samples, 0.11%)</title><rect x="797.1" y="245" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="800.11" y="255.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (19,016,766 samples, 0.03%)</title><rect x="200.7" y="229" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="203.72" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (479,220,863 samples, 0.84%)</title><rect x="129.7" y="485" width="9.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="132.74" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,386,185 samples, 0.21%)</title><rect x="925.1" y="213" width="2.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="928.11" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (99,599,062 samples, 0.17%)</title><rect x="198.6" y="325" width="2.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="201.57" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (9,324,867 samples, 0.02%)</title><rect x="1126.3" y="245" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1129.25" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (351,344,422 samples, 0.61%)</title><rect x="275.4" y="437" width="7.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="278.43" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (56,812,224 samples, 0.10%)</title><rect x="46.5" y="1029" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="49.51" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,545,317 samples, 0.02%)</title><rect x="11.1" y="965" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="14.08" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,555,094 samples, 0.02%)</title><rect x="562.3" y="341" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="565.34" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="165" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1160.59" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="261" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="203.62" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (33,059,860 samples, 0.06%)</title><rect x="194.8" y="405" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="197.84" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (19,029,177 samples, 0.03%)</title><rect x="175.4" y="421" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="178.37" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,518,762 samples, 0.02%)</title><rect x="698.2" y="357" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="701.22" y="367.5" ></text>
</g>
<g >
<title>_int_free (9,556,100 samples, 0.02%)</title><rect x="692.2" y="213" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="695.24" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (52,440,936 samples, 0.09%)</title><rect x="512.7" y="341" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="515.68" y="351.5" ></text>
</g>
<g >
<title>operator new (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="101" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1146.17" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,196,717 samples, 0.02%)</title><rect x="1090.0" y="245" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1093.03" y="255.5" ></text>
</g>
<g >
<title>operator new (71,217,033 samples, 0.12%)</title><rect x="933.6" y="165" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="936.63" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_free (85,516,015 samples, 0.15%)</title><rect x="58.0" y="1029" width="1.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="60.98" y="1039.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,265,893 samples, 0.06%)</title><rect x="74.9" y="517" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="77.86" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (147,554,635 samples, 0.26%)</title><rect x="797.1" y="341" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="800.11" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,518,307 samples, 0.02%)</title><rect x="805.4" y="229" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="808.37" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,518,307 samples, 0.02%)</title><rect x="805.4" y="261" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="808.37" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (56,925,426 samples, 0.10%)</title><rect x="845.1" y="293" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="848.05" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (85,273,715 samples, 0.15%)</title><rect x="938.4" y="309" width="1.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="941.41" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,549,002 samples, 0.07%)</title><rect x="268.5" y="325" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="271.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (19,064,220 samples, 0.03%)</title><rect x="1036.2" y="277" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1039.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (14,066,195 samples, 0.02%)</title><rect x="241.6" y="389" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="244.60" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (33,086,435 samples, 0.06%)</title><rect x="77.6" y="517" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="80.60" y="527.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="293" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="284.90" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (42,805,571 samples, 0.07%)</title><rect x="897.1" y="357" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="900.13" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (146,924,473 samples, 0.26%)</title><rect x="275.4" y="421" width="3.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="278.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,511,672 samples, 0.02%)</title><rect x="806.6" y="373" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="809.55" y="383.5" ></text>
</g>
<g >
<title>tcache_put (9,539,354 samples, 0.02%)</title><rect x="513.6" y="245" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="516.57" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,598,538 samples, 0.08%)</title><rect x="85.2" y="485" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="88.17" y="495.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="965" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="975.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (84,764,346 samples, 0.15%)</title><rect x="1153.9" y="197" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1156.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (9,546,217 samples, 0.02%)</title><rect x="1157.1" y="261" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1160.10" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,799,040 samples, 0.04%)</title><rect x="272.9" y="293" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="275.87" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (42,938,449 samples, 0.08%)</title><rect x="1107.3" y="293" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1110.28" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (14,328,812 samples, 0.03%)</title><rect x="1129.9" y="293" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1132.87" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="229" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1110.28" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,568,974 samples, 0.02%)</title><rect x="74.2" y="469" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="77.17" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (18,840,823 samples, 0.03%)</title><rect x="376.8" y="277" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="379.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (28,565,066 samples, 0.05%)</title><rect x="1004.2" y="309" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1007.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,547,053 samples, 0.02%)</title><rect x="1150.1" y="229" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1153.14" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (118,547,229 samples, 0.21%)</title><rect x="513.8" y="341" width="2.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="516.77" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (56,804,747 samples, 0.10%)</title><rect x="446.3" y="373" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="449.32" y="383.5" ></text>
</g>
<g >
<title>operator new (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="181" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1085.60" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (279,646,121 samples, 0.49%)</title><rect x="560.1" y="389" width="5.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="563.10" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (76,180,619 samples, 0.13%)</title><rect x="800.2" y="341" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="803.16" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (89,975,169 samples, 0.16%)</title><rect x="1006.1" y="277" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1009.14" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (42,846,254 samples, 0.07%)</title><rect x="688.0" y="341" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="691.02" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (104,356,637 samples, 0.18%)</title><rect x="850.3" y="261" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="853.33" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (28,606,879 samples, 0.05%)</title><rect x="457.0" y="389" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="460.00" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (175,722,576 samples, 0.31%)</title><rect x="620.7" y="341" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="623.71" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,622,377 samples, 0.04%)</title><rect x="138.5" y="405" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="141.46" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (260,848,299 samples, 0.46%)</title><rect x="1031.6" y="325" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1034.65" y="335.5" ></text>
</g>
<g >
<title>CNF::solve_helper (11,945,809,130 samples, 20.90%)</title><rect x="931.7" y="373" width="246.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="934.67" y="383.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="405" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1190.99" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,485,924 samples, 0.02%)</title><rect x="1128.7" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1131.69" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (784,380,733 samples, 1.37%)</title><rect x="700.0" y="357" width="16.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="702.99" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (23,867,984 samples, 0.04%)</title><rect x="338.0" y="293" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="341.03" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,495,572 samples, 0.04%)</title><rect x="938.7" y="213" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="941.70" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="229" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="387.90" y="239.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33,385,126 samples, 0.06%)</title><rect x="633.7" y="245" width="0.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="636.74" y="255.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (32,946,087 samples, 0.06%)</title><rect x="1039.4" y="277" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1042.38" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="197" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1129.74" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (42,433,813 samples, 0.07%)</title><rect x="1002.5" y="245" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1005.53" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,194,183 samples, 0.07%)</title><rect x="338.0" y="357" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="341.03" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (14,310,168 samples, 0.03%)</title><rect x="1158.5" y="213" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1161.49" y="223.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (71,517,449 samples, 0.13%)</title><rect x="372.7" y="341" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="375.66" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,275,066 samples, 0.02%)</title><rect x="27.5" y="933" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="30.54" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,160,553 samples, 0.02%)</title><rect x="89.2" y="421" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="92.20" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (13,976,874 samples, 0.02%)</title><rect x="449.5" y="293" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="452.45" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (213,939,282 samples, 0.37%)</title><rect x="630.2" y="373" width="4.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="633.20" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="261" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="855.48" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (109,678,713 samples, 0.19%)</title><rect x="746.0" y="213" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="749.04" y="223.5" ></text>
</g>
<g >
<title>_int_free (19,019,452 samples, 0.03%)</title><rect x="273.0" y="277" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="275.97" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,482,099 samples, 0.07%)</title><rect x="178.0" y="437" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="181.02" y="447.5" ></text>
</g>
<g >
<title>CNF::CNF (299,221,443 samples, 0.52%)</title><rect x="502.1" y="421" width="6.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="505.11" y="431.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,542,688 samples, 0.02%)</title><rect x="901.6" y="261" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="904.63" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (38,143,848 samples, 0.07%)</title><rect x="1037.0" y="325" width="0.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1040.03" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (213,939,282 samples, 0.37%)</title><rect x="630.2" y="309" width="4.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="633.20" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (38,161,335 samples, 0.07%)</title><rect x="287.1" y="357" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="290.08" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (109,190,018 samples, 0.19%)</title><rect x="743.7" y="309" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="746.69" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,576,231 samples, 0.04%)</title><rect x="376.7" y="309" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="379.69" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="149" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1178.23" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (23,810,107 samples, 0.04%)</title><rect x="970.3" y="245" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="973.28" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (109,190,018 samples, 0.19%)</title><rect x="743.7" y="261" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="746.69" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (13,918,734 samples, 0.02%)</title><rect x="1168.1" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1171.07" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="245" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1040.13" y="255.5" ></text>
</g>
<g >
<title>operator new (80,630,289 samples, 0.14%)</title><rect x="931.8" y="245" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="934.77" y="255.5" ></text>
</g>
<g >
<title>_int_free (127,985,952 samples, 0.22%)</title><rect x="59.7" y="1029" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="62.74" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="229" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1085.60" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (118,319,197 samples, 0.21%)</title><rect x="141.3" y="341" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="144.29" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,563,706 samples, 0.02%)</title><rect x="1104.2" y="149" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1107.23" y="159.5" ></text>
</g>
<g >
<title>operator new (157,026,719 samples, 0.27%)</title><rect x="630.5" y="213" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="633.49" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (61,594,893 samples, 0.11%)</title><rect x="691.8" y="357" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="694.75" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (18,881,751 samples, 0.03%)</title><rect x="1036.6" y="277" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1039.64" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,308,780 samples, 0.03%)</title><rect x="207.2" y="389" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="210.19" y="399.5" ></text>
</g>
<g >
<title>CNF::solve_helper (50,802,013,760 samples, 88.88%)</title><rect x="139.8" y="501" width="1048.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.83" y="511.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (19,089,052 samples, 0.03%)</title><rect x="449.1" y="309" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="452.06" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,086,435 samples, 0.06%)</title><rect x="77.6" y="485" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="80.60" y="495.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (65,983,794 samples, 0.12%)</title><rect x="1089.1" y="309" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1092.06" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (422,135,073 samples, 0.74%)</title><rect x="977.9" y="277" width="8.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="980.93" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,812,774 samples, 0.04%)</title><rect x="1141.4" y="213" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1144.41" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,622,377 samples, 0.04%)</title><rect x="138.5" y="389" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="141.46" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,557,916 samples, 0.02%)</title><rect x="1177.7" y="277" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1180.68" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,297,415 samples, 0.03%)</title><rect x="1156.8" y="117" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1159.80" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_free (38,077,433 samples, 0.07%)</title><rect x="391.2" y="293" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="394.16" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="133" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1152.55" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,546,832 samples, 0.02%)</title><rect x="1130.0" y="261" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1132.97" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (66,236,057 samples, 0.12%)</title><rect x="938.6" y="293" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="941.61" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (52,502,012 samples, 0.09%)</title><rect x="569.5" y="293" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="572.48" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="181" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1065.07" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,808,574 samples, 0.04%)</title><rect x="902.0" y="277" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="905.02" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="277" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1110.67" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (104,356,637 samples, 0.18%)</title><rect x="850.3" y="245" width="2.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="853.33" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (57,015,191 samples, 0.10%)</title><rect x="1033.6" y="229" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1036.61" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (28,544,779 samples, 0.05%)</title><rect x="1038.0" y="325" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1041.01" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="405" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="91.61" y="415.5" ></text>
</g>
<g >
<title>CNF::solve_helper (19,073,675 samples, 0.03%)</title><rect x="1174.7" y="229" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1177.74" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,568,974 samples, 0.02%)</title><rect x="74.2" y="485" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="77.17" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="373" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="91.61" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,397,485 samples, 0.02%)</title><rect x="1176.6" y="293" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1179.61" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (23,780,617 samples, 0.04%)</title><rect x="1179.4" y="373" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1182.35" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,479,184 samples, 0.04%)</title><rect x="1058.4" y="165" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1061.36" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="309" width="1.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1008.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,537,131 samples, 0.02%)</title><rect x="572.2" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="575.24" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (28,284,436 samples, 0.05%)</title><rect x="238.7" y="405" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="241.66" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,551,598 samples, 0.02%)</title><rect x="1174.8" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1177.84" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (28,122,438 samples, 0.05%)</title><rect x="568.4" y="357" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="571.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (61,900,791 samples, 0.11%)</title><rect x="377.2" y="421" width="1.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="380.18" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (19,122,410 samples, 0.03%)</title><rect x="896.0" y="277" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="898.95" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (463,809,644 samples, 0.81%)</title><rect x="915.5" y="293" width="9.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="918.54" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk (9,453,130 samples, 0.02%)</title><rect x="198.4" y="293" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="201.37" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (47,681,728 samples, 0.08%)</title><rect x="25.6" y="853" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="28.58" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (47,457,521 samples, 0.08%)</title><rect x="639.3" y="277" width="1.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="642.33" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="181" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1179.41" y="191.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,535,575 samples, 0.02%)</title><rect x="578.8" y="325" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="581.81" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (46,899,964 samples, 0.08%)</title><rect x="186.0" y="389" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="189.03" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (99,749,830 samples, 0.17%)</title><rect x="287.1" y="389" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="290.08" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (18,794,730 samples, 0.03%)</title><rect x="692.5" y="229" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="695.54" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="837" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="847.5" >CNF::solve_helper</text>
</g>
<g >
<title>operator new (56,815,639 samples, 0.10%)</title><rect x="105.5" y="309" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="108.46" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (28,546,090 samples, 0.05%)</title><rect x="973.4" y="325" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="976.42" y="335.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="133" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1174.99" y="143.5" ></text>
</g>
<g >
<title>_int_free (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="325" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.99" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1191.66" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (70,731,197 samples, 0.12%)</title><rect x="855.5" y="277" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="858.52" y="287.5" ></text>
</g>
<g >
<title>operator new (37,945,453 samples, 0.07%)</title><rect x="563.6" y="277" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="566.62" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (14,285,179 samples, 0.02%)</title><rect x="805.0" y="245" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="807.98" y="255.5" ></text>
</g>
<g >
<title>[[heap]] (1,622,075,020 samples, 2.84%)</title><rect x="10.0" y="1045" width="33.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >[[..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (19,041,615 samples, 0.03%)</title><rect x="87.6" y="453" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="90.63" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (132,613,504 samples, 0.23%)</title><rect x="290.0" y="405" width="2.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="293.01" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,432,959 samples, 0.02%)</title><rect x="1153.4" y="197" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1156.38" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="261" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1183.83" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="325" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="91.61" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (37,986,708 samples, 0.07%)</title><rect x="1187.0" y="405" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.01" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (85,318,368 samples, 0.15%)</title><rect x="269.3" y="357" width="1.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="272.34" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (99,058,120 samples, 0.17%)</title><rect x="1109.3" y="277" width="2.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1112.33" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (18,744,057 samples, 0.03%)</title><rect x="195.1" y="389" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="198.14" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (170,866,666 samples, 0.30%)</title><rect x="734.4" y="245" width="3.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="737.38" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="341" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1186.87" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (19,070,507 samples, 0.03%)</title><rect x="80.3" y="421" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="83.25" y="431.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,854,576 samples, 0.04%)</title><rect x="80.3" y="485" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="83.25" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (199,611,810 samples, 0.35%)</title><rect x="240.2" y="437" width="4.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="243.23" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (9,421,479 samples, 0.02%)</title><rect x="559.9" y="357" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="562.90" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (90,529,934 samples, 0.16%)</title><rect x="440.5" y="357" width="1.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="443.53" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate (121,516,528 samples, 0.21%)</title><rect x="379.3" y="277" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="382.34" y="287.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (9,564,573 samples, 0.02%)</title><rect x="127.4" y="501" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="130.39" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (47,732,605 samples, 0.08%)</title><rect x="451.1" y="405" width="1.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="454.12" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19,041,615 samples, 0.03%)</title><rect x="87.6" y="389" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="90.63" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (19,081,556 samples, 0.03%)</title><rect x="83.8" y="501" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="86.80" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (242,803,650 samples, 0.42%)</title><rect x="492.6" y="357" width="5.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="495.59" y="367.5" ></text>
</g>
<g >
<title>operator new (42,716,492 samples, 0.07%)</title><rect x="335.1" y="309" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="338.08" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,401,333 samples, 0.06%)</title><rect x="344.3" y="405" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="347.32" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (89,997,241 samples, 0.16%)</title><rect x="806.9" y="325" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="809.94" y="335.5" ></text>
</g>
<g >
<title>_int_free (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="309" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1191.66" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (14,310,020 samples, 0.03%)</title><rect x="345.3" y="357" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="348.31" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (85,280,637 samples, 0.15%)</title><rect x="933.5" y="261" width="1.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="936.53" y="271.5" ></text>
</g>
<g >
<title>_int_free (19,077,045 samples, 0.03%)</title><rect x="1178.4" y="181" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1181.37" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,428,886 samples, 0.06%)</title><rect x="137.4" y="421" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.37" y="431.5" ></text>
</g>
<g >
<title>_int_free (9,524,594 samples, 0.02%)</title><rect x="47.7" y="1029" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="50.69" y="1039.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (42,716,492 samples, 0.07%)</title><rect x="335.1" y="293" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="338.08" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,499,335 samples, 0.02%)</title><rect x="976.5" y="229" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="979.46" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (23,873,632 samples, 0.04%)</title><rect x="1142.2" y="277" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1145.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (95,620,167 samples, 0.17%)</title><rect x="392.0" y="357" width="2.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="395.04" y="367.5" ></text>
</g>
<g >
<title>CNF::CNF (108,914,153 samples, 0.19%)</title><rect x="104.7" y="501" width="2.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="107.68" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (28,630,240 samples, 0.05%)</title><rect x="1083.1" y="261" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1086.08" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,410,603,349 samples, 2.47%)</title><rect x="208.1" y="437" width="29.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="211.07" y="447.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (14,285,179 samples, 0.02%)</title><rect x="805.0" y="261" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="807.98" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (14,304,557 samples, 0.03%)</title><rect x="806.1" y="261" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="809.06" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,544,088 samples, 0.02%)</title><rect x="79.9" y="437" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="82.86" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (89,975,169 samples, 0.16%)</title><rect x="1006.1" y="309" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1009.14" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (71,506,391 samples, 0.13%)</title><rect x="337.5" y="405" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="340.54" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (81,088,797 samples, 0.14%)</title><rect x="444.2" y="389" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="447.15" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,808,574 samples, 0.04%)</title><rect x="902.0" y="293" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="905.02" y="303.5" ></text>
</g>
<g >
<title>alloc_perturb (9,250,036 samples, 0.02%)</title><rect x="633.2" y="165" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="636.15" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="149" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1160.59" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (28,625,396 samples, 0.05%)</title><rect x="126.0" y="373" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="129.01" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (128,917,638 samples, 0.23%)</title><rect x="339.9" y="405" width="2.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="342.90" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (85,222,711 samples, 0.15%)</title><rect x="454.8" y="341" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="457.85" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (117,997,496 samples, 0.21%)</title><rect x="1159.1" y="245" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1162.08" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (213,939,282 samples, 0.37%)</title><rect x="630.2" y="357" width="4.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="633.20" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk (19,062,314 samples, 0.03%)</title><rect x="278.1" y="277" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="281.07" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (123,449,283 samples, 0.22%)</title><rect x="840.7" y="245" width="2.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="843.74" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (37,945,971 samples, 0.07%)</title><rect x="1036.2" y="293" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1039.25" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (57,149,310 samples, 0.10%)</title><rect x="175.8" y="437" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="178.76" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,568,666 samples, 0.02%)</title><rect x="1105.7" y="149" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1108.70" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,526,892 samples, 0.02%)</title><rect x="1184.6" y="437" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1187.56" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="341" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.48" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (147,102,725 samples, 0.26%)</title><rect x="130.7" y="421" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="133.72" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (37,746,033 samples, 0.07%)</title><rect x="88.0" y="485" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="91.02" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (23,777,390 samples, 0.04%)</title><rect x="806.1" y="373" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="809.06" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (57,040,472 samples, 0.10%)</title><rect x="804.5" y="373" width="1.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="807.49" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (99,576,677 samples, 0.17%)</title><rect x="850.4" y="165" width="2.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="853.42" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (42,265,364 samples, 0.07%)</title><rect x="681.5" y="341" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="684.46" y="351.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (14,305,300 samples, 0.03%)</title><rect x="385.4" y="197" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="388.39" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (14,309,925 samples, 0.03%)</title><rect x="714.2" y="309" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="717.22" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (95,092,440 samples, 0.17%)</title><rect x="374.1" y="357" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="377.14" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (156,839,772 samples, 0.27%)</title><rect x="134.1" y="421" width="3.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="137.14" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="181" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1170.87" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (151,579,049 samples, 0.27%)</title><rect x="141.0" y="421" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="144.00" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,323,104 samples, 0.03%)</title><rect x="1174.8" y="197" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1177.84" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,598,538 samples, 0.08%)</title><rect x="85.2" y="453" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="88.17" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (175,278,769 samples, 0.31%)</title><rect x="855.1" y="325" width="3.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="858.12" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (194,836,661 samples, 0.34%)</title><rect x="204.0" y="453" width="4.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="207.05" y="463.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (80,747,149 samples, 0.14%)</title><rect x="75.8" y="549" width="1.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="78.84" y="559.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,857,406 samples, 0.04%)</title><rect x="74.4" y="485" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="77.36" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (18,969,194 samples, 0.03%)</title><rect x="138.6" y="373" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="141.55" y="383.5" ></text>
</g>
<g >
<title>operator new (95,149,720 samples, 0.17%)</title><rect x="502.1" y="309" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="505.11" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (256,938,692 samples, 0.45%)</title><rect x="171.6" y="469" width="5.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="174.64" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (19,070,598 samples, 0.03%)</title><rect x="1141.0" y="213" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1144.02" y="223.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (70,790,964 samples, 0.12%)</title><rect x="975.5" y="325" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="978.49" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_Vector_base (80,630,289 samples, 0.14%)</title><rect x="931.8" y="325" width="1.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="934.77" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,844,979 samples, 0.04%)</title><rect x="1143.2" y="245" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1146.17" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (13,995,773 samples, 0.02%)</title><rect x="37.9" y="1013" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="40.92" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (95,149,720 samples, 0.17%)</title><rect x="502.1" y="341" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="505.11" y="351.5" ></text>
</g>
<g >
<title>operator new (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="149" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.55" y="159.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (75,791,662 samples, 0.13%)</title><rect x="1139.5" y="181" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1142.45" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,511,178 samples, 0.02%)</title><rect x="1180.1" y="341" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1183.14" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (19,043,089 samples, 0.03%)</title><rect x="651.4" y="341" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="654.38" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (607,011,238 samples, 1.06%)</title><rect x="812.8" y="309" width="12.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="815.82" y="319.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,258,643,564 samples, 94.92%)</title><rect x="69.2" y="629" width="1120.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.16" y="639.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (9,214,324 samples, 0.02%)</title><rect x="1087.9" y="309" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1090.89" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (588,108,935 samples, 1.03%)</title><rect x="347.3" y="405" width="12.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="350.27" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (23,461,044 samples, 0.04%)</title><rect x="1082.6" y="213" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1085.60" y="223.5" ></text>
</g>
<g >
<title>_int_free (9,404,720 samples, 0.02%)</title><rect x="804.6" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="807.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="197" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1147.06" y="207.5" ></text>
</g>
<g >
<title>CNF::solve_helper (21,179,956,381 samples, 37.05%)</title><rect x="743.5" y="405" width="437.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="746.50" y="415.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (9,513,745 samples, 0.02%)</title><rect x="75.6" y="533" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="78.64" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (171,121,657 samples, 0.30%)</title><rect x="504.2" y="277" width="3.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="507.17" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (80,834,644 samples, 0.14%)</title><rect x="502.4" y="261" width="1.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="505.40" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,544,861 samples, 0.02%)</title><rect x="643.0" y="325" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="645.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19,068,635 samples, 0.03%)</title><rect x="501.1" y="389" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="504.12" y="399.5" ></text>
</g>
<g >
<title>operator new (28,198,749 samples, 0.05%)</title><rect x="88.0" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="91.02" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (66,593,737 samples, 0.12%)</title><rect x="174.4" y="437" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="177.38" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (42,463,342 samples, 0.07%)</title><rect x="567.5" y="357" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="570.54" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (412,771,777 samples, 0.72%)</title><rect x="187.0" y="437" width="8.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="190.00" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (104,652,474 samples, 0.18%)</title><rect x="196.4" y="341" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="199.41" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="357" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1186.87" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (834,275,866 samples, 1.46%)</title><rect x="581.0" y="341" width="17.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="583.95" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (65,983,794 samples, 0.12%)</title><rect x="1089.1" y="293" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1092.06" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="245" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1129.74" y="255.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (33,428,886 samples, 0.06%)</title><rect x="137.4" y="373" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="140.37" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (204,071,723 samples, 0.36%)</title><rect x="504.1" y="357" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="507.07" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="933" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (636,206,567 samples, 1.11%)</title><rect x="826.9" y="261" width="13.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="829.92" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (56,525,871 samples, 0.10%)</title><rect x="1062.3" y="101" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1065.27" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (9,538,919 samples, 0.02%)</title><rect x="945.1" y="293" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="948.06" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (160,781,249 samples, 0.28%)</title><rect x="679.7" y="357" width="3.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="682.69" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,277,099 samples, 0.02%)</title><rect x="1038.6" y="325" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1041.60" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (18,517,444 samples, 0.03%)</title><rect x="643.2" y="325" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="646.25" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (9,478,684 samples, 0.02%)</title><rect x="395.3" y="373" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="398.29" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (38,122,031 samples, 0.07%)</title><rect x="441.3" y="261" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="444.31" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,520,521 samples, 0.02%)</title><rect x="811.1" y="309" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="814.06" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="229" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1179.80" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (9,546,153 samples, 0.02%)</title><rect x="1148.5" y="165" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1151.47" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (583,960,190 samples, 1.02%)</title><rect x="679.6" y="389" width="12.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="682.60" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="309" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="284.90" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (66,012,440 samples, 0.12%)</title><rect x="1060.7" y="165" width="1.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1063.71" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (14,304,557 samples, 0.03%)</title><rect x="806.1" y="325" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="809.06" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (14,338,789 samples, 0.03%)</title><rect x="1181.9" y="389" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1184.91" y="399.5" ></text>
</g>
<g >
<title>_int_free (13,954,442 samples, 0.02%)</title><rect x="1183.6" y="293" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1186.58" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,936,261 samples, 0.03%)</title><rect x="456.6" y="325" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="459.61" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,347,291 samples, 0.02%)</title><rect x="743.3" y="261" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="746.30" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (123,298,789 samples, 0.22%)</title><rect x="627.7" y="277" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="630.65" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (459,049,906 samples, 0.80%)</title><rect x="915.5" y="261" width="9.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="918.54" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (227,171,416 samples, 0.40%)</title><rect x="1091.3" y="261" width="4.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1094.31" y="271.5" ></text>
</g>
<g >
<title>_int_free (47,674,020 samples, 0.08%)</title><rect x="512.8" y="261" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="515.78" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="165" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1160.88" y="175.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,234,932 samples, 0.05%)</title><rect x="1039.4" y="261" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1042.38" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (85,318,368 samples, 0.15%)</title><rect x="269.3" y="309" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="272.34" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (19,102,478 samples, 0.03%)</title><rect x="895.6" y="229" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="898.56" y="239.5" ></text>
</g>
<g >
<title>unlink_chunk (19,066,909 samples, 0.03%)</title><rect x="68.2" y="1029" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="71.17" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="229" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="284.90" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (18,744,057 samples, 0.03%)</title><rect x="195.1" y="373" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="198.14" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (213,939,282 samples, 0.37%)</title><rect x="630.2" y="341" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="633.20" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (213,599,488 samples, 0.37%)</title><rect x="960.7" y="293" width="4.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="963.70" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,214,324 samples, 0.02%)</title><rect x="1087.9" y="293" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1090.89" y="303.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (246,371,048 samples, 0.43%)</title><rect x="1158.1" y="277" width="5.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1161.08" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,961,331 samples, 0.21%)</title><rect x="1102.0" y="165" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1104.97" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (47,367,278 samples, 0.08%)</title><rect x="1006.5" y="117" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1009.54" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (463,809,644 samples, 0.81%)</title><rect x="915.5" y="309" width="9.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="918.54" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (14,217,385 samples, 0.02%)</title><rect x="691.9" y="293" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="694.95" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (52,121,771 samples, 0.09%)</title><rect x="139.9" y="325" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="142.92" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="277" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1041.41" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="213" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1178.23" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (806,191,091 samples, 1.41%)</title><rect x="600.0" y="309" width="16.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="603.04" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (90,061,072 samples, 0.16%)</title><rect x="933.4" y="293" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="936.43" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="341" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="203.62" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,483,198 samples, 0.02%)</title><rect x="691.8" y="325" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="694.75" y="335.5" ></text>
</g>
<g >
<title>tcache_put (9,556,472 samples, 0.02%)</title><rect x="754.1" y="213" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="757.10" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (28,515,131 samples, 0.05%)</title><rect x="75.0" y="469" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="77.95" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,463,027 samples, 0.02%)</title><rect x="972.1" y="245" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="975.15" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23,768,482 samples, 0.04%)</title><rect x="492.1" y="325" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="495.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (47,363,790 samples, 0.08%)</title><rect x="391.1" y="341" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="394.06" y="351.5" ></text>
</g>
<g >
<title>CNF::CNF (341,995,177 samples, 0.60%)</title><rect x="627.6" y="405" width="7.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="630.56" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,415,861 samples, 0.02%)</title><rect x="1090.0" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1093.03" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (52,385,911 samples, 0.09%)</title><rect x="934.0" y="133" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="937.01" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (14,275,066 samples, 0.02%)</title><rect x="27.5" y="997" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="30.54" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (313,070,857 samples, 0.55%)</title><rect x="788.3" y="325" width="6.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="791.31" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (14,288,489 samples, 0.02%)</title><rect x="97.6" y="453" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="100.62" y="463.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="773" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="783.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,546,370 samples, 0.02%)</title><rect x="459.7" y="373" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="462.74" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (18,856,252 samples, 0.03%)</title><rect x="1128.9" y="245" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1131.89" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,558,387 samples, 0.02%)</title><rect x="973.5" y="261" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="976.52" y="271.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="885" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="895.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_malloc (9,488,560 samples, 0.02%)</title><rect x="124.8" y="341" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="127.84" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (28,625,396 samples, 0.05%)</title><rect x="126.0" y="421" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="129.01" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (61,588,495 samples, 0.11%)</title><rect x="287.9" y="373" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="290.87" y="383.5" ></text>
</g>
<g >
<title>malloc_consolidate (37,775,263 samples, 0.07%)</title><rect x="104.7" y="341" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="107.68" y="351.5" ></text>
</g>
<g >
<title>CNF::~CNF (23,780,617 samples, 0.04%)</title><rect x="1179.4" y="389" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1182.35" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (95,149,720 samples, 0.17%)</title><rect x="502.1" y="293" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="505.11" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::erase (9,544,777 samples, 0.02%)</title><rect x="931.5" y="341" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="934.47" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,482,099 samples, 0.07%)</title><rect x="178.0" y="421" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="181.02" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (85,754,016 samples, 0.15%)</title><rect x="440.6" y="277" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="443.62" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (108,883,356 samples, 0.19%)</title><rect x="886.6" y="325" width="2.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="889.57" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,601,055,004 samples, 2.80%)</title><rect x="346.1" y="453" width="33.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="349.09" y="463.5" >CN..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,541,148 samples, 0.02%)</title><rect x="70.4" y="549" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="73.43" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (38,161,335 samples, 0.07%)</title><rect x="287.1" y="341" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="290.08" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (180,803,846 samples, 0.32%)</title><rect x="1144.5" y="261" width="3.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1147.55" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,112,275 samples, 0.02%)</title><rect x="128.5" y="421" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="131.47" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,539,572 samples, 0.02%)</title><rect x="10.8" y="917" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.78" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,537,515 samples, 0.02%)</title><rect x="940.0" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="942.97" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,378,185 samples, 0.06%)</title><rect x="1185.4" y="293" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1188.44" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (118,958,455 samples, 0.21%)</title><rect x="808.8" y="373" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="811.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9,511,124 samples, 0.02%)</title><rect x="98.3" y="453" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="101.31" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (23,777,390 samples, 0.04%)</title><rect x="806.1" y="341" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="809.06" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (71,138,890 samples, 0.12%)</title><rect x="105.5" y="453" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="108.46" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,551,598 samples, 0.02%)</title><rect x="1174.8" y="133" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.84" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,554,246 samples, 0.02%)</title><rect x="73.4" y="517" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="76.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (90,157,708 samples, 0.16%)</title><rect x="683.2" y="325" width="1.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="686.21" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,275,066 samples, 0.02%)</title><rect x="27.5" y="949" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="30.54" y="959.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="293" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1043.06" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,074,795 samples, 0.03%)</title><rect x="1171.6" y="197" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1174.60" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (47,164,606 samples, 0.08%)</title><rect x="127.7" y="437" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="130.68" y="447.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="165" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1170.87" y="175.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (788,488,907 samples, 1.38%)</title><rect x="459.4" y="405" width="16.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="462.45" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,518,762 samples, 0.02%)</title><rect x="698.2" y="261" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="701.22" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (14,071,420 samples, 0.02%)</title><rect x="1129.0" y="197" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1131.99" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (18,943,167 samples, 0.03%)</title><rect x="1148.7" y="229" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1151.67" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,777,292 samples, 0.12%)</title><rect x="86.2" y="485" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="89.15" y="495.5" ></text>
</g>
<g >
<title>operator new (156,813,973 samples, 0.27%)</title><rect x="504.5" y="229" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="507.47" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (18,730,555 samples, 0.03%)</title><rect x="687.6" y="341" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="690.63" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk (18,831,024 samples, 0.03%)</title><rect x="849.9" y="197" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="852.94" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (19,086,785 samples, 0.03%)</title><rect x="525.8" y="373" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="528.81" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (42,507,618 samples, 0.07%)</title><rect x="1089.2" y="229" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1092.16" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,539,379 samples, 0.02%)</title><rect x="1158.6" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1161.59" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,326,199 samples, 0.03%)</title><rect x="338.5" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="341.52" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,535,575 samples, 0.02%)</title><rect x="578.8" y="373" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="581.81" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (56,935,667 samples, 0.10%)</title><rect x="124.0" y="469" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="126.96" y="479.5" ></text>
</g>
<g >
<title>unlink_chunk (19,062,300 samples, 0.03%)</title><rect x="381.5" y="261" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="384.46" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (9,458,364 samples, 0.02%)</title><rect x="70.8" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="73.83" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,354,118 samples, 0.06%)</title><rect x="740.9" y="261" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="743.85" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (14,217,385 samples, 0.02%)</title><rect x="691.9" y="309" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="694.95" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (9,542,030 samples, 0.02%)</title><rect x="1172.4" y="197" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1175.39" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,074,795 samples, 0.03%)</title><rect x="1171.6" y="149" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1174.60" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (562,966,352 samples, 0.98%)</title><rect x="1070.1" y="277" width="11.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1073.09" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="261" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1181.27" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,267,378,719 samples, 2.22%)</title><rect x="598.2" y="373" width="26.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="601.18" y="383.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="293" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1008.07" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,936,261 samples, 0.03%)</title><rect x="456.6" y="341" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="459.61" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (161,013,212 samples, 0.28%)</title><rect x="1125.6" y="293" width="3.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1128.57" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,486,645 samples, 0.12%)</title><rect x="100.2" y="469" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.17" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,729,019 samples, 0.04%)</title><rect x="1002.9" y="213" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1005.91" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (336,076,399 samples, 0.59%)</title><rect x="965.1" y="341" width="6.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="968.11" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="389" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1190.10" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,418,089 samples, 0.02%)</title><rect x="1178.8" y="373" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1181.76" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (19,063,729 samples, 0.03%)</title><rect x="848.4" y="341" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="851.38" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (9,347,291 samples, 0.02%)</title><rect x="743.3" y="341" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="746.30" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (14,274,902 samples, 0.02%)</title><rect x="1082.2" y="261" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1085.21" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (14,285,179 samples, 0.02%)</title><rect x="805.0" y="229" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="807.98" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (61,653,843 samples, 0.11%)</title><rect x="449.1" y="373" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.06" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,404,720 samples, 0.02%)</title><rect x="804.6" y="261" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="807.59" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (23,810,107 samples, 0.04%)</title><rect x="970.3" y="229" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="973.28" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (19,041,615 samples, 0.03%)</title><rect x="87.6" y="437" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="90.63" y="447.5" ></text>
</g>
<g >
<title>checked_request2size (9,566,931 samples, 0.02%)</title><rect x="1034.6" y="165" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1037.59" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (66,693,820 samples, 0.12%)</title><rect x="940.2" y="309" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="943.17" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (19,070,507 samples, 0.03%)</title><rect x="80.3" y="357" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="83.25" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,348,926 samples, 0.02%)</title><rect x="99.4" y="421" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="102.39" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,553,284 samples, 0.02%)</title><rect x="1150.6" y="229" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1153.64" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,469,110 samples, 0.02%)</title><rect x="889.3" y="213" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="892.30" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (33,068,751 samples, 0.06%)</title><rect x="26.6" y="789" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="29.56" y="799.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (47,732,605 samples, 0.08%)</title><rect x="451.1" y="421" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="454.12" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (61,949,698 samples, 0.11%)</title><rect x="272.1" y="373" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="275.09" y="383.5" ></text>
</g>
<g >
<title>operator new (28,609,525 samples, 0.05%)</title><rect x="967.0" y="213" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="969.96" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (52,502,012 samples, 0.09%)</title><rect x="569.5" y="357" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="572.48" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="325" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1186.48" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (784,380,733 samples, 1.37%)</title><rect x="700.0" y="373" width="16.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="702.99" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (14,066,195 samples, 0.02%)</title><rect x="241.6" y="405" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="244.60" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (56,815,639 samples, 0.10%)</title><rect x="105.5" y="389" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="108.46" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (18,867,195 samples, 0.03%)</title><rect x="1144.0" y="245" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1146.96" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (28,587,917 samples, 0.05%)</title><rect x="449.7" y="341" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.74" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,122,973 samples, 0.02%)</title><rect x="1109.3" y="229" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1112.33" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,518,307 samples, 0.02%)</title><rect x="805.4" y="181" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="808.37" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (208,436,556 samples, 0.36%)</title><rect x="139.8" y="469" width="4.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="142.83" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,808,574 samples, 0.04%)</title><rect x="902.0" y="245" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="905.02" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (109,190,018 samples, 0.19%)</title><rect x="743.7" y="341" width="2.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="746.69" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="197" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1174.99" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23,796,470 samples, 0.04%)</title><rect x="733.8" y="293" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="736.79" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="357" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1190.99" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="213" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="510.79" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (175,722,576 samples, 0.31%)</title><rect x="620.7" y="357" width="3.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="623.71" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (14,232,362 samples, 0.02%)</title><rect x="84.8" y="517" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="87.78" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (133,166,180 samples, 0.23%)</title><rect x="688.9" y="357" width="2.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="691.90" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,317,609 samples, 0.03%)</title><rect x="344.0" y="325" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="347.03" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (664,724,033 samples, 1.16%)</title><rect x="826.9" y="309" width="13.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="829.92" y="319.5" ></text>
</g>
<g >
<title>__memcpy_evex_unaligned_erms (23,843,354 samples, 0.04%)</title><rect x="633.9" y="165" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="636.93" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (47,363,790 samples, 0.08%)</title><rect x="391.1" y="309" width="0.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="394.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,560,234 samples, 0.02%)</title><rect x="339.5" y="405" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="342.50" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="213" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1147.06" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,450,939 samples, 0.02%)</title><rect x="895.4" y="245" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="898.36" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (104,652,474 samples, 0.18%)</title><rect x="196.4" y="389" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="199.41" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (56,950,054 samples, 0.10%)</title><rect x="179.0" y="389" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="182.00" y="399.5" ></text>
</g>
<g >
<title>checked_request2size (14,029,011 samples, 0.02%)</title><rect x="1007.5" y="117" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1010.51" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (122,946,383 samples, 0.22%)</title><rect x="927.6" y="293" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="930.56" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="773" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="783.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (28,582,034 samples, 0.05%)</title><rect x="1155.6" y="149" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1158.62" y="159.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,551,598 samples, 0.02%)</title><rect x="1174.8" y="149" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.84" y="159.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (37,928,446 samples, 0.07%)</title><rect x="339.1" y="453" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="342.11" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (14,228,863 samples, 0.02%)</title><rect x="172.4" y="421" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="175.42" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (13,976,874 samples, 0.02%)</title><rect x="449.5" y="309" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="452.45" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (38,023,483 samples, 0.07%)</title><rect x="402.9" y="389" width="0.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="405.95" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (28,581,169 samples, 0.05%)</title><rect x="1104.5" y="229" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1107.52" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (299,484,400 samples, 0.52%)</title><rect x="90.8" y="469" width="6.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="93.76" y="479.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (474,925,324 samples, 0.83%)</title><rect x="88.8" y="517" width="9.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="91.80" y="527.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (66,486,645 samples, 0.12%)</title><rect x="100.2" y="485" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="103.17" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,458,176 samples, 0.02%)</title><rect x="176.9" y="421" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="179.94" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (56,950,054 samples, 0.10%)</title><rect x="179.0" y="421" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="182.00" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (170,691,361 samples, 0.30%)</title><rect x="931.8" y="341" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="934.77" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (80,388,497 samples, 0.14%)</title><rect x="1035.4" y="309" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1038.37" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (147,102,725 samples, 0.26%)</title><rect x="130.7" y="437" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="133.72" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (56,857,507 samples, 0.10%)</title><rect x="139.8" y="357" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="142.83" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,535,420 samples, 0.02%)</title><rect x="194.6" y="309" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="197.64" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (128,055,895 samples, 0.22%)</title><rect x="627.6" y="357" width="2.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="630.56" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (33,208,110 samples, 0.06%)</title><rect x="14.0" y="965" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="17.01" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,780,617 samples, 0.04%)</title><rect x="1179.4" y="325" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1182.35" y="335.5" ></text>
</g>
<g >
<title>operator new (85,404,119 samples, 0.15%)</title><rect x="329.9" y="309" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="332.89" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (85,318,368 samples, 0.15%)</title><rect x="269.3" y="325" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="272.34" y="335.5" ></text>
</g>
<g >
<title>CNF::CNF (232,822,530 samples, 0.41%)</title><rect x="196.4" y="469" width="4.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="199.41" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (14,309,826 samples, 0.03%)</title><rect x="573.4" y="373" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="576.42" y="383.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (14,340,598 samples, 0.03%)</title><rect x="1174.3" y="229" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1177.34" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,854,576 samples, 0.04%)</title><rect x="80.3" y="501" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="83.25" y="511.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (636,206,567 samples, 1.11%)</title><rect x="826.9" y="277" width="13.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="829.92" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="309" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1183.83" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (2,333,068,652 samples, 4.08%)</title><rect x="579.2" y="405" width="48.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="582.20" y="415.5" >CNF:..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,216,366 samples, 0.07%)</title><rect x="1134.2" y="213" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.18" y="223.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,221,297 samples, 0.05%)</title><rect x="1038.8" y="309" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1041.80" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (232,800,962 samples, 0.41%)</title><rect x="332.7" y="421" width="4.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="335.73" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (132,484,134 samples, 0.23%)</title><rect x="141.0" y="357" width="2.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="144.00" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (89,823,540 samples, 0.16%)</title><rect x="1057.0" y="277" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1060.00" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (9,558,506 samples, 0.02%)</title><rect x="73.6" y="533" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="76.57" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (23,820,818 samples, 0.04%)</title><rect x="810.8" y="325" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="813.77" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (151,649,767 samples, 0.27%)</title><rect x="639.0" y="357" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="642.03" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,534,742 samples, 0.02%)</title><rect x="244.8" y="293" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="247.84" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,301,876 samples, 0.03%)</title><rect x="104.2" y="389" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="107.19" y="399.5" ></text>
</g>
<g >
<title>CNF::CNF (9,513,745 samples, 0.02%)</title><rect x="75.6" y="549" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="78.64" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,458,176 samples, 0.02%)</title><rect x="176.9" y="437" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="179.94" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (14,272,240 samples, 0.02%)</title><rect x="98.0" y="421" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="101.02" y="431.5" ></text>
</g>
<g >
<title>_int_free (9,518,307 samples, 0.02%)</title><rect x="805.4" y="165" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="808.37" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="277" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="387.90" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (14,252,223 samples, 0.02%)</title><rect x="345.0" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="348.01" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (104,652,474 samples, 0.18%)</title><rect x="196.4" y="325" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="199.41" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,453,065 samples, 0.02%)</title><rect x="1180.4" y="341" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1183.43" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,160,553 samples, 0.02%)</title><rect x="89.2" y="389" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="92.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,516,305 samples, 0.02%)</title><rect x="449.9" y="293" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="452.94" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (180,002,491 samples, 0.31%)</title><rect x="1131.3" y="245" width="3.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1134.33" y="255.5" ></text>
</g>
<g >
<title>a.out (57,160,597,160 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >a.out</text>
</g>
<g >
<title>CNF::solve_helper (118,845,873 samples, 0.21%)</title><rect x="25.5" y="1029" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="28.48" y="1039.5" ></text>
</g>
<g >
<title>_int_free (19,102,165 samples, 0.03%)</title><rect x="287.4" y="293" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="290.38" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,765,312 samples, 0.03%)</title><rect x="1101.6" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1104.58" y="191.5" ></text>
</g>
<g >
<title>operator new (100,141,482 samples, 0.18%)</title><rect x="746.2" y="197" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="749.24" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,535,242 samples, 0.02%)</title><rect x="1038.4" y="261" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1041.41" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,547,284 samples, 0.02%)</title><rect x="88.6" y="357" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="91.61" y="367.5" ></text>
</g>
<g >
<title>[unknown] (512,812,285 samples, 0.90%)</title><rect x="58.0" y="1045" width="10.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="60.98" y="1055.5" ></text>
</g>
<g >
<title>CNF::solve_helper (48,042,858,873 samples, 84.05%)</title><rect x="196.4" y="485" width="991.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.41" y="495.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (38,161,335 samples, 0.07%)</title><rect x="287.1" y="373" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="290.08" y="383.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (204,419,949 samples, 0.36%)</title><rect x="278.5" y="405" width="4.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="281.46" y="415.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (14,036,754 samples, 0.02%)</title><rect x="1150.6" y="293" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1153.64" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (37,733,979 samples, 0.07%)</title><rect x="567.6" y="341" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="570.63" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,483,198 samples, 0.02%)</title><rect x="691.8" y="293" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="694.75" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,479,184 samples, 0.04%)</title><rect x="1058.4" y="181" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1061.36" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (81,005,364 samples, 0.14%)</title><rect x="752.8" y="293" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="755.82" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (460,401,031 samples, 0.81%)</title><rect x="988.3" y="229" width="9.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="991.31" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="341" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1185.30" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (141,981,566 samples, 0.25%)</title><rect x="855.4" y="309" width="3.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="858.42" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (14,315,693 samples, 0.03%)</title><rect x="693.6" y="373" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="696.61" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,129,555 samples, 0.03%)</title><rect x="74.0" y="565" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="76.97" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (14,315,803 samples, 0.03%)</title><rect x="194.8" y="389" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="197.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (56,819,577 samples, 0.10%)</title><rect x="360.2" y="389" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="363.20" y="399.5" ></text>
</g>
<g >
<title>tcache_put (9,561,615 samples, 0.02%)</title><rect x="1034.4" y="149" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1037.39" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="261" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1178.23" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (14,322,563 samples, 0.03%)</title><rect x="689.4" y="229" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="692.39" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (290,527,166 samples, 0.51%)</title><rect x="390.7" y="421" width="6.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="393.67" y="431.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (75,433,658 samples, 0.13%)</title><rect x="1038.8" y="341" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1041.80" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (56,950,054 samples, 0.10%)</title><rect x="179.0" y="373" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="182.00" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (85,404,119 samples, 0.15%)</title><rect x="329.9" y="389" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="332.89" y="399.5" ></text>
</g>
<g >
<title>operator new (19,070,507 samples, 0.03%)</title><rect x="80.3" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.25" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="261" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1110.28" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (28,465,545 samples, 0.05%)</title><rect x="1172.7" y="229" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1175.68" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,576,590 samples, 0.05%)</title><rect x="204.2" y="325" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="207.24" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="245" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1110.28" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,265,312 samples, 0.05%)</title><rect x="845.6" y="213" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="848.64" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,857,406 samples, 0.04%)</title><rect x="74.4" y="501" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="77.36" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (47,457,521 samples, 0.08%)</title><rect x="639.3" y="293" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="642.33" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (56,804,747 samples, 0.10%)</title><rect x="446.3" y="309" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="449.32" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,483,198 samples, 0.02%)</title><rect x="691.8" y="277" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="694.75" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (19,106,100 samples, 0.03%)</title><rect x="1172.0" y="149" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1174.99" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (18,730,555 samples, 0.03%)</title><rect x="687.6" y="325" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="690.63" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,487,852 samples, 0.02%)</title><rect x="497.4" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="500.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (42,664,983 samples, 0.07%)</title><rect x="147.6" y="405" width="0.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="150.56" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (56,815,639 samples, 0.10%)</title><rect x="105.5" y="373" width="1.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="108.46" y="383.5" ></text>
</g>
<g >
<title>_int_free (9,279,028 samples, 0.02%)</title><rect x="377.0" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="379.99" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (113,574,641 samples, 0.20%)</title><rect x="563.5" y="373" width="2.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="566.53" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (156,599,032 samples, 0.27%)</title><rect x="130.5" y="469" width="3.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="133.52" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,556,752 samples, 0.02%)</title><rect x="1129.6" y="261" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1132.57" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_upper_bound (14,300,727 samples, 0.03%)</title><rect x="518.0" y="357" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="520.98" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,857,406 samples, 0.04%)</title><rect x="74.4" y="517" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="77.36" y="527.5" ></text>
</g>
<g >
<title>operator new (9,488,560 samples, 0.02%)</title><rect x="124.8" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="127.84" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (459,049,906 samples, 0.80%)</title><rect x="915.5" y="245" width="9.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="918.54" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (23,332,807 samples, 0.04%)</title><rect x="1125.8" y="229" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1128.77" y="239.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="853" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="863.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (137,177,220 samples, 0.24%)</title><rect x="642.2" y="357" width="2.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="645.16" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="229" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="510.79" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,206,431 samples, 0.06%)</title><rect x="1170.5" y="213" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1173.52" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_right (38,023,170 samples, 0.07%)</title><rect x="644.2" y="341" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="647.21" y="351.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (981,413,346 samples, 1.72%)</title><rect x="1040.4" y="341" width="20.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1043.35" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="325" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.66" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,515,131 samples, 0.05%)</title><rect x="75.0" y="501" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.95" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (33,104,608 samples, 0.06%)</title><rect x="173.1" y="357" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.11" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,540,081 samples, 0.02%)</title><rect x="972.4" y="229" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="975.44" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (9,552,927 samples, 0.02%)</title><rect x="88.4" y="293" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="91.41" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (9,242,330 samples, 0.02%)</title><rect x="741.5" y="373" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="744.54" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (19,074,795 samples, 0.03%)</title><rect x="1171.6" y="133" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1174.60" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="277" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="751.41" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (37,986,708 samples, 0.07%)</title><rect x="1187.0" y="453" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1190.01" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,569,720 samples, 0.12%)</title><rect x="974.1" y="325" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="977.11" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (84,764,346 samples, 0.15%)</title><rect x="1153.9" y="213" width="1.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1156.87" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (99,724,455 samples, 0.17%)</title><rect x="125.1" y="469" width="2.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="128.13" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (28,576,590 samples, 0.05%)</title><rect x="204.2" y="341" width="0.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="207.24" y="351.5" ></text>
</g>
<g >
<title>operator new (52,502,012 samples, 0.09%)</title><rect x="569.5" y="277" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="572.48" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (28,576,590 samples, 0.05%)</title><rect x="204.2" y="357" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="207.24" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="181" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1178.23" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,562,170 samples, 0.02%)</title><rect x="966.2" y="277" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="969.18" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="197" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1110.67" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,520,521 samples, 0.02%)</title><rect x="811.1" y="293" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="814.06" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (569,156,903 samples, 1.00%)</title><rect x="437.3" y="421" width="11.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="440.31" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,449,912 samples, 0.02%)</title><rect x="193.6" y="389" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="196.57" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (71,517,449 samples, 0.13%)</title><rect x="372.7" y="389" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="375.66" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,840,105 samples, 0.04%)</title><rect x="1185.5" y="277" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1188.54" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (37,986,708 samples, 0.07%)</title><rect x="1187.0" y="437" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1190.01" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (75,670,250 samples, 0.13%)</title><rect x="1006.3" y="213" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1009.34" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (95,007,947 samples, 0.17%)</title><rect x="754.5" y="309" width="2.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="757.50" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (90,423,944 samples, 0.16%)</title><rect x="576.9" y="309" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="579.95" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (14,300,727 samples, 0.03%)</title><rect x="518.0" y="341" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="520.98" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (147,241,164 samples, 0.26%)</title><rect x="374.1" y="373" width="3.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="377.14" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (89,997,241 samples, 0.16%)</title><rect x="806.9" y="373" width="1.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="809.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,489,708 samples, 0.02%)</title><rect x="1082.3" y="245" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1085.30" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (123,298,789 samples, 0.22%)</title><rect x="627.7" y="261" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="630.65" y="271.5" ></text>
</g>
<g >
<title>checked_request2size (9,558,315 samples, 0.02%)</title><rect x="852.3" y="149" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="855.28" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="293" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.87" y="303.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (61,165,956 samples, 0.11%)</title><rect x="900.4" y="309" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="903.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,558,387 samples, 0.02%)</title><rect x="973.5" y="277" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="976.52" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (18,705,114 samples, 0.03%)</title><rect x="89.2" y="453" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="92.20" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (119,033,386 samples, 0.21%)</title><rect x="1054.5" y="277" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1057.54" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,430,330,413 samples, 2.50%)</title><rect x="297.7" y="405" width="29.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="300.74" y="415.5" >st..</text>
</g>
<g >
<title>malloc_consolidate (85,403,899 samples, 0.15%)</title><rect x="744.2" y="229" width="1.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="747.18" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (166,334,966 samples, 0.29%)</title><rect x="278.5" y="309" width="3.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="281.46" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,535,135 samples, 0.02%)</title><rect x="972.6" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.64" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (47,595,362 samples, 0.08%)</title><rect x="1057.0" y="245" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.00" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (156,761,043 samples, 0.27%)</title><rect x="997.9" y="277" width="3.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1000.92" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="277" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.87" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (33,418,410 samples, 0.06%)</title><rect x="689.2" y="309" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="692.20" y="319.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="789" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="799.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9,557,881 samples, 0.02%)</title><rect x="693.0" y="389" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="696.02" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="341" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1179.80" y="351.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="709" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="719.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (352,503,816 samples, 0.62%)</title><rect x="672.2" y="341" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="675.22" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (14,217,385 samples, 0.02%)</title><rect x="691.9" y="261" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="694.95" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (52,087,019 samples, 0.09%)</title><rect x="193.8" y="325" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="196.77" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (80,630,289 samples, 0.14%)</title><rect x="931.8" y="309" width="1.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="934.77" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="165" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1179.41" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (56,787,648 samples, 0.10%)</title><rect x="87.6" y="501" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="90.63" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (28,633,463 samples, 0.05%)</title><rect x="1157.5" y="213" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.49" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (170,440,270 samples, 0.30%)</title><rect x="965.1" y="325" width="3.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="968.11" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="149" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1145.98" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,547,001 samples, 0.04%)</title><rect x="37.7" y="1029" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="40.72" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,057,869,042 samples, 1.85%)</title><rect x="864.6" y="325" width="21.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="867.64" y="335.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="325" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1179.41" y="335.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="677" width="1120.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.56" y="687.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="373" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.10" y="383.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,837,656,611 samples, 3.21%)</title><rect x="935.3" y="357" width="37.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="938.29" y="367.5" >CNF..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (204,419,949 samples, 0.36%)</title><rect x="278.5" y="389" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="281.46" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (251,548,055 samples, 0.44%)</title><rect x="452.6" y="437" width="5.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="455.59" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18,981,964 samples, 0.03%)</title><rect x="1163.4" y="261" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.36" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,518,185 samples, 0.02%)</title><rect x="898.4" y="325" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="901.41" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (9,458,364 samples, 0.02%)</title><rect x="70.8" y="469" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="73.83" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (85,468,780 samples, 0.15%)</title><rect x="732.0" y="261" width="1.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="735.03" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,507,618 samples, 0.07%)</title><rect x="1089.2" y="277" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1092.16" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (33,430,596 samples, 0.06%)</title><rect x="572.2" y="325" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="575.24" y="335.5" ></text>
</g>
<g >
<title>operator new (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="85" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.59" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="325" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="387.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (23,495,572 samples, 0.04%)</title><rect x="938.7" y="261" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="941.70" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="117" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1146.17" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (108,914,153 samples, 0.19%)</title><rect x="104.7" y="485" width="2.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="107.68" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1043.06" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,438,253 samples, 0.02%)</title><rect x="138.8" y="341" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="141.75" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,549,136 samples, 0.02%)</title><rect x="578.6" y="293" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="581.62" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (142,322,417 samples, 0.25%)</title><rect x="454.7" y="421" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="457.65" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (33,428,886 samples, 0.06%)</title><rect x="137.4" y="357" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="140.37" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,570,210 samples, 0.02%)</title><rect x="195.3" y="309" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="198.33" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="277" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="109.63" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,541,391 samples, 0.02%)</title><rect x="177.7" y="469" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="180.73" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,347,291 samples, 0.02%)</title><rect x="743.3" y="309" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="746.30" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,539,864 samples, 0.02%)</title><rect x="1184.9" y="405" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1187.95" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,275,066 samples, 0.02%)</title><rect x="27.5" y="869" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="30.54" y="879.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (57,238,906 samples, 0.10%)</title><rect x="86.2" y="453" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="89.15" y="463.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (23,883,112 samples, 0.04%)</title><rect x="1107.7" y="229" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1110.67" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (175,837,545 samples, 0.31%)</title><rect x="737.9" y="341" width="3.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="740.91" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (43,008,086 samples, 0.08%)</title><rect x="1156.2" y="229" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1159.21" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19,091,998 samples, 0.03%)</title><rect x="137.0" y="357" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="139.98" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,493,819 samples, 0.02%)</title><rect x="1163.8" y="213" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1166.76" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="789" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="799.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (14,300,297 samples, 0.03%)</title><rect x="810.8" y="309" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="813.77" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (62,129,626 samples, 0.11%)</title><rect x="1164.5" y="197" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1167.54" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (85,767,229 samples, 0.15%)</title><rect x="383.0" y="213" width="1.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="386.03" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (66,078,183 samples, 0.12%)</title><rect x="1062.1" y="165" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1065.07" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (14,016,806 samples, 0.02%)</title><rect x="1144.9" y="245" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1147.94" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (133,136,769 samples, 0.23%)</title><rect x="686.2" y="357" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="689.16" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="341" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1181.27" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (28,609,525 samples, 0.05%)</title><rect x="967.0" y="229" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="969.96" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (52,502,012 samples, 0.09%)</title><rect x="569.5" y="341" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="572.48" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="101" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1160.59" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_begin (19,043,089 samples, 0.03%)</title><rect x="651.4" y="357" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="654.38" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (9,520,998 samples, 0.02%)</title><rect x="501.5" y="373" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="504.52" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (42,955,495 samples, 0.08%)</title><rect x="893.6" y="245" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="896.60" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (51,938,215 samples, 0.09%)</title><rect x="756.5" y="325" width="1.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="759.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (28,609,525 samples, 0.05%)</title><rect x="967.0" y="261" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="969.96" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (90,061,072 samples, 0.16%)</title><rect x="933.4" y="309" width="1.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="936.43" y="319.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (104,914,733 samples, 0.18%)</title><rect x="450.4" y="437" width="2.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="453.43" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="213" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1040.13" y="223.5" ></text>
</g>
<g >
<title>CNF::~CNF (47,631,198 samples, 0.08%)</title><rect x="1180.7" y="405" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1183.73" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (760,622,081 samples, 1.33%)</title><rect x="700.5" y="341" width="15.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="703.48" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,347,847,467 samples, 2.36%)</title><rect x="651.8" y="357" width="27.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="654.77" y="367.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (23,905,286 samples, 0.04%)</title><rect x="1177.7" y="341" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1180.68" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="245" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1145.98" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,535,575 samples, 0.02%)</title><rect x="578.8" y="341" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="581.81" y="351.5" ></text>
</g>
<g >
<title>_int_free (14,217,385 samples, 0.02%)</title><rect x="691.9" y="229" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="694.95" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,686,491 samples, 0.12%)</title><rect x="78.5" y="485" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="81.48" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (180,002,491 samples, 0.31%)</title><rect x="1131.3" y="229" width="3.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1134.33" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (180,459,802 samples, 0.32%)</title><rect x="1031.6" y="309" width="3.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1034.65" y="319.5" ></text>
</g>
<g >
<title>_int_free (28,582,580 samples, 0.05%)</title><rect x="639.7" y="245" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="642.72" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,560,581 samples, 0.02%)</title><rect x="74.0" y="517" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="76.97" y="527.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (9,363,956 samples, 0.02%)</title><rect x="1164.0" y="261" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1166.95" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (33,428,886 samples, 0.06%)</title><rect x="137.4" y="341" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="140.37" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,628,300 samples, 0.05%)</title><rect x="27.9" y="1029" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="30.93" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_create_storage (56,857,507 samples, 0.10%)</title><rect x="139.8" y="437" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="142.83" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14,330,040 samples, 0.03%)</title><rect x="1141.9" y="277" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1144.90" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (9,524,025 samples, 0.02%)</title><rect x="1085.3" y="149" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1088.34" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="309" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1182.55" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (28,544,779 samples, 0.05%)</title><rect x="1038.0" y="309" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1041.01" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (94,987,153 samples, 0.17%)</title><rect x="1081.7" y="293" width="2.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1084.71" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14,276,302 samples, 0.02%)</title><rect x="1000.9" y="213" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1003.86" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,311,093 samples, 0.03%)</title><rect x="1179.5" y="245" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1182.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,143,848 samples, 0.07%)</title><rect x="1037.0" y="293" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1040.03" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (42,433,813 samples, 0.07%)</title><rect x="1002.5" y="229" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1005.53" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (584,074,173 samples, 1.02%)</title><rect x="13.4" y="1029" width="12.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="16.42" y="1039.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (264,753,919 samples, 0.46%)</title><rect x="181.5" y="453" width="5.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="184.54" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (14,319,747 samples, 0.03%)</title><rect x="370.6" y="309" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="373.60" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,666,229,680 samples, 2.91%)</title><rect x="760.6" y="357" width="34.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="763.57" y="367.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,564,775 samples, 0.02%)</title><rect x="698.0" y="277" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="701.03" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (61,632,851 samples, 0.11%)</title><rect x="970.8" y="293" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="973.78" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,478,684 samples, 0.02%)</title><rect x="395.3" y="357" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="398.29" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (9,544,561 samples, 0.02%)</title><rect x="89.4" y="437" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="92.39" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="117" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1178.23" y="127.5" ></text>
</g>
<g >
<title>_int_malloc (28,497,139 samples, 0.05%)</title><rect x="62.4" y="1029" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="65.38" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,483,198 samples, 0.02%)</title><rect x="691.8" y="309" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="694.75" y="319.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (3,131,806,099 samples, 5.48%)</title><rect x="385.8" y="437" width="64.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="388.78" y="447.5" >CNF::fi..</text>
</g>
<g >
<title>std::_Rb_tree_increment (23,872,488 samples, 0.04%)</title><rect x="1011.6" y="261" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1014.62" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (85,588,018 samples, 0.15%)</title><rect x="689.9" y="341" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="692.89" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (19,077,045 samples, 0.03%)</title><rect x="1178.4" y="197" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1181.37" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (346,823,919 samples, 0.61%)</title><rect x="237.2" y="453" width="7.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="240.19" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,485,632 samples, 0.02%)</title><rect x="838.5" y="245" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="841.49" y="255.5" ></text>
</g>
<g >
<title>CNF::dpll (54,287,425,604 samples, 94.97%)</title><rect x="68.6" y="981" width="1120.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="71.56" y="991.5" >CNF::dpll</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (57,250,015 samples, 0.10%)</title><rect x="623.2" y="325" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="626.16" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (9,554,246 samples, 0.02%)</title><rect x="73.4" y="533" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="76.38" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (66,490,998 samples, 0.12%)</title><rect x="857.0" y="293" width="1.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="859.98" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,088 samples, 0.02%)</title><rect x="79.9" y="453" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="82.86" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,520,998 samples, 0.02%)</title><rect x="501.5" y="309" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="504.52" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (28,782,040 samples, 0.05%)</title><rect x="68.6" y="613" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="71.56" y="623.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (62,129,626 samples, 0.11%)</title><rect x="1164.5" y="213" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1167.54" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (38,152,698 samples, 0.07%)</title><rect x="128.8" y="421" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="131.75" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (14,272,240 samples, 0.02%)</title><rect x="98.0" y="389" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.02" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (14,274,078 samples, 0.02%)</title><rect x="1084.7" y="261" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1087.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (81,005,364 samples, 0.14%)</title><rect x="752.8" y="277" width="1.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="755.82" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (465,176,273 samples, 0.81%)</title><rect x="988.3" y="293" width="9.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="991.31" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="405" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1186.87" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,256,783 samples, 0.02%)</title><rect x="1173.5" y="165" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1176.47" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9,535,947 samples, 0.02%)</title><rect x="848.6" y="245" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="851.58" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (99,058,120 samples, 0.17%)</title><rect x="1109.3" y="293" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1112.33" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (19,023,814 samples, 0.03%)</title><rect x="1161.6" y="229" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1164.61" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (23,781,923 samples, 0.04%)</title><rect x="1161.5" y="245" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1164.51" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (38,166,081 samples, 0.07%)</title><rect x="242.4" y="309" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="245.38" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,551,908 samples, 0.02%)</title><rect x="103.6" y="373" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="106.60" y="383.5" ></text>
</g>
<g >
<title>CNF::~CNF (9,563,650 samples, 0.02%)</title><rect x="1175.9" y="325" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1178.92" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (123,005,156 samples, 0.22%)</title><rect x="1165.8" y="245" width="2.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1168.82" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,410,603,349 samples, 2.47%)</title><rect x="208.1" y="453" width="29.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="211.07" y="463.5" >st..</text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (89,997,241 samples, 0.16%)</title><rect x="806.9" y="357" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="809.94" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="229" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1129.74" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (815,566,640 samples, 1.43%)</title><rect x="600.0" y="341" width="16.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="603.04" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (42,907,416 samples, 0.08%)</title><rect x="83.8" y="517" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="86.80" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,542,798 samples, 0.02%)</title><rect x="139.6" y="469" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="142.63" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (147,212,109 samples, 0.26%)</title><rect x="237.2" y="437" width="3.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="240.19" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,552,103 samples, 0.02%)</title><rect x="895.6" y="213" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="898.56" y="223.5" ></text>
</g>
<g >
<title>_int_free (9,549,565 samples, 0.02%)</title><rect x="929.7" y="181" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="932.70" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,516,305 samples, 0.02%)</title><rect x="449.9" y="277" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="452.94" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (1,641,959,211 samples, 2.87%)</title><rect x="526.2" y="373" width="33.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="529.20" y="383.5" >st..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (791,151,692 samples, 1.38%)</title><rect x="717.5" y="293" width="16.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="720.46" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9,514,136 samples, 0.02%)</title><rect x="507.8" y="197" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="510.79" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,296,576 samples, 0.03%)</title><rect x="449.9" y="325" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.94" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (9,545,122 samples, 0.02%)</title><rect x="801.5" y="325" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="804.54" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (37,775,263 samples, 0.07%)</title><rect x="104.7" y="373" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="107.68" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,538,383 samples, 0.02%)</title><rect x="339.7" y="437" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="342.70" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,845,532 samples, 0.01%)</title><rect x="43.5" y="853" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.49" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (161,800,195 samples, 0.28%)</title><rect x="146.6" y="453" width="3.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="149.57" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (42,472,697 samples, 0.07%)</title><rect x="1039.4" y="309" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1042.38" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,823,439 samples, 0.04%)</title><rect x="972.4" y="261" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="975.44" y="271.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (441,424,516 samples, 0.77%)</title><rect x="250.8" y="421" width="9.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="253.83" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (28,660,293 samples, 0.05%)</title><rect x="173.8" y="421" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="176.79" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (147,601,949 samples, 0.26%)</title><rect x="381.8" y="325" width="3.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="384.85" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,964,213 samples, 0.03%)</title><rect x="810.4" y="341" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="813.37" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (28,465,545 samples, 0.05%)</title><rect x="1172.7" y="213" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1175.68" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (61,702,438 samples, 0.11%)</title><rect x="125.9" y="453" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="128.92" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,537,131 samples, 0.02%)</title><rect x="572.2" y="277" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="575.24" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (23,810,107 samples, 0.04%)</title><rect x="970.3" y="293" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="973.28" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (42,344,193 samples, 0.07%)</title><rect x="1005.3" y="181" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1008.27" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (85,523,487 samples, 0.15%)</title><rect x="357.6" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="360.65" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,548,033 samples, 0.02%)</title><rect x="969.3" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="972.31" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (9,303,935 samples, 0.02%)</title><rect x="1144.1" y="165" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1147.06" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (52,174,252 samples, 0.09%)</title><rect x="847.3" y="341" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="850.30" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,535,947 samples, 0.02%)</title><rect x="848.6" y="293" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="851.58" y="303.5" ></text>
</g>
<g >
<title>CNF::solve_helper (53,939,758,131 samples, 94.37%)</title><rect x="75.6" y="565" width="1113.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.64" y="575.5" >CNF::solve_helper</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (32,927,819 samples, 0.06%)</title><rect x="500.4" y="389" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="503.44" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (52,091,284 samples, 0.09%)</title><rect x="1082.6" y="277" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1085.60" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (288,826,987 samples, 0.51%)</title><rect x="639.0" y="373" width="6.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="642.03" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (37,788,708 samples, 0.07%)</title><rect x="499.7" y="277" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="502.66" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (47,363,790 samples, 0.08%)</title><rect x="391.1" y="325" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="394.06" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18,866,249 samples, 0.03%)</title><rect x="1155.2" y="149" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1158.23" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (108,860,978 samples, 0.19%)</title><rect x="1001.2" y="277" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1004.15" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (18,673,766 samples, 0.03%)</title><rect x="103.8" y="421" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="106.80" y="431.5" ></text>
</g>
<g >
<title>_int_free (14,284,450 samples, 0.02%)</title><rect x="1185.7" y="261" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1188.73" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (265,758,243 samples, 0.46%)</title><rect x="1049.1" y="261" width="5.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1052.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (23,495,572 samples, 0.04%)</title><rect x="938.7" y="277" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="941.70" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,428,886 samples, 0.06%)</title><rect x="137.4" y="437" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.37" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (38,096,943 samples, 0.07%)</title><rect x="491.3" y="293" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="494.31" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (19,045,387 samples, 0.03%)</title><rect x="138.9" y="469" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="141.95" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (95,146,567 samples, 0.17%)</title><rect x="28.5" y="1029" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="31.52" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,542,090 samples, 0.02%)</title><rect x="1179.2" y="373" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1182.16" y="383.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (66,797,840 samples, 0.12%)</title><rect x="1171.2" y="229" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1174.20" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (47,681,728 samples, 0.08%)</title><rect x="25.6" y="837" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="28.58" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (687,314,561 samples, 1.20%)</title><rect x="1111.4" y="277" width="14.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1114.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int const&amp;, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (14,260,269 samples, 0.02%)</title><rect x="124.8" y="453" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="127.84" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (147,133,542 samples, 0.26%)</title><rect x="757.5" y="341" width="3.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="760.53" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (85,732,977 samples, 0.15%)</title><rect x="614.9" y="277" width="1.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="617.92" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (118,386,185 samples, 0.21%)</title><rect x="925.1" y="229" width="2.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="928.11" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (23,834,848 samples, 0.04%)</title><rect x="445.3" y="373" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="448.33" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,676,179,251 samples, 2.93%)</title><rect x="645.0" y="389" width="34.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="648.00" y="399.5" >st..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="277" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1043.06" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (19,077,168 samples, 0.03%)</title><rect x="195.5" y="453" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="198.52" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,293,407 samples, 0.02%)</title><rect x="1012.6" y="261" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1015.61" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,458,364 samples, 0.02%)</title><rect x="70.8" y="437" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="73.83" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (18,991,079 samples, 0.03%)</title><rect x="858.4" y="293" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="861.35" y="303.5" ></text>
</g>
<g >
<title>tcache_get (9,522,428 samples, 0.02%)</title><rect x="798.2" y="213" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="801.20" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (142,845,372 samples, 0.25%)</title><rect x="381.9" y="277" width="3.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="384.95" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (33,361,059 samples, 0.06%)</title><rect x="63.0" y="1029" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.97" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (19,091,588 samples, 0.03%)</title><rect x="155.1" y="421" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="158.09" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (71,217,033 samples, 0.12%)</title><rect x="933.6" y="197" width="1.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="936.63" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="245" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1183.83" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,560,234 samples, 0.02%)</title><rect x="339.5" y="389" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="342.50" y="399.5" ></text>
</g>
<g >
<title>CNF::CNF (56,787,648 samples, 0.10%)</title><rect x="87.6" y="517" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="90.63" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (170,988,165 samples, 0.30%)</title><rect x="512.7" y="357" width="3.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="515.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (175,393,673 samples, 0.31%)</title><rect x="1028.0" y="277" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1031.02" y="287.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (38,152,698 samples, 0.07%)</title><rect x="128.8" y="437" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="131.75" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (80,630,289 samples, 0.14%)</title><rect x="931.8" y="229" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="934.77" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (479,843,200 samples, 0.84%)</title><rect x="1096.0" y="277" width="9.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1098.99" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (99,654,233 samples, 0.17%)</title><rect x="737.9" y="309" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="740.91" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (71,138,890 samples, 0.12%)</title><rect x="105.5" y="421" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="108.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,228,512 samples, 0.06%)</title><rect x="1187.1" y="325" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.10" y="335.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (203,721,613 samples, 0.36%)</title><rect x="898.3" y="373" width="4.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="901.31" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,242,330 samples, 0.02%)</title><rect x="741.5" y="357" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="744.54" y="367.5" ></text>
</g>
<g >
<title>operator new (28,625,396 samples, 0.05%)</title><rect x="126.0" y="357" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="129.01" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (142,845,372 samples, 0.25%)</title><rect x="381.9" y="261" width="3.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="384.95" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (14,240,516 samples, 0.02%)</title><rect x="627.0" y="309" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="629.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (18,856,252 samples, 0.03%)</title><rect x="1128.9" y="277" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1131.89" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::deallocate (70,731,197 samples, 0.12%)</title><rect x="855.5" y="245" width="1.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="858.52" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,514,175 samples, 0.02%)</title><rect x="1107.1" y="293" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1110.08" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (9,503,866 samples, 0.02%)</title><rect x="1069.9" y="261" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1072.90" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,550,143 samples, 0.02%)</title><rect x="143.9" y="373" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="146.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (14,302,604 samples, 0.03%)</title><rect x="107.8" y="421" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="110.81" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="325" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1181.27" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (33,397,000 samples, 0.06%)</title><rect x="1143.0" y="277" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1145.98" y="287.5" ></text>
</g>
<g >
<title>CNF::solve_helper (26,872,570,441 samples, 47.01%)</title><rect x="627.6" y="421" width="554.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="630.56" y="431.5" >CNF::solve_helper</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (80,355,335 samples, 0.14%)</title><rect x="237.6" y="421" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="240.58" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (288,427,443 samples, 0.50%)</title><rect x="286.8" y="421" width="5.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="289.79" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (204,419,949 samples, 0.36%)</title><rect x="278.5" y="421" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="281.46" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9,520,998 samples, 0.02%)</title><rect x="501.5" y="357" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="504.52" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (23,888,400 samples, 0.04%)</title><rect x="147.1" y="389" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="150.06" y="399.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (100,051,529 samples, 0.18%)</title><rect x="247.5" y="437" width="2.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="250.49" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (14,253,919 samples, 0.02%)</title><rect x="1161.7" y="213" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1164.71" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9,454,740 samples, 0.02%)</title><rect x="245.9" y="453" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="248.92" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,535,575 samples, 0.02%)</title><rect x="578.8" y="357" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="581.81" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (9,553,321 samples, 0.02%)</title><rect x="967.3" y="181" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="970.25" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (189,445,481 samples, 0.33%)</title><rect x="1135.4" y="181" width="4.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.44" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (118,386,185 samples, 0.21%)</title><rect x="925.1" y="245" width="2.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="928.11" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (13,963,763 samples, 0.02%)</title><rect x="1162.4" y="213" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1165.39" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (156,839,772 samples, 0.27%)</title><rect x="134.1" y="405" width="3.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="137.14" y="415.5" ></text>
</g>
<g >
<title>tcache_get (9,565,989 samples, 0.02%)</title><rect x="173.6" y="309" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="176.60" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,808,574 samples, 0.04%)</title><rect x="902.0" y="229" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="905.02" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,632,166 samples, 0.05%)</title><rect x="287.3" y="309" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="290.28" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (791,151,692 samples, 1.38%)</title><rect x="717.5" y="277" width="16.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="720.46" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9,570,210 samples, 0.02%)</title><rect x="195.3" y="325" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="198.33" y="335.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (227,171,416 samples, 0.40%)</title><rect x="1091.3" y="277" width="4.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1094.31" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (60,957,723 samples, 0.11%)</title><rect x="849.1" y="309" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="852.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (9,535,863 samples, 0.02%)</title><rect x="84.5" y="485" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="87.48" y="495.5" ></text>
</g>
<g >
<title>_int_free (14,246,506 samples, 0.02%)</title><rect x="741.1" y="213" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="744.15" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (156,660,122 samples, 0.27%)</title><rect x="124.0" y="485" width="3.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="126.96" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (33,143,823 samples, 0.06%)</title><rect x="69.7" y="533" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="72.75" y="543.5" ></text>
</g>
<g >
<title>CNF::solve_helper (54,258,643,564 samples, 94.92%)</title><rect x="69.2" y="613" width="1120.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.16" y="623.5" >CNF::solve_helper</text>
</g>
<g >
<title>__GI___libc_free (9,450,939 samples, 0.02%)</title><rect x="895.4" y="229" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="898.36" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (156,839,772 samples, 0.27%)</title><rect x="134.1" y="389" width="3.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="137.14" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (27,740,088 samples, 0.05%)</title><rect x="328.9" y="389" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="331.93" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (18,999,048 samples, 0.03%)</title><rect x="84.8" y="533" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="87.78" y="543.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (170,866,666 samples, 0.30%)</title><rect x="734.4" y="293" width="3.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="737.38" y="303.5" ></text>
</g>
<g >
<title>CNF::~CNF (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="437" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1186.87" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (66,279,275 samples, 0.12%)</title><rect x="927.6" y="261" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="930.56" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (147,809,971 samples, 0.26%)</title><rect x="1145.2" y="245" width="3.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1148.23" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (57,122,573 samples, 0.10%)</title><rect x="996.6" y="213" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="999.64" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (14,137,138 samples, 0.02%)</title><rect x="1157.6" y="117" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1160.59" y="127.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (9,568,974 samples, 0.02%)</title><rect x="74.2" y="501" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="77.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,542,798 samples, 0.02%)</title><rect x="139.6" y="485" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="142.63" y="495.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (133,205,297 samples, 0.23%)</title><rect x="695.9" y="373" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="698.87" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (23,587,192 samples, 0.04%)</title><rect x="1087.0" y="293" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1090.01" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (56,815,639 samples, 0.10%)</title><rect x="105.5" y="357" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="108.46" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (38,136,480 samples, 0.07%)</title><rect x="1180.8" y="293" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1183.83" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (28,527,336 samples, 0.05%)</title><rect x="901.9" y="325" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="904.93" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,497,993 samples, 0.02%)</title><rect x="941.0" y="293" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="943.96" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,935,877,892 samples, 3.39%)</title><rect x="520.1" y="389" width="40.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="523.13" y="399.5" >std..</text>
</g>
<g >
<title>__GI___libc_malloc (100,141,482 samples, 0.18%)</title><rect x="746.2" y="181" width="2.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="749.24" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="245" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1008.07" y="255.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (9,568,974 samples, 0.02%)</title><rect x="74.2" y="549" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="77.17" y="559.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,088 samples, 0.02%)</title><rect x="79.9" y="485" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="82.86" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (23,858,727 samples, 0.04%)</title><rect x="457.1" y="357" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="460.10" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (37,788,708 samples, 0.07%)</title><rect x="499.7" y="261" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="502.66" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (37,937,198 samples, 0.07%)</title><rect x="438.9" y="357" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="441.87" y="367.5" ></text>
</g>
<g >
<title>_int_free (9,522,063 samples, 0.02%)</title><rect x="902.3" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="905.32" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,334,017 samples, 0.03%)</title><rect x="239.4" y="309" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="242.44" y="319.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (61,987,469 samples, 0.11%)</title><rect x="246.2" y="453" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="249.21" y="463.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (71,517,449 samples, 0.13%)</title><rect x="372.7" y="325" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="375.66" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (14,197,359 samples, 0.02%)</title><rect x="124.5" y="437" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="127.54" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (18,794,730 samples, 0.03%)</title><rect x="692.5" y="261" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="695.54" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (146,924,473 samples, 0.26%)</title><rect x="275.4" y="373" width="3.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="278.43" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (9,514,175 samples, 0.02%)</title><rect x="1107.1" y="309" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1110.08" y="319.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (47,071,020 samples, 0.08%)</title><rect x="975.5" y="293" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="978.49" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,275,066 samples, 0.02%)</title><rect x="27.5" y="885" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="30.54" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (18,657,795 samples, 0.03%)</title><rect x="291.0" y="389" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="293.98" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (19,119,366 samples, 0.03%)</title><rect x="239.3" y="389" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="242.34" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="389" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1186.87" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (175,837,545 samples, 0.31%)</title><rect x="737.9" y="325" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="740.91" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (14,272,240 samples, 0.02%)</title><rect x="98.0" y="405" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="101.02" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (47,458,446 samples, 0.08%)</title><rect x="76.4" y="517" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="79.43" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,322,624 samples, 0.03%)</title><rect x="497.1" y="261" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="500.11" y="271.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (18,964,213 samples, 0.03%)</title><rect x="810.4" y="277" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="813.37" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,308,309 samples, 0.03%)</title><rect x="1188.7" y="357" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.66" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (118,472,561 samples, 0.21%)</title><rect x="620.7" y="325" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="623.71" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (9,540,328 samples, 0.02%)</title><rect x="1128.4" y="133" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1131.41" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (14,314,083 samples, 0.03%)</title><rect x="1135.1" y="245" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1138.15" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (38,146,871 samples, 0.07%)</title><rect x="384.9" y="245" width="0.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="387.90" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (52,087,019 samples, 0.09%)</title><rect x="193.8" y="389" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="196.77" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (90,529,934 samples, 0.16%)</title><rect x="440.5" y="373" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="443.53" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (23,569,146 samples, 0.04%)</title><rect x="1130.3" y="245" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1133.26" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (14,321,360 samples, 0.03%)</title><rect x="451.6" y="309" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="454.61" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (852,897,161 samples, 1.49%)</title><rect x="580.6" y="373" width="17.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="583.57" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42,856,742 samples, 0.07%)</title><rect x="1185.2" y="421" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1188.24" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (42,921,352 samples, 0.08%)</title><rect x="47.9" y="1029" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="50.88" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,849,094 samples, 0.13%)</title><rect x="694.3" y="357" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="697.30" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (33,449,480 samples, 0.06%)</title><rect x="1106.3" y="277" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1109.29" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (14,220,609 samples, 0.02%)</title><rect x="976.7" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="979.65" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (18,793,718 samples, 0.03%)</title><rect x="333.9" y="389" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="336.91" y="399.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (37,746,033 samples, 0.07%)</title><rect x="88.0" y="437" width="0.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="91.02" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (14,228,863 samples, 0.02%)</title><rect x="172.4" y="405" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="175.42" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (19,086,342 samples, 0.03%)</title><rect x="138.1" y="405" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="141.06" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (104,213,972 samples, 0.18%)</title><rect x="574.6" y="357" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="577.60" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::allocate (9,552,021 samples, 0.02%)</title><rect x="1143.0" y="213" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1145.98" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (66,463,015 samples, 0.12%)</title><rect x="1010.3" y="277" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1013.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (37,894,310 samples, 0.07%)</title><rect x="692.2" y="309" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="695.24" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (19,070,507 samples, 0.03%)</title><rect x="80.3" y="373" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="83.25" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,372,729 samples, 0.02%)</title><rect x="381.9" y="229" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="384.95" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (18,943,767 samples, 0.03%)</title><rect x="1032.8" y="277" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1035.83" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (104,356,637 samples, 0.18%)</title><rect x="850.3" y="229" width="2.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="853.33" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,415,861 samples, 0.02%)</title><rect x="1090.0" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1093.03" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (14,338,789 samples, 0.03%)</title><rect x="1181.9" y="405" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1184.91" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (14,291,155 samples, 0.03%)</title><rect x="1182.4" y="245" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1185.40" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (9,545,098 samples, 0.02%)</title><rect x="1065.6" y="213" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1068.59" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (687,314,561 samples, 1.20%)</title><rect x="1111.4" y="293" width="14.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1114.38" y="303.5" ></text>
</g>
<g >
<title>CNF::~CNF (23,844,859 samples, 0.04%)</title><rect x="1182.3" y="421" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1185.30" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (66,797,840 samples, 0.12%)</title><rect x="1171.2" y="213" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1174.20" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (80,619,120 samples, 0.14%)</title><rect x="330.0" y="293" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="332.99" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (14,290,492 samples, 0.03%)</title><rect x="805.3" y="277" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="808.27" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int const&amp;&gt; (9,560,234 samples, 0.02%)</title><rect x="339.5" y="373" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="342.50" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14,283,692 samples, 0.02%)</title><rect x="180.2" y="357" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="183.17" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (607,011,238 samples, 1.06%)</title><rect x="812.8" y="341" width="12.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="815.82" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (28,629,025 samples, 0.05%)</title><rect x="889.5" y="213" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="892.50" y="223.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (66,569,720 samples, 0.12%)</title><rect x="974.1" y="341" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="977.11" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9,542,030 samples, 0.02%)</title><rect x="1172.4" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1175.39" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33,378,185 samples, 0.06%)</title><rect x="1185.4" y="309" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.44" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23,479,184 samples, 0.04%)</title><rect x="1058.4" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1061.36" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="277" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="284.90" y="287.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (76,000,574 samples, 0.13%)</title><rect x="1168.5" y="261" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1171.46" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,539,572 samples, 0.02%)</title><rect x="10.8" y="949" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.78" y="959.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (2,137,414,198 samples, 3.74%)</title><rect x="457.8" y="437" width="44.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="460.79" y="447.5" >CNF:..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (23,428,270 samples, 0.04%)</title><rect x="89.2" y="469" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="92.20" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9,487,852 samples, 0.02%)</title><rect x="497.4" y="293" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="500.40" y="303.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (85,222,711 samples, 0.15%)</title><rect x="454.8" y="357" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="457.85" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (18,964,213 samples, 0.03%)</title><rect x="810.4" y="261" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="813.37" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,332,942 samples, 0.06%)</title><rect x="1183.9" y="309" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1186.87" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,281,469 samples, 0.02%)</title><rect x="1126.7" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1129.74" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (156,839,772 samples, 0.27%)</title><rect x="134.1" y="437" width="3.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="137.14" y="447.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (109,510,534 samples, 0.19%)</title><rect x="1054.7" y="229" width="2.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1057.73" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (204,419,949 samples, 0.36%)</title><rect x="278.5" y="357" width="4.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="281.46" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="165" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1152.55" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14,308,962 samples, 0.03%)</title><rect x="748.4" y="229" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="751.41" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_lower_bound (14,306,835 samples, 0.03%)</title><rect x="859.6" y="309" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="862.55" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,562,259 samples, 0.02%)</title><rect x="596.5" y="325" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="599.51" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (9,555,615 samples, 0.02%)</title><rect x="449.7" y="309" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="452.74" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (47,681,728 samples, 0.08%)</title><rect x="25.6" y="885" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="28.58" y="895.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,553,284 samples, 0.02%)</title><rect x="1150.6" y="261" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1153.64" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (123,298,789 samples, 0.22%)</title><rect x="627.7" y="341" width="2.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="630.65" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (19,102,111 samples, 0.03%)</title><rect x="1143.2" y="165" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1146.17" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (166,617,044 samples, 0.29%)</title><rect x="617.3" y="325" width="3.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="620.27" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (42,433,813 samples, 0.07%)</title><rect x="1002.5" y="261" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1005.53" y="271.5" ></text>
</g>
<g >
<title>operator new (90,529,934 samples, 0.16%)</title><rect x="440.5" y="293" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="443.53" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (299,221,443 samples, 0.52%)</title><rect x="502.1" y="405" width="6.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="505.11" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (75,828,381 samples, 0.13%)</title><rect x="933.5" y="213" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="936.53" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (33,059,860 samples, 0.06%)</title><rect x="194.8" y="421" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="197.84" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (18,938,877 samples, 0.03%)</title><rect x="345.7" y="437" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="348.70" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,526,610 samples, 0.02%)</title><rect x="1040.1" y="213" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1043.06" y="223.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (28,221,297 samples, 0.05%)</title><rect x="1038.8" y="325" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1041.80" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,498,855 samples, 0.02%)</title><rect x="1176.4" y="229" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1179.41" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,546,777 samples, 0.02%)</title><rect x="69.2" y="565" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="72.16" y="575.5" ></text>
</g>
<g >
<title>operator new (90,157,708 samples, 0.16%)</title><rect x="683.2" y="261" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="686.21" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (52,364,748 samples, 0.09%)</title><rect x="331.7" y="389" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="334.65" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="277" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1179.80" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,421,894 samples, 0.02%)</title><rect x="175.2" y="421" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="178.17" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (104,735,400 samples, 0.18%)</title><rect x="1054.7" y="197" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1057.73" y="207.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (28,515,131 samples, 0.05%)</title><rect x="75.0" y="485" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="77.95" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,666,229,680 samples, 2.91%)</title><rect x="760.6" y="373" width="34.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="763.57" y="383.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (61,771,707 samples, 0.11%)</title><rect x="10.0" y="997" width="1.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>operator new (42,892,490 samples, 0.08%)</title><rect x="1085.1" y="181" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1088.14" y="191.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (71,513,696 samples, 0.13%)</title><rect x="573.0" y="421" width="1.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="576.03" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (133,497,523 samples, 0.23%)</title><rect x="746.0" y="357" width="2.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="749.04" y="367.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (531,443,521 samples, 0.93%)</title><rect x="1047.9" y="309" width="10.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1050.88" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (9,524,752 samples, 0.02%)</title><rect x="1179.0" y="357" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1181.96" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (80,630,289 samples, 0.14%)</title><rect x="931.8" y="261" width="1.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="934.77" y="271.5" ></text>
</g>
<g >
<title>CNF::CNF (9,458,364 samples, 0.02%)</title><rect x="70.8" y="565" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="73.83" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,556,100 samples, 0.02%)</title><rect x="692.2" y="229" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="695.24" y="239.5" ></text>
</g>
<g >
<title>operator new (108,784,327 samples, 0.19%)</title><rect x="141.5" y="293" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="144.49" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (19,067,786 samples, 0.03%)</title><rect x="1188.6" y="453" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.56" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (33,208,110 samples, 0.06%)</title><rect x="14.0" y="917" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="17.01" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="181" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="938.10" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (9,558,387 samples, 0.02%)</title><rect x="973.5" y="245" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="976.52" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (133,020,364 samples, 0.23%)</title><rect x="504.8" y="197" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="507.76" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (260,974,682 samples, 0.46%)</title><rect x="1049.1" y="245" width="5.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1052.05" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (691,117,031 samples, 1.21%)</title><rect x="1067.4" y="293" width="14.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1070.45" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (61,071,295 samples, 0.11%)</title><rect x="968.7" y="309" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="971.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (374,790,683 samples, 0.66%)</title><rect x="512.4" y="389" width="7.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="515.40" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14,310,020 samples, 0.03%)</title><rect x="345.3" y="341" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="348.31" y="351.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (512,420,634 samples, 0.90%)</title><rect x="903.8" y="341" width="10.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="906.79" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (1,197,309,152 samples, 2.09%)</title><rect x="475.7" y="389" width="24.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="478.73" y="399.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,488,560 samples, 0.02%)</title><rect x="124.8" y="405" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="127.84" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,935,877,892 samples, 3.39%)</title><rect x="520.1" y="405" width="40.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="523.13" y="415.5" >std..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (260,974,682 samples, 0.46%)</title><rect x="1049.1" y="229" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1052.05" y="239.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9,544,311 samples, 0.02%)</title><rect x="106.6" y="341" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="109.63" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (42,983,229 samples, 0.08%)</title><rect x="572.0" y="389" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="575.04" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (47,735,044 samples, 0.08%)</title><rect x="1147.3" y="229" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1150.29" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (47,363,790 samples, 0.08%)</title><rect x="391.1" y="357" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="394.06" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (19,038,170 samples, 0.03%)</title><rect x="1141.5" y="181" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1144.51" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="149" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="938.10" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (161,796,521 samples, 0.28%)</title><rect x="630.4" y="229" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="633.39" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,539,864 samples, 0.02%)</title><rect x="1184.9" y="389" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1187.95" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,741,610 samples, 0.02%)</title><rect x="1157.9" y="69" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1160.88" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (18,794,730 samples, 0.03%)</title><rect x="692.5" y="245" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="695.54" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (37,788,708 samples, 0.07%)</title><rect x="499.7" y="293" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="502.66" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (89,823,540 samples, 0.16%)</title><rect x="1057.0" y="261" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1060.00" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase_aux (42,119,081 samples, 0.07%)</title><rect x="1109.3" y="261" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1112.33" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase_at_end (9,448,075 samples, 0.02%)</title><rect x="378.9" y="389" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="381.95" y="399.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (1,027,612,728 samples, 1.80%)</title><rect x="1108.2" y="309" width="21.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1111.16" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (42,983,229 samples, 0.08%)</title><rect x="572.0" y="357" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="575.04" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="421" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.99" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (147,601,949 samples, 0.26%)</title><rect x="381.8" y="293" width="3.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="384.85" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (18,735,548 samples, 0.03%)</title><rect x="1183.5" y="373" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1186.48" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (19,070,507 samples, 0.03%)</title><rect x="80.3" y="389" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="83.25" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,672,470,443 samples, 2.93%)</title><rect x="292.7" y="437" width="34.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="295.74" y="447.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="197" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1131.21" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (57,238,906 samples, 0.10%)</title><rect x="86.2" y="469" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="89.15" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (23,569,146 samples, 0.04%)</title><rect x="1130.3" y="197" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1133.26" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,304,557 samples, 0.03%)</title><rect x="806.1" y="229" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="809.06" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (9,452,256 samples, 0.02%)</title><rect x="935.1" y="165" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="938.10" y="175.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,551,908 samples, 0.02%)</title><rect x="103.6" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="106.60" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14,310,020 samples, 0.03%)</title><rect x="345.3" y="373" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="348.31" y="383.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (57,060,311 samples, 0.10%)</title><rect x="809.2" y="325" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="812.20" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_mbegin (14,302,010 samples, 0.03%)</title><rect x="1016.4" y="277" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1019.42" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (28,578,553 samples, 0.05%)</title><rect x="1180.8" y="229" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1183.83" y="239.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,568,974 samples, 0.02%)</title><rect x="74.2" y="533" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="77.17" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;int&gt;::operator-- (9,232,690 samples, 0.02%)</title><rect x="49.3" y="1013" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="52.35" y="1023.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (14,317,027 samples, 0.03%)</title><rect x="69.2" y="597" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="72.16" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,936,261 samples, 0.03%)</title><rect x="456.6" y="389" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="459.61" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (42,886,191 samples, 0.08%)</title><rect x="1180.7" y="341" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1183.73" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,212,945 samples, 0.02%)</title><rect x="38.0" y="981" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="41.02" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (146,924,473 samples, 0.26%)</title><rect x="275.4" y="389" width="3.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="278.43" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (104,652,474 samples, 0.18%)</title><rect x="196.4" y="373" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="199.41" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (33,086,435 samples, 0.06%)</title><rect x="77.6" y="469" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="80.60" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (19,065,538 samples, 0.03%)</title><rect x="98.9" y="469" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="101.90" y="479.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (23,854,576 samples, 0.04%)</title><rect x="80.3" y="453" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="83.25" y="463.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (100,051,529 samples, 0.18%)</title><rect x="247.5" y="453" width="2.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="250.49" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (252,003,679 samples, 0.44%)</title><rect x="1081.7" y="309" width="5.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1084.71" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,858,190 samples, 0.04%)</title><rect x="1178.3" y="213" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1181.27" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28,305,630 samples, 0.05%)</title><rect x="852.5" y="245" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="855.48" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (14,232,362 samples, 0.02%)</title><rect x="84.8" y="501" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="87.78" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (90,374,988 samples, 0.16%)</title><rect x="795.2" y="341" width="1.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="798.25" y="351.5" ></text>
</g>
<g >
<title>CNF::CNF (193,619,990 samples, 0.34%)</title><rect x="849.1" y="373" width="4.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="852.07" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (122,946,383 samples, 0.22%)</title><rect x="927.6" y="309" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="930.56" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,449,901 samples, 0.02%)</title><rect x="1060.4" y="293" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1063.42" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (38,143,848 samples, 0.07%)</title><rect x="1037.0" y="277" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1040.03" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,551,150 samples, 0.02%)</title><rect x="1033.0" y="261" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1036.02" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (42,856,742 samples, 0.07%)</title><rect x="1185.2" y="405" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.24" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (75,849,094 samples, 0.13%)</title><rect x="694.3" y="341" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="697.30" y="351.5" ></text>
</g>
<g >
<title>_int_free (19,089,052 samples, 0.03%)</title><rect x="449.1" y="277" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="452.06" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (14,315,693 samples, 0.03%)</title><rect x="693.6" y="389" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="696.61" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (38,165,700 samples, 0.07%)</title><rect x="1149.6" y="245" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1152.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (9,560,234 samples, 0.02%)</title><rect x="339.5" y="357" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="342.50" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (47,700,153 samples, 0.08%)</title><rect x="242.2" y="341" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="245.18" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14,288,625 samples, 0.02%)</title><rect x="1176.8" y="213" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1179.80" y="223.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, CNF::propagate_var_single_value (47,683,931 samples, 0.08%)</title><rect x="128.7" y="485" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="131.65" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (33,303,043 samples, 0.06%)</title><rect x="802.7" y="213" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="805.72" y="223.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (23,791,740 samples, 0.04%)</title><rect x="200.6" y="309" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="203.62" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9,514,346 samples, 0.02%)</title><rect x="976.8" y="261" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="979.75" y="271.5" ></text>
</g>
<g >
<title>tcache_get (14,265,575 samples, 0.02%)</title><rect x="442.1" y="261" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="445.10" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (28,575,671 samples, 0.05%)</title><rect x="805.0" y="293" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="807.98" y="303.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (9,553,284 samples, 0.02%)</title><rect x="1150.6" y="277" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1153.64" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (14,218,316 samples, 0.02%)</title><rect x="108.2" y="421" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="111.20" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (47,380,305 samples, 0.08%)</title><rect x="1065.8" y="245" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1068.78" y="255.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (47,368,160 samples, 0.08%)</title><rect x="1037.8" y="341" width="1.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1040.82" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,540,369 samples, 0.02%)</title><rect x="1175.2" y="229" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1178.23" y="239.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (165,695,529 samples, 0.29%)</title><rect x="10.0" y="1029" width="3.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (133,472,643 samples, 0.23%)</title><rect x="382.1" y="229" width="2.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="385.14" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (228,553,319 samples, 0.40%)</title><rect x="492.7" y="309" width="4.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="495.68" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (37,947,628 samples, 0.07%)</title><rect x="124.1" y="453" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="127.05" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (19,039,287 samples, 0.03%)</title><rect x="897.5" y="261" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="900.52" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (493,534,819 samples, 0.86%)</title><rect x="129.6" y="501" width="10.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="132.64" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (19,041,742 samples, 0.03%)</title><rect x="76.0" y="533" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="79.03" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9,529,373 samples, 0.02%)</title><rect x="1173.9" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1176.95" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_put_node (19,102,478 samples, 0.03%)</title><rect x="895.6" y="261" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="898.56" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (9,510,790 samples, 0.02%)</title><rect x="1186.8" y="453" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1189.81" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9,544,088 samples, 0.02%)</title><rect x="79.9" y="405" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.86" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~set (52,366,037 samples, 0.09%)</title><rect x="972.1" y="341" width="1.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="975.15" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (90,157,708 samples, 0.16%)</title><rect x="683.2" y="309" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="686.21" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (32,975,642 samples, 0.06%)</title><rect x="103.8" y="437" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="106.80" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="245" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="284.90" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int&gt; (71,011,869 samples, 0.12%)</title><rect x="1127.4" y="277" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1130.42" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (128,244,787 samples, 0.22%)</title><rect x="121.3" y="437" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.31" y="447.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (204,419,949 samples, 0.36%)</title><rect x="278.5" y="373" width="4.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="281.46" y="383.5" ></text>
</g>
<g >
<title>operator new (51,890,659 samples, 0.09%)</title><rect x="1005.1" y="229" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.07" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (109,678,713 samples, 0.19%)</title><rect x="746.0" y="261" width="2.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="749.04" y="271.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,248,663,744 samples, 2.18%)</title><rect x="249.7" y="453" width="25.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="252.65" y="463.5" >C..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (19,019,738 samples, 0.03%)</title><rect x="1105.9" y="277" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1108.90" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (9,499,335 samples, 0.02%)</title><rect x="976.5" y="245" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="979.46" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (28,396,766 samples, 0.05%)</title><rect x="1144.0" y="277" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1146.96" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::~_Rb_tree (9,538,114 samples, 0.02%)</title><rect x="1188.0" y="453" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1190.99" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (118,765,906 samples, 0.21%)</title><rect x="576.8" y="389" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="579.75" y="399.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (852,897,161 samples, 1.49%)</title><rect x="580.6" y="389" width="17.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="583.57" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (47,071,020 samples, 0.08%)</title><rect x="975.5" y="245" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="978.49" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (9,404,720 samples, 0.02%)</title><rect x="804.6" y="245" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="807.59" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (80,482,751 samples, 0.14%)</title><rect x="843.4" y="293" width="1.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="846.39" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (289,631,829 samples, 0.51%)</title><rect x="231.1" y="405" width="6.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.11" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (23,810,107 samples, 0.04%)</title><rect x="970.3" y="261" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="973.28" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (76,202,521 samples, 0.13%)</title><rect x="370.9" y="309" width="1.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="373.90" y="319.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (19,012,107 samples, 0.03%)</title><rect x="1129.4" y="309" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1132.38" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (18,964,213 samples, 0.03%)</title><rect x="810.4" y="309" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="813.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (1,251,696,442 samples, 2.19%)</title><rect x="860.6" y="341" width="25.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="863.64" y="351.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (151,967,535 samples, 0.27%)</title><rect x="938.4" y="325" width="3.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="941.41" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (9,563,181 samples, 0.02%)</title><rect x="896.2" y="245" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="899.15" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (18,993,157 samples, 0.03%)</title><rect x="627.0" y="373" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="629.97" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_allocate (109,190,018 samples, 0.19%)</title><rect x="743.7" y="325" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="746.69" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (9,516,908 samples, 0.02%)</title><rect x="897.1" y="325" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="900.13" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (9,549,566 samples, 0.02%)</title><rect x="924.1" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="927.14" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (56,954,086 samples, 0.10%)</title><rect x="847.2" y="357" width="1.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="850.20" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, int const*, int*&gt; (9,544,772 samples, 0.02%)</title><rect x="143.7" y="277" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="146.73" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (23,844,690 samples, 0.04%)</title><rect x="1037.1" y="181" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1040.13" y="191.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (47,263,424 samples, 0.08%)</title><rect x="177.9" y="469" width="1.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="180.92" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (28,625,396 samples, 0.05%)</title><rect x="126.0" y="437" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="129.01" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (41,850,406 samples, 0.07%)</title><rect x="289.1" y="389" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="292.14" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::find (123,937,830 samples, 0.22%)</title><rect x="81.2" y="501" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="84.24" y="511.5" ></text>
</g>
<g >
<title>CNF::find_pure_literals (195,363,844 samples, 0.34%)</title><rect x="80.7" y="533" width="4.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="83.75" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (47,700,153 samples, 0.08%)</title><rect x="242.2" y="405" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="245.18" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,250,868 samples, 0.02%)</title><rect x="897.6" y="213" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="900.62" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (28,308,086 samples, 0.05%)</title><rect x="516.2" y="357" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="519.21" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_erase (9,544,777 samples, 0.02%)</title><rect x="931.5" y="325" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="934.47" y="335.5" ></text>
</g>
<g >
<title>std::remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, CNF::propagate_var_single_value (19,065,538 samples, 0.03%)</title><rect x="98.9" y="501" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="101.90" y="511.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (669,752,312 samples, 1.17%)</title><rect x="478.3" y="341" width="13.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="481.27" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::allocate (19,055,337 samples, 0.03%)</title><rect x="1107.3" y="213" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1110.28" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (28,618,647 samples, 0.05%)</title><rect x="1149.6" y="181" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1152.55" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt;::allocate (19,039,287 samples, 0.03%)</title><rect x="897.5" y="245" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="900.52" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::allocate (37,945,453 samples, 0.07%)</title><rect x="563.6" y="309" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="566.62" y="319.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (42,507,618 samples, 0.07%)</title><rect x="1089.2" y="245" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1092.16" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (137,408,177 samples, 0.24%)</title><rect x="843.4" y="325" width="2.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="846.39" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (9,549,625 samples, 0.02%)</title><rect x="1183.2" y="373" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.19" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (76,098,946 samples, 0.13%)</title><rect x="96.9" y="501" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="99.94" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (23,905,286 samples, 0.04%)</title><rect x="1177.7" y="325" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.68" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; const*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (23,844,979 samples, 0.04%)</title><rect x="1143.2" y="229" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.17" y="239.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (1,248,663,744 samples, 2.18%)</title><rect x="249.7" y="469" width="25.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="252.65" y="479.5" >C..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (43,008,086 samples, 0.08%)</title><rect x="1156.2" y="213" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1159.21" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (23,569,146 samples, 0.04%)</title><rect x="1130.3" y="261" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1133.26" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (28,609,525 samples, 0.05%)</title><rect x="967.0" y="293" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="969.96" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_create_node&lt;int&gt; (42,716,492 samples, 0.07%)</title><rect x="335.1" y="373" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="338.08" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node::operator (9,558,387 samples, 0.02%)</title><rect x="973.5" y="293" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="976.52" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (28,576,590 samples, 0.05%)</title><rect x="204.2" y="389" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="207.24" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;int, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::erase (266,986,360 samples, 0.47%)</title><rect x="855.1" y="357" width="5.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="858.12" y="367.5" ></text>
</g>
<g >
<title>_int_free (9,522,265 samples, 0.02%)</title><rect x="107.9" y="341" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="110.91" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator++ (14,250,806 samples, 0.02%)</title><rect x="900.1" y="325" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="903.07" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (61,949,698 samples, 0.11%)</title><rect x="272.1" y="357" width="1.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="275.09" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (23,576,231 samples, 0.04%)</title><rect x="376.7" y="293" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="379.69" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (546,982,801 samples, 0.96%)</title><rect x="361.4" y="389" width="11.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="364.37" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (146,033,114 samples, 0.26%)</title><rect x="1060.6" y="309" width="3.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1063.61" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::vector (193,619,990 samples, 0.34%)</title><rect x="849.1" y="357" width="4.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="852.07" y="367.5" ></text>
</g>
<g >
<title>CNF::propagate_var_values (237,342,371 samples, 0.42%)</title><rect x="99.8" y="517" width="4.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="102.78" y="527.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (28,420,934 samples, 0.05%)</title><rect x="1088.5" y="293" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1091.47" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,455,917 samples, 0.02%)</title><rect x="700.3" y="341" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="703.29" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (47,456,399 samples, 0.08%)</title><rect x="518.3" y="357" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="521.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::~vector (47,631,198 samples, 0.08%)</title><rect x="1180.7" y="389" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1183.73" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (18,856,252 samples, 0.03%)</title><rect x="1128.9" y="261" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1131.89" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (213,939,282 samples, 0.37%)</title><rect x="630.2" y="325" width="4.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="633.20" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (18,794,730 samples, 0.03%)</title><rect x="692.5" y="277" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="695.54" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_drop_node (9,545,098 samples, 0.02%)</title><rect x="1065.6" y="245" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1068.59" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (61,987,469 samples, 0.11%)</title><rect x="246.2" y="421" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="249.21" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (19,059,329 samples, 0.03%)</title><rect x="195.9" y="453" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="198.92" y="463.5" ></text>
</g>
<g >
<title>unlink_chunk (9,541,148 samples, 0.02%)</title><rect x="105.3" y="325" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="108.26" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_&lt;int, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt; (156,523,647 samples, 0.27%)</title><rect x="445.8" y="389" width="3.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="448.83" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*, std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,544,215 samples, 0.02%)</title><rect x="1167.9" y="213" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1170.87" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_S_left (279,867,874 samples, 0.49%)</title><rect x="880.7" y="309" width="5.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="883.70" y="319.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (90,104,883 samples, 0.16%)</title><rect x="452.8" y="405" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="455.79" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;int&gt;::operator++ (14,218,316 samples, 0.02%)</title><rect x="108.2" y="437" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="111.20" y="447.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;&gt; (132,662,267 samples, 0.23%)</title><rect x="850.3" y="293" width="2.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="853.33" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::equal_range (57,047,954 samples, 0.10%)</title><rect x="148.7" y="437" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="151.73" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (61,904,714 samples, 0.11%)</title><rect x="497.6" y="341" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="500.60" y="351.5" ></text>
</g>
<g >
<title>tcache_put (14,325,598 samples, 0.03%)</title><rect x="143.1" y="245" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="146.14" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_node (23,437,111 samples, 0.04%)</title><rect x="1128.2" y="213" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1131.21" y="223.5" ></text>
</g>
<g >
<title>CNF::CNF (321,312,248 samples, 0.56%)</title><rect x="379.1" y="437" width="6.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="382.14" y="447.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int&gt; (90,507,035 samples, 0.16%)</title><rect x="247.6" y="389" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="250.59" y="399.5" ></text>
</g>
<g >
<title>CNF::propagate_var_single_value (1,807,717,392 samples, 3.16%)</title><rect x="811.5" y="373" width="37.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="814.46" y="383.5" >CNF..</text>
</g>
<g >
<title>CNF::propagate_var_single_value (66,686,491 samples, 0.12%)</title><rect x="78.5" y="469" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="81.48" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (38,100,654 samples, 0.07%)</title><rect x="105.7" y="277" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="108.65" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;*&gt; (9,347,291 samples, 0.02%)</title><rect x="743.3" y="293" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="746.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (57,260,548 samples, 0.10%)</title><rect x="624.3" y="373" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="627.34" y="383.5" ></text>
</g>
<g >
<title>CNF::find_unit_clauses (33,203,016 samples, 0.06%)</title><rect x="245.4" y="469" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="248.43" y="479.5" ></text>
</g>
<g >
<title>[a.out] (9,178,321 samples, 0.02%)</title><rect x="198.7" y="277" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="201.67" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;CNF::propagate_var_single_value (9,499,335 samples, 0.02%)</title><rect x="976.5" y="277" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="979.46" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;int&gt; &gt; &gt;::deallocate (19,102,478 samples, 0.03%)</title><rect x="895.6" y="245" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="898.56" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, int const*, int*&gt; (28,547,572 samples, 0.05%)</title><rect x="281.9" y="261" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="284.90" y="271.5" ></text>
</g>
</g>
</svg>
